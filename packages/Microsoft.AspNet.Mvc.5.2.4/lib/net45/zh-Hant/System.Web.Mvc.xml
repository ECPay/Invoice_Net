<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Mvc</name>
  </assembly>
  <members>
    <member name="T:System.Web.Mvc.AcceptVerbsAttribute">
      <summary>表示用來指定動作方法將回應哪些 HTTP 動詞命令的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>使用動作方法所將回應的 HTTP 動詞命令清單，初始化 <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" /> 類別的新執行個體。</summary>
      <param name="verbs">動作方法所將回應的 HTTP 動詞命令。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="verbs" /> 參數為 null 或長度為零。</exception>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.Web.Mvc.HttpVerbs)">
      <summary>使用動作方法所將回應的 HTTP 動詞命令，初始化 <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" /> 類別的新執行個體。</summary>
      <param name="verbs">動作方法所將回應的 HTTP 動詞命令。</param>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>判斷指定之方法資訊對於指定的控制器內容是否有效。</summary>
      <returns>如果方法資訊有效，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="methodInfo">方法資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext " /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.AcceptVerbsAttribute.Verbs">
      <summary>取得或設定動作方法所將回應的 HTTP 動詞命令清單。</summary>
      <returns>動作方法所將回應的 HTTP 動詞命令清單。</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionDescriptor">
      <summary>提供動作方法的相關資訊，例如其名稱、控制器、參數、屬性和篩選條件。</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ActionDescriptor" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ActionName">
      <summary>取得動作方法的名稱。</summary>
      <returns>動作方法的名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ControllerDescriptor">
      <summary>取得控制器描述元。</summary>
      <returns>控制器描述元。</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的參數和控制器內容，執行動作方法。</summary>
      <returns>執行動作方法的結果。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="parameters">動作方法的參數。</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性陣列，但不包括具名屬性。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.TypeLoadException">無法載入自訂屬性型別。</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">針對此成員定義了一個以上的型別 <paramref name="attributeType" /> 屬性。</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性陣列，並依型別識別。</summary>
      <returns>自訂屬性的陣列，如果指定之型別的自訂屬性不存在則為空陣列。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.TypeLoadException">無法載入自訂屬性型別。</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">針對此成員定義了一個以上的型別 <paramref name="attributeType" /> 屬性。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attritubeType" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>取得篩選條件屬性。</summary>
      <returns>篩選條件屬性。</returns>
      <param name="useCache">true 表示使用快取，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilters">
      <summary>傳回與此動作方法相關聯的篩選條件。</summary>
      <returns>與此動作方法相關聯的篩選條件。</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetParameters">
      <summary>傳回動作方法的參數。</summary>
      <returns>動作方法的參數。</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetSelectors">
      <summary>傳回動作方法選取器。</summary>
      <returns>動作方法選取器。</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>判斷是否已為此成員定義指定之屬性型別的一個或多個執行個體。</summary>
      <returns>如果已定義此成員的 <paramref name="attributeType" />，則為 true，否則為 false。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attritubeType" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.UniqueId">
      <summary>使用延遲初始設定取得動作描述元的唯一 ID。</summary>
      <returns>唯一 ID。</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutedContext">
      <summary>為 <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> 類別的 ActionExecuted 方法提供內容。</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ActionExecutedContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Boolean,System.Exception)">
      <summary>初始化 <see cref="T:System.Web.Mvc.ActionExecutedContext" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">動作方法描述元。</param>
      <param name="canceled">如果動作已取消，則為 true。</param>
      <param name="exception">例外狀況物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actionDescriptor" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ActionDescriptor">
      <summary>取得或設定動作描述元。</summary>
      <returns>動作描述元。</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Canceled">
      <summary>取得或設定值，這個值表示此 <see cref="T:System.Web.Mvc.ActionExecutedContext" /> 物件已取消。</summary>
      <returns>如果內容已取消，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Exception">
      <summary>取得或設定動作方法執行期間發生的例外狀況 (如果有的話)。</summary>
      <returns>動作方法執行期間發生的例外狀況。</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ExceptionHandled">
      <summary>取得或設定值，指出是否已處理例外狀況。</summary>
      <returns>如果已處理例外狀況，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Result">
      <summary>取得或設定動作方法傳回的結果。</summary>
      <returns>動作方法傳回的結果。</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutingContext">
      <summary>為 <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> 類別的 ActionExecuting 方法提供內容。</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ActionExecutingContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的控制器內容、動作描述元和動作方法參數，初始化 <see cref="T:System.Web.Mvc.ActionExecutingContext" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">動作描述元。</param>
      <param name="actionParameters">動作方法參數。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ActionParameters" /> 或 <paramref name="actionDescriptor" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionDescriptor">
      <summary>取得或設定動作描述元。</summary>
      <returns>動作描述元。</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionParameters">
      <summary>取得或設定動作方法參數。</summary>
      <returns>動作方法參數。</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.Result">
      <summary>取得或設定動作方法傳回的結果。</summary>
      <returns>動作方法傳回的結果。</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionFilterAttribute">
      <summary>表示篩選條件屬性的基底類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>在動作方法執行之後，由 ASP.NET MVC 架構呼叫。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>在動作方法執行之前，由 ASP.NET MVC 架構呼叫。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>在動作結果執行之後，由 ASP.NET MVC 架構呼叫。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>在動作結果執行之前，由 ASP.NET MVC 架構呼叫。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="T:System.Web.Mvc.ActionMethodSelectorAttribute">
      <summary>表示用來影響動作方法選取範圍的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ActionMethodSelectorAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>判斷動作方法選取範圍對於指定的控制器內容是否有效。</summary>
      <returns>如果動作方法選取範圍對於指定的控制器內容有效，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="methodInfo">動作方法相關資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.ActionNameAttribute">
      <summary>表示用來當做動作名稱的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Web.Mvc.ActionNameAttribute" /> 類別的新執行個體。</summary>
      <param name="name">動作的名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>判斷動作名稱在指定的控制器內容範圍內是否有效。</summary>
      <returns>如果動作名稱在指定的控制器內容內有效，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionName">動作的名稱。</param>
      <param name="methodInfo">動作方法相關資訊。</param>
    </member>
    <member name="P:System.Web.Mvc.ActionNameAttribute.Name">
      <summary>取得或設定動作的名稱。</summary>
      <returns>動作的名稱。</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionNameSelectorAttribute">
      <summary>表示影響動作方法選取範圍的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ActionNameSelectorAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>判斷動作名稱在指定的控制器內容中是否有效。</summary>
      <returns>如果動作名稱在指定的控制器內容中有效，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionName">動作的名稱。</param>
      <param name="methodInfo">動作方法相關資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.ActionResult">
      <summary>表示動作方法的結果。</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ActionResult" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>以繼承自 <see cref="T:System.Web.Mvc.ActionResult" /> 類別的自訂型別，來處理動作方法的結果。</summary>
      <param name="context">執行結果所在的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
    </member>
    <member name="T:System.Web.Mvc.ActionSelector">
      <summary>表示委派，這個委派包含選取動作方法的邏輯。</summary>
    </member>
    <member name="T:System.Web.Mvc.AdditionalMetadataAttribute">
      <summary>提供會實作 <see cref="T:System.Web.Mvc.IMetadataAware" /> 介面以支援額外中繼資料的類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.#ctor(System.String,System.Object)">
      <summary>初始化 <see cref="T:System.Web.Mvc.AdditionalMetadataAttribute" /> 類別的新執行個體。</summary>
      <param name="name">模型中繼資料的名稱。</param>
      <param name="value">模型中繼資料的值。</param>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Name">
      <summary>取得其他中繼資料屬性的名稱。</summary>
      <returns>其他中繼資料屬性的名稱。</returns>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>提供中繼資料給模型中繼資料建立程序。</summary>
      <param name="metadata">中繼資料。</param>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.TypeId">
      <summary>取得其他中繼資料屬性的型別。</summary>
      <returns>其他中繼資料屬性的型別。</returns>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Value">
      <summary>取得其他中繼資料屬性的值。</summary>
      <returns>其他中繼資料屬性的值。</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper">
      <summary>表示支援在 AJAX 案例中將 HTML 呈現於檢視內。</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>使用指定的檢視內容和檢視資料容器，初始化 <see cref="T:System.Web.Mvc.AjaxHelper" /> 類別的新執行個體。</summary>
      <param name="viewContext">檢視內容。</param>
      <param name="viewDataContainer">檢視資料容器。</param>
      <exception cref="T:System.ArgumentNullException">參數的其中之一或兩者都是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>使用指定的檢視內容、檢視資料容器和路由集合，初始化 <see cref="T:System.Web.Mvc.AjaxHelper" /> 類別的新執行個體。</summary>
      <param name="viewContext">檢視內容。</param>
      <param name="viewDataContainer">檢視資料容器。</param>
      <param name="routeCollection">URL 路徑集合。</param>
      <exception cref="T:System.ArgumentNullException">一個或多個參數為 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.GlobalizationScriptPath">
      <summary>取得或設定用於全球化指令碼檔案之位置的根路徑。</summary>
      <returns>儲存全球化指令碼檔案的資料夾位置。預設位置為 "~/Scripts/Globalization"。</returns>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.JavaScriptStringEncode(System.String)">
      <summary>序列化指定的訊息並傳回產生的 JSON 格式化字串。</summary>
      <returns>JSON 格式化字串形式的序列化訊息。</returns>
      <param name="message">要序列化的訊息。</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.RouteCollection">
      <summary>取得應用程式的 URL 路徑集合。</summary>
      <returns>應用程式的路徑集合。</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewBag">
      <summary>取得 ViewBag。</summary>
      <returns>ViewBag。</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewContext">
      <summary>取得有關檢視的內容資訊。</summary>
      <returns>檢視的內容。</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewData">
      <summary>取得目前的檢視資料字典。</summary>
      <returns>檢視資料字典。</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewDataContainer">
      <summary>取得檢視資料容器。</summary>
      <returns>檢視資料容器。</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper`1">
      <summary>表示支援在 AJAX 案例中將 HTML 呈現於強型別檢視內。</summary>
      <typeparam name="TModel">模型的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>使用指定的檢視內容和檢視資料容器，初始化 <see cref="T:System.Web.Mvc.AjaxHelper`1" /> 類別的新執行個體。</summary>
      <param name="viewContext">檢視內容。</param>
      <param name="viewDataContainer">檢視資料容器。</param>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>使用指定的檢視內容、檢視資料容器和 URL 路徑集合，初始化 <see cref="T:System.Web.Mvc.AjaxHelper`1" /> 類別的新執行個體。</summary>
      <param name="viewContext">檢視內容。</param>
      <param name="viewDataContainer">檢視資料容器。</param>
      <param name="routeCollection">URL 路徑集合。</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewBag">
      <summary>取得 ViewBag。</summary>
      <returns>ViewBag。</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewData">
      <summary>取得檢視資料字典的強型別版本。</summary>
      <returns>檢視的強型別資料字典。</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxRequestExtensions">
      <summary>表示類別，這個類別會透過增加判斷 HTTP 要求是否為 AJAX 要求的功能來擴充 <see cref="T:System.Web.HttpRequestBase" /> 類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxRequestExtensions.IsAjaxRequest(System.Web.HttpRequestBase)">
      <summary>判斷指定的 HTTP 要求是否為 AJAX 要求。</summary>
      <returns>如果指定的 HTTP 要求是 AJAX 要求，則為 true，否則為 false。</returns>
      <param name="request">HTTP 要求。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 參數為 null (在 Visual Basic 中為 Nothing)。</exception>
    </member>
    <member name="T:System.Web.Mvc.AllowAnonymousAttribute">
      <summary>表示將控制器和動作標記為在授權期間略過 <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowAnonymousAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.AllowAnonymousAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Web.Mvc.AllowHtmlAttribute">
      <summary>藉由略過屬性的要求驗證，允許要求在模型繫結期間包含 HTML 標記 (強烈建議您讓應用程式明確檢查所有停用要求驗證的模型，以避免指令碼擅用)。</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.AllowHtmlAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>這個方法支援 ASP.NET MVC 驗證基礎結構，但不建議直接在程式碼中使用。</summary>
      <param name="metadata">模型中繼資料。</param>
    </member>
    <member name="T:System.Web.Mvc.AreaReference">
      <summary>控制當建構 <see cref="T:System.Web.Mvc.RemoteAttribute" /> 時如何解譯控制器。</summary>
    </member>
    <member name="F:System.Web.Mvc.AreaReference.UseCurrent">
      <summary>在目前區域中尋找控制器。</summary>
    </member>
    <member name="F:System.Web.Mvc.AreaReference.UseRoot">
      <summary>在根區域中尋找控制器。</summary>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistration">
      <summary>提供在 ASP.NET MVC 應用程式中註冊一個或多個區域的方式。</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.AreaRegistration" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistration.AreaName">
      <summary>取得要註冊之區域的名稱。</summary>
      <returns>要註冊的區域名稱。</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas">
      <summary>註冊 ASP.NET MVC 應用程式中的所有區域。</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas(System.Object)">
      <summary>使用指定的使用者定義資訊，註冊 ASP.NET MVC 應用程式內的所有區域。</summary>
      <param name="state">包含要傳遞給此區域之使用者定義資訊的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
      <summary>使用指定之區域的內容資訊，註冊 ASP.NET MVC 應用程式內的一個區域。</summary>
      <param name="context">封裝註冊區域所需的資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistrationContext">
      <summary>封裝註冊 ASP.NET MVC 應用程式內之區域所需的資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection)">
      <summary>使用指定的區域名稱和路由集合，初始化 <see cref="T:System.Web.Mvc.AreaRegistrationContext" /> 類別的新執行個體。</summary>
      <param name="areaName">要註冊的區域名稱。</param>
      <param name="routes">應用程式的路徑集合。</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection,System.Object)">
      <summary>使用指定的區域名稱、路由集合和使用者定義資料，初始化 <see cref="T:System.Web.Mvc.AreaRegistrationContext" /> 類別的新執行個體。</summary>
      <param name="areaName">要註冊的區域名稱。</param>
      <param name="routes">應用程式的路徑集合。</param>
      <param name="state">包含要傳遞給此區域之使用者定義資訊的物件。</param>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.AreaName">
      <summary>取得要註冊之區域的名稱。</summary>
      <returns>要註冊的區域名稱。</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String)">
      <summary>對應指定的 URL 路由，並使其與 <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> 屬性指定的區域產生關聯。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="name">路徑的名稱。</param>
      <param name="url">路徑的 URL 模式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object)">
      <summary>使用指定的路由預設值，對應指定的 URL 路由，並使其與 <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> 屬性指定的區域產生關聯。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="name">路徑的名稱。</param>
      <param name="url">路徑的 URL 模式。</param>
      <param name="defaults">包含預設路由值的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object)">
      <summary>使用指定的路由預設值和條件約束，對應指定的 URL 路由，並使其與 <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> 屬性指定的區域產生關聯。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="name">路徑的名稱。</param>
      <param name="url">路徑的 URL 模式。</param>
      <param name="defaults">包含預設路由值的物件。</param>
      <param name="constraints">一組運算式，這些運算式指定 URL 參數的有效值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>使用指定的路由預設值、條件約束和命名空間，對應指定的 URL 路由，並使其與 <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> 屬性指定的區域產生關聯。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="name">路徑的名稱。</param>
      <param name="url">路徑的 URL 模式。</param>
      <param name="defaults">包含預設路由值的物件。</param>
      <param name="constraints">一組運算式，這些運算式指定 URL 參數的有效值。</param>
      <param name="namespaces">應用程式之可列舉的命名空間集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.String[])">
      <summary>使用指定的路由預設值和命名空間，對應指定的 URL 路由，並使其與 <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> 屬性指定的區域產生關聯。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="name">路徑的名稱。</param>
      <param name="url">路徑的 URL 模式。</param>
      <param name="defaults">包含預設路由值的物件。</param>
      <param name="namespaces">應用程式之可列舉的命名空間集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.String[])">
      <summary>使用指定的命名空間，對應指定的 URL 路由，並使其與 <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> 屬性指定的區域產生關聯。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="name">路徑的名稱。</param>
      <param name="url">路徑的 URL 模式。</param>
      <param name="namespaces">應用程式之可列舉的命名空間集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Namespaces">
      <summary>取得應用程式的命名空間。</summary>
      <returns>應用程式之可列舉的命名空間集合。</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Routes">
      <summary>取得應用程式已定義的路由集合。</summary>
      <returns>應用程式之定義的路徑集合。</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.State">
      <summary>取得包含要通過此區域之使用者定義資訊的物件。</summary>
      <returns>包含要傳遞給此區域之使用者定義資訊的物件。</returns>
    </member>
    <member name="T:System.Web.Mvc.AssociatedMetadataProvider">
      <summary>提供抽象類別來實作中繼資料提供者。</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.#ctor">
      <summary>從衍生類別的建構函式呼叫，以初始化 <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" /> 類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>在衍生類別中覆寫時，建立屬性的模型中繼資料。</summary>
      <returns>屬性的模型中繼資料。</returns>
      <param name="attributes">屬性集。</param>
      <param name="containerType">容器的型別。</param>
      <param name="modelAccessor">模型存取子。</param>
      <param name="modelType">模型的型別。</param>
      <param name="propertyName">屬性的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>取得屬性清單。</summary>
      <returns>屬性清單。</returns>
      <param name="containerType">容器的型別。</param>
      <param name="propertyDescriptor">屬性描述項。</param>
      <param name="attributes">屬性容器。</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>傳回模型的屬性清單。</summary>
      <returns>模型的屬性清單。</returns>
      <param name="container">模型容器。</param>
      <param name="containerType">容器的型別。</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>使用容器型別和屬性描述元，傳回指定之屬性的中繼資料。</summary>
      <returns>使用容器型別和屬性描述元指定之屬性的中繼資料。</returns>
      <param name="modelAccessor">模型存取子。</param>
      <param name="containerType">容器的型別。</param>
      <param name="propertyDescriptor">屬性描述項</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>使用容器型別和屬性名稱，傳回指定之屬性的中繼資料。</summary>
      <returns>使用容器型別和屬性名稱指定之屬性的中繼資料。</returns>
      <param name="modelAccessor">模型存取子。</param>
      <param name="containerType">容器的型別。</param>
      <param name="propertyName">屬性的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>使用模型型別，傳回指定之屬性的中繼資料。</summary>
      <returns>使用模型型別指定之屬性的中繼資料。</returns>
      <param name="modelAccessor">模型存取子。</param>
      <param name="modelType">模型的型別。</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)">
      <summary>傳回指定型別的型別描述元。</summary>
      <returns>型別描述元。</returns>
      <param name="type">型別。</param>
    </member>
    <member name="T:System.Web.Mvc.AssociatedValidatorProvider">
      <summary>針對實作驗證提供者的類別提供抽象類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.#ctor">
      <summary>從衍生類別的建構函式呼叫，以初始化 <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" /> 類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>取得指定型別的型別描述項。</summary>
      <returns>指定型別的型別描述項。</returns>
      <param name="type">驗證提供者的型別。</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>使用中繼資料和控制器內容，取得模型的驗證程式。</summary>
      <returns>模型的驗證程式。</returns>
      <param name="metadata">中繼資料。</param>
      <param name="context">控制器內容。</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>使用中繼資料、控制器內容和屬性清單，取得模型的驗證程式。</summary>
      <returns>模型的驗證程式。</returns>
      <param name="metadata">中繼資料。</param>
      <param name="context">控制器內容。</param>
      <param name="attributes">屬性清單</param>
    </member>
    <member name="T:System.Web.Mvc.AsyncController">
      <summary>提供與 ASP.NET MVC 3 的回溯相容性。</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.AsyncController" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Web.Mvc.AsyncTimeoutAttribute">
      <summary>表示用來設定非同步方法逾時值 (以毫秒為單位) 的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" /> 類別的新執行個體。</summary>
      <param name="duration">逾時值 (以毫秒為單位)。</param>
    </member>
    <member name="P:System.Web.Mvc.AsyncTimeoutAttribute.Duration">
      <summary>取得逾時持續期間 (以毫秒為單位)。</summary>
      <returns>逾時持續期間 (以毫秒為單位)。</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>在非同步動作方法執行之前，由 ASP.NET 呼叫。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="T:System.Web.Mvc.AuthorizationContext">
      <summary>封裝使用 <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 屬性所需的資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.AuthorizationContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>使用指定的控制器內容，初始化 <see cref="T:System.Web.Mvc.AuthorizationContext" /> 類別的新執行個體。</summary>
      <param name="controllerContext">執行結果時所在範圍的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>使用指定的控制器內容和動作描述元，初始化 <see cref="T:System.Web.Mvc.AuthorizationContext" /> 類別的新執行個體。</summary>
      <param name="controllerContext">執行結果所在的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="actionDescriptor">提供動作方法相關資訊的物件，例如其名稱、控制器、參數、屬性和篩選條件。</param>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.ActionDescriptor">
      <summary>針對 <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 屬性所標記的動作方法，提供相關資訊，例如其名稱、控制器、參數、屬性和篩選條件。</summary>
      <returns>
        <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 屬性所標記之動作方法的動作描述元。</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.Result">
      <summary>取得或設定動作方法傳回的結果。</summary>
      <returns>動作方法傳回的結果。</returns>
    </member>
    <member name="T:System.Web.Mvc.AuthorizeAttribute">
      <summary>指定僅限符合授權需求的使用者才能存取控制器或動作方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.AuthorizeCore(System.Web.HttpContextBase)">
      <summary>覆寫時，提供自訂授權檢查的進入點。</summary>
      <returns>如果使用者已獲得授權，則為 true，否則為 false。</returns>
      <param name="httpContext">HTTP 內容，這個內容封裝關於個別 HTTP 要求的所有 HTTP 特定資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>處理授權失敗的 HTTP 要求。</summary>
      <param name="filterContext">封裝 <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 的使用資訊。<paramref name="filterContext" /> 物件，這個物件包含控制器、HTTP 內容、要求內容、動作結果和路由資料。</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>在處理序要求授權時呼叫。</summary>
      <param name="filterContext">篩選條件內容，這個內容封裝 <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 的使用資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filterContext" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnCacheAuthorization(System.Web.HttpContextBase)">
      <summary>在快取模組要求授權時呼叫。</summary>
      <returns>驗證狀態的參考。</returns>
      <param name="httpContext">HTTP 內容，這個內容封裝關於個別 HTTP 要求的所有 HTTP 特定資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Roles">
      <summary>取得或設定已獲授權可以存取控制器或動作方法的使用者角色。</summary>
      <returns>已獲授權可以存取控制器或動作方法的使用者角色。</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.TypeId">
      <summary>取得此屬性的唯一識別項。</summary>
      <returns>此屬性的唯一識別項。</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Users">
      <summary>取得或設定已獲授權可以存取控制器或動作方法的使用者。</summary>
      <returns>已獲授權可以存取控制器或動作方法的使用者。</returns>
    </member>
    <member name="T:System.Web.Mvc.BindAttribute">
      <summary>表示屬性，用來提供應該如何將模型繫結至參數的詳細資料。</summary>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.BindAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Exclude">
      <summary>取得或設定不允許進行繫結之屬性名稱的清單 (以逗號分隔)。</summary>
      <returns>排除清單。</returns>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Include">
      <summary>取得或設定允許進行繫結之屬性名稱的清單 (以逗號分隔)。</summary>
      <returns>包含清單。</returns>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.IsPropertyAllowed(System.String)">
      <summary>判斷是否允許指定的屬性。</summary>
      <returns>如果允許指定的屬性，則為 true，否則為 false。</returns>
      <param name="propertyName">屬性的名稱。</param>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Prefix">
      <summary>取得或設定為了繫結至動作引數或模型屬性而呈現標記時所要使用的前置字元。</summary>
      <returns>要使用的前置字元。</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerCompiledView">
      <summary>表示在由檢視引擎呈現之前 BuildManager 類別所編譯之檢視的基底類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>使用指定的控制器內容和檢視路徑，初始化 <see cref="T:System.Web.Mvc.BuildManagerCompiledView" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="viewPath">檢視路徑。</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>使用指定的控制器內容、檢視路徑和檢視頁面啟動項，初始化 <see cref="T:System.Web.Mvc.BuildManagerCompiledView" /> 類別的新執行個體。</summary>
      <param name="controllerContext">目前控制器的內容資訊。此資訊包含 HTTP 內容、要求內容、路由資料、父動作檢視內容等。</param>
      <param name="viewPath">將呈現之檢視的路徑。</param>
      <param name="viewPageActivator">負責在執行階段動態建構檢視頁面的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewPath" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>使用指定的寫入器物件來呈現指定的檢視內容。</summary>
      <param name="viewContext">與呈現檢視相關的資訊，例如檢視資料、暫存資料和表單內容。</param>
      <param name="writer">寫入器物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewContext" /> 參數是 null。</exception>
      <exception cref="T:SInvalidOperationException">無法建立檢視型別的執行個體。</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>在衍生類別中覆寫時，使用指定的寫入器物件和物件執行個體呈現指定的檢視內容。</summary>
      <param name="viewContext">與呈現檢視相關的資訊，例如檢視資料、暫存資料和表單內容。</param>
      <param name="writer">寫入器物件。</param>
      <param name="instance">包含可用於檢視之其他資訊的物件。</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerCompiledView.ViewPath">
      <summary>取得或設定檢視路徑。</summary>
      <returns>檢視路徑。</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerViewEngine">
      <summary>提供檢視引擎的基底類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.BuildManagerViewEngine" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>使用指定的檢視頁面啟動項，初始化 <see cref="T:System.Web.Mvc.BuildManagerViewEngine" /> 類別的新執行個體。</summary>
      <param name="viewPageActivator">檢視頁面啟動項。</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>取得值，這個值表示檔案是否存在於指定的虛擬檔案系統 (路徑) 中。</summary>
      <returns>如果檔案存在於虛擬檔案系統中，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="virtualPath">虛擬路徑。</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.IsPrecompiledNonUpdateableSite"></member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.ViewPageActivator">
      <summary>取得檢視頁面啟動項。</summary>
      <returns>檢視頁面啟動項。</returns>
    </member>
    <member name="T:System.Web.Mvc.ByteArrayModelBinder">
      <summary>將瀏覽器要求對應至位元組陣列。</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ByteArrayModelBinder" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>使用指定的控制器內容和繫結內容來繫結模型。</summary>
      <returns>繫結的資料物件。實作<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">控制器在其中運作的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingContext" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.CachedAssociatedMetadataProvider`1">
      <summary>提供抽象類別來實作快取的中繼資料提供者。</summary>
      <typeparam name="TModelMetadata"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.CachedAssociatedMetadataProvider`1" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CacheItemPolicy">
      <summary>取得快取項目原則。</summary>
      <returns>快取項目原則。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CacheKeyPrefix">
      <summary>取得快取索引鍵前置詞。</summary>
      <returns>快取索引鍵前置詞。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>在衍生類別中覆寫時，建立屬性的快取模型中繼資料。</summary>
      <returns>屬性的快取模型中繼資料。</returns>
      <param name="attributes">屬性。</param>
      <param name="containerType">容器型別。</param>
      <param name="modelAccessor">模型存取子。</param>
      <param name="modelType">模型型別。</param>
      <param name="propertyName">屬性名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadataFromPrototype(`0,System.Func{System.Object})">
      <summary>藉由套用原型和模型存取來產生最終中繼資料，以建立原型中繼資料。</summary>
      <returns>原型中繼資料。</returns>
      <param name="prototype">原型。</param>
      <param name="modelAccessor">模型存取子。</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>建立中繼資料原型。</summary>
      <returns>中繼資料原型。</returns>
      <param name="attributes">屬性。</param>
      <param name="containerType">容器型別。</param>
      <param name="modelType">模型型別。</param>
      <param name="propertyName">屬性名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperties(System.Object,System.Type)">
      <summary>取得屬性的中繼資料。</summary>
      <returns>屬性的中繼資料。</returns>
      <param name="container">容器。</param>
      <param name="containerType">容器型別。</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>傳回指定之屬性的中繼資料。</summary>
      <returns>指定之屬性的中繼資料。</returns>
      <param name="modelAccessor">模型存取子。</param>
      <param name="containerType">容器型別。</param>
      <param name="propertyDescriptor">屬性描述項。</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>傳回指定之屬性的中繼資料。</summary>
      <returns>指定之屬性的中繼資料。</returns>
      <param name="modelAccessor">模型存取子。</param>
      <param name="containerType">容器型別。</param>
      <param name="propertyName">屬性名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>使用模型型別，傳回指定之屬性的快取中繼資料。</summary>
      <returns>使用模型型別指定之屬性的快取中繼資料。</returns>
      <param name="modelAccessor">模型存取子。</param>
      <param name="modelType">容器的型別。</param>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.PrototypeCache">
      <summary>取得原型快取。</summary>
      <returns>原型快取。</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes">
      <summary>提供容器以快取 <see cref="N:System.ComponentModel.DataAnnotations" /> 屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.#ctor(System.Attribute[])">
      <summary>初始化 <see cref="T:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes" /> 類別的新執行個體。</summary>
      <param name="attributes">屬性。</param>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DataType">
      <summary>取得資料型別。</summary>
      <returns>資料型別。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Display">
      <summary>取得顯示。</summary>
      <returns>顯示。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayColumn">
      <summary>取得顯示資料行。</summary>
      <returns>顯示資料行。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayFormat">
      <summary>取得顯示格式。</summary>
      <returns>顯示格式。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayName">
      <summary>取得顯示名稱。</summary>
      <returns>顯示名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Editable">
      <summary>指出是否可編輯資料欄位。</summary>
      <returns>如果可編輯欄位，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.HiddenInput">
      <summary>取得隱藏的輸入。</summary>
      <returns>隱藏的輸入。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.ReadOnly">
      <summary>指出資料欄位是否為唯讀。</summary>
      <returns>如果欄位是唯讀，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Required">
      <summary>指出是否需要資料欄位。</summary>
      <returns>如果需要欄位，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.ScaffoldColumn">
      <summary>指出資料欄位是否為 scaffold。</summary>
      <returns>如果欄位為 scaffold，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.UIHint">
      <summary>取得 UI 提示。</summary>
      <returns>UI 提示。</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata">
      <summary>提供容器以快取 <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadata" />。</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>使用原型和模型存取子，初始化 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" /> 類別的新執行個體。</summary>
      <param name="prototype">原型。</param>
      <param name="modelAccessor">模型存取子。</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>使用提供者、容器型別、模型型別、屬性 (Property) 名稱及屬性 (Attribute)，初始化 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" /> 類別的新執行個體。</summary>
      <param name="provider">提供者。</param>
      <param name="containerType">容器型別。</param>
      <param name="modelType">模型型別。</param>
      <param name="propertyName">屬性名稱。</param>
      <param name="attributes">屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeConvertEmptyStringToNull">
      <summary>取得值，這個值表示是否應該將表單中回傳的空字串轉換成 Nothing。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>表示是否應該將表單中回傳的空字串轉換成 Nothing 的值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDataTypeName">
      <summary>取得資料型別的中繼資訊。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>資料型別的中繼資訊。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDescription">
      <summary>取得模型的描述。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>模型的描述。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDisplayFormatString">
      <summary>取得模型的顯示格式字串。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>模型的顯示格式字串。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDisplayName">
      <summary>取得模型的顯示名稱。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>模型的顯示名稱。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeEditFormatString">
      <summary>取得模型的編輯格式字串。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>模型的編輯格式字串。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHasNonDefaultEditFormat">
      <summary>取得一直，該值指出模型是否使用了非預設編輯格式的值。</summary>
      <returns>指出是否使用了非預設編輯格式的值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHideSurroundingHtml">
      <summary>取得值，這個值表示模型物件是否應該使用相關 HTML 項目來呈現。取得值，這個值表示模型物件是否應該使用相關 HTML 項目來呈現。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>表示模型物件是否應該使用相關 HTML 項目來呈現的值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHtmlEncode"></member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeIsReadOnly">
      <summary>取得，這個值表示模型是否為唯讀。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>表示模型是否為唯讀的值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeIsRequired">
      <summary>取得值，這個值表示是否需要模型。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>表示是否需要模型的值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeNullDisplayText">
      <summary>取得要針對 Null 值顯示的字串。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>要針對 Null 值顯示的字串。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeOrder">
      <summary>取得值，這個值代表目前中繼資料的順序。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>代表目前中繼資料的順序的值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShortDisplayName">
      <summary>取得簡短顯示名稱。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>簡短顯示名稱。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShowForDisplay">
      <summary>取得值，這個值表示是否應該以唯讀檢視 (例如清單和詳細資料檢視) 來顯示屬性。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>表示是否應該以唯讀檢視 (例如清單和詳細資料檢視) 來顯示屬性的值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShowForEdit">
      <summary>取得或設定值，表示是否應該以可編輯檢視來顯示模型。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>傳回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeSimpleDisplayText">
      <summary>取得模型的簡單顯示字串。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>模型的簡單顯示字串。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeTemplateHint">
      <summary>取得提示，這個提示建議要用於此模型的範本。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>提示，建議要用於此模型的範本。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeWatermark">
      <summary>取得可以做為浮水印的值。如果已快取值，即會傳回快取值，否則會從模型中繼資料擷取值並儲存於快取中。</summary>
      <returns>可以做為浮水印的值。</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider">
      <summary>實作 ASP.NET MVC 的預設快取模型中繼資料提供者。</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Mvc.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>根據原型和模型存取子，傳回快取中繼資料類別之真正執行個體的容器。</summary>
      <returns>快取中繼資料類別之真正執行個體的容器。</returns>
      <param name="prototype">原型。</param>
      <param name="modelAccessor">模型存取子。</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>傳回中繼資料類別的容器原型執行個體。</summary>
      <returns>中繼資料類別的容器原型執行個體。</returns>
      <param name="attributes">屬性型別。</param>
      <param name="containerType">容器型別。</param>
      <param name="modelType">模型型別。</param>
      <param name="propertyName">屬性名稱。</param>
    </member>
    <member name="T:System.Web.Mvc.CachedModelMetadata`1">
      <summary>提供用於快取中繼資料的容器。</summary>
      <typeparam name="TPrototypeCache">容器的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,`0)">
      <summary>根據原型建立中繼資料類別之真正執行個體的建構函式。</summary>
      <param name="provider">提供者。</param>
      <param name="containerType">容器型別。</param>
      <param name="modelType">模型型別。</param>
      <param name="propertyName">屬性名稱。</param>
      <param name="prototypeCache">原型。</param>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.#ctor(System.Web.Mvc.CachedModelMetadata{`0},System.Func{System.Object})">
      <summary>建立中繼資料類別之原型執行個體的建構函式。</summary>
      <param name="prototype">原型。</param>
      <param name="modelAccessor">模型存取子。</param>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeConvertEmptyStringToNull">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定快取值，這個值表示是否應該將表單中回傳的空字串轉換成 null。</summary>
      <returns>表示是否應該將表單中回傳的空字串轉換成 null 的快取值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDataTypeName">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定資料型別的中繼資訊。</summary>
      <returns>資料型別的中繼資訊。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDescription">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定模型的描述。</summary>
      <returns>模型的描述。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDisplayFormatString">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定模型的顯示格式字串。</summary>
      <returns>模型的顯示格式字串。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDisplayName">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定模型的顯示名稱。</summary>
      <returns>模型的顯示名稱。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeEditFormatString">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定模型的編輯格式字串。</summary>
      <returns>模型的編輯格式字串。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHasNonDefaultEditFormat">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。</summary>
      <returns>指出是否使用了非預設編輯格式的值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHideSurroundingHtml">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定快取值，這個值表示模型物件是否應該使用相關 HTML 項目來呈現。</summary>
      <returns>表示模型物件是否應該使用相關 HTML 項目來呈現的快取值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHtmlEncode"></member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeIsReadOnly">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定快取值，這個值表示模型是否為唯讀。</summary>
      <returns>表示模型是否為唯讀的快取值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeIsRequired">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定快取值，這個值表示是否需要模型。</summary>
      <returns>表示是否需要模型的快取值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeNullDisplayText">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定要針對 Null 值顯示的快取字串。</summary>
      <returns>要針對 Null 值顯示的快取字串。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeOrder">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定快取值，這個值代表目前中繼資料的順序。</summary>
      <returns>代表目前中繼資料的順序的快取值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShortDisplayName">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定簡短顯示名稱。</summary>
      <returns>簡短顯示名稱。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShowForDisplay">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定快取值，這個值表示是否應該以唯讀檢視 (例如清單和詳細資料檢視) 來顯示屬性。</summary>
      <returns>表示是否應該以唯讀檢視 (例如清單和詳細資料檢視) 來顯示屬性的快取值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShowForEdit">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定快取值，這個值表示是否應該以可編輯檢視來顯示模型。</summary>
      <returns>表示是否應該以可編輯檢視來顯示模型的快取值。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeSimpleDisplayText">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定模型的快取簡單顯示字串。</summary>
      <returns>模型的快取簡單顯示字串。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeTemplateHint">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定快取提示，這個提示建議要用於此模型的範本。</summary>
      <returns>建議要用於此模型的範本的快取提示。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeWatermark">
      <summary>這個方法受到保護，因此無法直接呼叫。這個方法依設計會在衍生的類別 (例如 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />) 中遭到覆寫。取得或設定可以做為浮水印的快取值。</summary>
      <returns>可以做為浮水印的快取值。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ConvertEmptyStringToNull">
      <summary>取得或設定快取值，這個值表示是否應該將表單中回傳的空字串轉換成 null。</summary>
      <returns>表示是否應該將表單中回傳的空字串轉換成 null 的快取值。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DataTypeName">
      <summary>取得或設定資料型別的中繼資訊。</summary>
      <returns>資料型別的中繼資訊。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Description">
      <summary>取得或設定模型的描述。</summary>
      <returns>模型的描述。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DisplayFormatString">
      <summary>取得或設定模型的顯示格式字串。</summary>
      <returns>模型的顯示格式字串。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DisplayName">
      <summary>取得或設定模型的顯示名稱。</summary>
      <returns>模型的顯示名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.EditFormatString">
      <summary>取得或設定模型的編輯格式字串。</summary>
      <returns>模型的編輯格式字串。</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.GetSimpleDisplayText">
      <summary>取得或設定模型的簡單顯示字串。</summary>
      <returns>模型的簡單顯示字串。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.HideSurroundingHtml">
      <summary>取得或設定值，這個值表示模型物件是否應該使用相關 HTML 項目來呈現。</summary>
      <returns>表示模型物件是否應該使用相關 HTML 項目來呈現的值。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.HtmlEncode"></member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.IsReadOnly">
      <summary>取得或設定值，這個值表示模型是否為唯讀。</summary>
      <returns>表示模型是否為唯讀的值。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.IsRequired">
      <summary>取得或設定值，這個值表示是否需要模型。</summary>
      <returns>表示是否需要模型的值。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.NullDisplayText">
      <summary>取得或設定要針對 Null 值顯示的字串。</summary>
      <returns>要針對 Null 值顯示的字串。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Order">
      <summary>取得或設定值，這個值代表目前中繼資料的順序。</summary>
      <returns>目前中繼資料的順序值。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.PrototypeCache">
      <summary>取得或設定原型快取。</summary>
      <returns>原型快取。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShortDisplayName">
      <summary>取得或設定簡短顯示名稱。</summary>
      <returns>簡短顯示名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShowForDisplay">
      <summary>取得或設定值，這個值表示是否應該以唯讀檢視來顯示屬性，例如清單和詳細資料檢視。</summary>
      <returns>如果應該以唯讀檢視來顯示模型，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShowForEdit">
      <summary>取得或設定值，表示是否應該以可編輯檢視來顯示模型。</summary>
      <returns>如果應該以可編輯檢視來顯示模型，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.SimpleDisplayText">
      <summary>取得或設定模型的簡單顯示字串。</summary>
      <returns>模型的簡單顯示字串。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.TemplateHint">
      <summary>取得或設定提示，這個提示建議要用於此模型的範本。</summary>
      <returns>提示，建議要用於此模型的範本。</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Watermark">
      <summary>取得或設定可以做為浮水印的值。</summary>
      <returns>可以做為浮水印的值。</returns>
    </member>
    <member name="T:System.Web.Mvc.CancellationTokenModelBinder">
      <summary>提供用來傳播應取消模型繫結器作業之通知的機制。</summary>
    </member>
    <member name="M:System.Web.Mvc.CancellationTokenModelBinder.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.CancellationTokenModelBinder" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.CancellationTokenModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>傳回預設的取消語彙基元。</summary>
      <returns>預設的取消語彙基元。實作<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="bindingContext">繫結內容。</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionOnlyAttribute">
      <summary>表示用來指出僅應將動作方法做為子系動作進行呼叫的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ChildActionOnlyAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>在需要授權時呼叫。</summary>
      <param name="filterContext">物件，封裝授權存取子動作所需的資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProvider">
      <summary>表示來自子動作的值之值提供者。</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>初始化 <see cref="T:System.Web.Mvc.ChildActionValueProvider" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.GetValue(System.String)">
      <summary>使用指定的索引鍵擷取值物件。</summary>
      <returns>指定之索引鍵的值物件。</returns>
      <param name="key">索引鍵。</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProviderFactory">
      <summary>表示針對子系動作建立提供者物件的 Factory。</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ChildActionValueProviderFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>針對指定的控制器內容傳回 <see cref="T:System.Web.Mvc.ChildActionValueProvider" /> 物件。</summary>
      <returns>
        <see cref="T:System.Web.Mvc.ChildActionValueProvider" /> 物件。</returns>
      <param name="controllerContext">控制器內容。</param>
    </member>
    <member name="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider">
      <summary>傳回用戶端資料型別模型驗證程式。</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>傳回用戶端資料型別模型驗證程式。</summary>
      <returns>用戶端資料型別模型驗證程式。</returns>
      <param name="metadata">中繼資料。</param>
      <param name="context">內容。</param>
    </member>
    <member name="P:System.Web.Mvc.ClientDataTypeModelValidatorProvider.ResourceClassKey">
      <summary>取得資源類別索引鍵。</summary>
      <returns>資源類別索引鍵。</returns>
    </member>
    <member name="T:System.Web.Mvc.CompareAttribute">
      <summary>提供其會比較模型兩個屬性 (Property) 的屬性 (Attribute)。</summary>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Web.Mvc.CompareAttribute" /> 類別的新執行個體。</summary>
      <param name="otherProperty">要與目前屬性比較的屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatErrorMessage(System.String)">
      <summary>根據發生比較錯誤的資料欄位，將格式套用至錯誤訊息。</summary>
      <returns>格式化的錯誤訊息。</returns>
      <param name="name">造成錯誤失敗之欄位的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>格式化用戶端驗證的屬性，方法是在前面加上星號 (*) 和點號。</summary>
      <returns>字串 "*." 會加在屬性前面。</returns>
      <param name="property">屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>使用指定的模型中繼資料和控制器內容，取得屬性的比較值用戶端驗證規則清單。</summary>
      <returns>比較值用戶端驗證規則清單。</returns>
      <param name="metadata">模型中繼資料。</param>
      <param name="context">控制器內容。</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>判斷指定的物件是否等於被比較的物件。</summary>
      <returns>如果被比較之屬性的值等於值參數，則為 null，否則驗證結果會包含表示比較失敗的錯誤訊息。</returns>
      <param name="value">要比較之物件的值。</param>
      <param name="validationContext">驗證內容。</param>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherProperty">
      <summary>取得要與目前屬性比較的屬性。</summary>
      <returns>要與目前屬性比較的屬性。</returns>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherPropertyDisplayName">
      <summary>取得其他屬性的顯示名稱。</summary>
      <returns>其他屬性的顯示名稱。</returns>
    </member>
    <member name="T:System.Web.Mvc.ContentResult">
      <summary>表示使用者定義的內容類型，此內容類型是動作方法的結果。</summary>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ContentResult" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.Content">
      <summary>取得或設定內容。</summary>
      <returns>內容。</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentEncoding">
      <summary>取得或設定內容編碼方式。</summary>
      <returns>內容編碼方式。</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentType">
      <summary>取得或設定內容的類型。</summary>
      <returns>內容的類型。</returns>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>以繼承自 <see cref="T:System.Web.Mvc.ActionResult" /> 類別的自訂型別，來處理動作方法的結果。</summary>
      <param name="context">執行結果時所在範圍的內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.Controller">
      <summary>提供方法，這些方法回應對 ASP.NET MVC 網站提出的 HTTP 要求。</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Controller" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.ActionInvoker">
      <summary>取得控制器的動作啟動程式。</summary>
      <returns>動作啟動程式。</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.AsyncManager">
      <summary>提供非同步作業。</summary>
      <returns>傳回 <see cref="T:System.Web.Mvc.Async.AsyncManager" />。</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>開始執行指定的要求內容</summary>
      <returns>傳回 IAsyncController 執行個體。</returns>
      <param name="requestContext">要求內容。</param>
      <param name="callback">非同步回呼。</param>
      <param name="state">狀態。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)">
      <summary>開始在目前控制器內容中叫用動作。</summary>
      <returns>傳回 IAsyncController 執行個體。</returns>
      <param name="callback">回呼。</param>
      <param name="state">狀態。</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Binders">
      <summary>取得或設定繫結器。</summary>
      <returns>繫結器。</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String)">
      <summary>使用字串建立內容結果物件。</summary>
      <returns>內容結果執行個體。</returns>
      <param name="content">要寫入至回應的內容。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String)">
      <summary>使用字串和內容類型建立內容結果物件。</summary>
      <returns>內容結果執行個體。</returns>
      <param name="content">要寫入至回應的內容。</param>
      <param name="contentType">內容類型 (MIME 類型)。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)">
      <summary>使用字串、內容類型和內容編碼，建立內容結果物件。</summary>
      <returns>內容結果執行個體。</returns>
      <param name="content">要寫入至回應的內容。</param>
      <param name="contentType">內容類型 (MIME 類型)。</param>
      <param name="contentEncoding">內容編碼方式。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateActionInvoker">
      <summary>建立動作啟動程式。</summary>
      <returns>動作啟動程式。</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateTempDataProvider">
      <summary>建立暫存資料提供者。</summary>
      <returns>暫存資料提供者。</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.DisableAsyncSupport">
      <summary>取得是否要停用控制器的非同步支援。</summary>
      <returns>如果要停用控制器的非同步支援則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose">
      <summary>將 <see cref="T:System.Web.Mvc.Controller" /> 類別目前的執行個體所使用的資源全部釋出。</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose(System.Boolean)">
      <summary>釋放 Unmanaged 資源並選擇性釋放 Managed 資源。</summary>
      <param name="disposing">true 表示釋放 Managed 和 Unmanaged 資源；false 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)">
      <summary>結束在目前控制器內容中叫用動作。</summary>
      <param name="asyncResult">非同步結果。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)">
      <summary>結束執行核心。</summary>
      <param name="asyncResult">非同步結果。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ExecuteCore">
      <summary>在目前控制器內容中叫用動作。</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String)">
      <summary>使用檔案內容和檔案類型建立 FileContentResult 物件。</summary>
      <returns>檔案內容結果物件。</returns>
      <param name="fileContents">要傳送至回應的二進位內容。</param>
      <param name="contentType">內容類型 (MIME 類型)。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)">
      <summary>使用檔案內容、檔案類型和目的檔案名稱，建立 FileContentResult 物件。</summary>
      <returns>檔案內容結果物件。</returns>
      <param name="fileContents">要傳送至回應的二進位內容。</param>
      <param name="contentType">內容類型 (MIME 類型)。</param>
      <param name="fileDownloadName">要在檔案下載對話方塊中使用的檔名，這個對話方塊是在瀏覽器中顯示。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String)">
      <summary>使用串流物件和內容類型建立 FileStreamResult 物件。</summary>
      <returns>檔案內容結果物件。</returns>
      <param name="fileStream">要傳送至回應的資料流。</param>
      <param name="contentType">內容類型 (MIME 類型)。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)">
      <summary>使用 FileStreamResult 物件、內容類型和目標檔案名稱，建立串流物件。</summary>
      <returns>檔案資料流結果物件。</returns>
      <param name="fileStream">要傳送至回應的資料流。</param>
      <param name="contentType">內容類型 (MIME 類型)</param>
      <param name="fileDownloadName">要在檔案下載對話方塊中使用的檔名，這個對話方塊是在瀏覽器中顯示。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String)">
      <summary>使用檔案名稱和內容類型建立 FilePathResult 物件。</summary>
      <returns>檔案資料流結果物件。</returns>
      <param name="fileName">要傳送至回應之檔案的路徑。</param>
      <param name="contentType">內容類型 (MIME 類型)。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String,System.String)">
      <summary>使用檔案名稱、檔案內容和檔案下載名稱，建立 FilePathResult 物件。</summary>
      <returns>檔案資料流結果物件。</returns>
      <param name="fileName">要傳送至回應之檔案的路徑。</param>
      <param name="contentType">內容類型 (MIME 類型)。</param>
      <param name="fileDownloadName">要在檔案下載對話方塊中使用的檔名，這個對話方塊是在瀏覽器中顯示。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.HandleUnknownAction(System.String)">
      <summary>當要求符合這個控制器，但在控制器中找不到指定動作名稱的方法時呼叫。</summary>
      <param name="actionName">嘗試之動作的名稱。</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.HttpContext">
      <summary>取得關於個別 HTTP 要求的 HTTP 特定資訊。</summary>
      <returns>HTTP 內容。</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound">
      <summary>傳回 <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> 類別的執行個體。</summary>
      <returns>
        <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> 類別的執行個體。</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound(System.String)">
      <summary>傳回 <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> 類別的執行個體。</summary>
      <returns>
        <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> 類別的執行個體。</returns>
      <param name="statusDescription">狀態描述。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)">
      <summary>初始化呼叫建構函式時可能無法使用的資料。</summary>
      <param name="requestContext">HTTP 內容和路由資料。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.JavaScript(System.String)">
      <summary>建立 <see cref="T:System.Web.Mvc.JavaScriptResult" /> 物件。</summary>
      <returns>
        <see cref="T:System.Web.Mvc.JavaScriptResult" /> 物件，將指令碼寫入回應。</returns>
      <param name="script">要在用戶端執行的 JavaScript 程式碼。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object)">
      <summary>建立 <see cref="T:System.Web.Mvc.JsonResult" /> 物件，這個物件將指定的物件序列化為 JavaScript 物件標記法 (JSON)。</summary>
      <returns>JSON 結果物件，會將指定的物件序列化為 JSON 格式。在執行物件時，ASP.NET MVC Framework 會將這個方法所準備的結果物件寫入回應。</returns>
      <param name="data">要序列化的 JavaScript 物件圖形。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String)">
      <summary>建立 <see cref="T:System.Web.Mvc.JsonResult" /> 物件，這個物件將指定的物件序列化為 JavaScript 物件標記法 (JSON) 格式。</summary>
      <returns>JSON 結果物件，會將指定的物件序列化為 JSON 格式。</returns>
      <param name="data">要序列化的 JavaScript 物件圖形。</param>
      <param name="contentType">內容類型 (MIME 類型)。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)">
      <summary>建立 <see cref="T:System.Web.Mvc.JsonResult" /> 物件，這個物件將指定的物件序列化為 JavaScript 物件標記法 (JSON) 格式。</summary>
      <returns>JSON 結果物件，會將指定的物件序列化為 JSON 格式。</returns>
      <param name="data">要序列化的 JavaScript 物件圖形。</param>
      <param name="contentType">內容類型 (MIME 類型)。</param>
      <param name="contentEncoding">內容編碼方式。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
      <summary>建立 <see cref="T:System.Web.Mvc.JsonResult" /> 物件，其會使用內容類型、內容編碼方式和 JSON 要求行為，將指定的物件序列化為「JavaScript 物件標記法」(JSON) 格式。</summary>
      <returns>結果物件，會將指定的物件序列化為 JSON 格式。</returns>
      <param name="data">要序列化的 JavaScript 物件圖形。</param>
      <param name="contentType">內容類型 (MIME 類型)。</param>
      <param name="contentEncoding">內容編碼方式。</param>
      <param name="behavior">JSON 要求行為</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)">
      <summary>建立 <see cref="T:System.Web.Mvc.JsonResult" /> 物件，其會使用指定的內容類型和 JSON 要求行為，將指定的物件序列化為「JavaScript 物件標記法」(JSON) 格式。</summary>
      <returns>結果物件，會將指定的物件序列化為 JSON 格式。</returns>
      <param name="data">要序列化的 JavaScript 物件圖形。</param>
      <param name="contentType">內容類型 (MIME 類型)。</param>
      <param name="behavior">JSON 要求行為</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)">
      <summary>建立 JsonResult 物件，其會使用指定的 JSON 要求行為，將指定的物件序列化為「JavaScript 物件標記法」(JSON) 格式。</summary>
      <returns>結果物件，會將指定的物件序列化為 JSON 格式。</returns>
      <param name="data">要序列化的 JavaScript 物件圖形。</param>
      <param name="behavior">JSON 要求行為。</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ModelState">
      <summary>取得模型狀態字典物件，這個物件包含模型和模型繫結驗證的狀態。</summary>
      <returns>模型狀態字典。</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>在叫用動作方法之後呼叫。</summary>
      <param name="filterContext">目前要求和動作的相關資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>在叫用動作方法之前呼叫。</summary>
      <param name="filterContext">目前要求和動作的相關資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>在進行授權時呼叫。</summary>
      <param name="filterContext">目前要求和動作的相關資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>在進行授權挑戰時呼叫。</summary>
      <param name="filterContext">目前要求和動作的相關資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>在進行授權時呼叫。</summary>
      <param name="filterContext">目前要求和動作的相關資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>在動作中發生未處理的例外狀況時呼叫。</summary>
      <param name="filterContext">目前要求和動作的相關資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>在動作方法所傳回的動作結果執行之後呼叫。</summary>
      <param name="filterContext">目前要求和動作結果的相關資訊</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>在動作方法所傳回的動作結果執行之前呼叫。</summary>
      <param name="filterContext">目前要求和動作結果的相關資訊</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView">
      <summary>建立會轉譯部分檢視的 <see cref="T:System.Web.Mvc.PartialViewResult" /> 物件。</summary>
      <returns>部分檢視結果物件。</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.Object)">
      <summary>使用指定的模型建立 <see cref="T:System.Web.Mvc.PartialViewResult" /> 物件，這個物件呈現部分檢視。</summary>
      <returns>部分檢視結果物件。</returns>
      <param name="model">由部分檢視所呈現的模型。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String)">
      <summary>使用指定的檢視名稱建立 <see cref="T:System.Web.Mvc.PartialViewResult" /> 物件，這個物件呈現部分檢視。</summary>
      <returns>部分檢視結果物件。</returns>
      <param name="viewName">對回應所呈現之檢視的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String,System.Object)">
      <summary>使用指定的檢視名稱和模型建立 <see cref="T:System.Web.Mvc.PartialViewResult" /> 物件，這個物件呈現部分檢視。</summary>
      <returns>部分檢視結果物件。</returns>
      <param name="viewName">對回應所呈現之檢視的名稱。</param>
      <param name="model">由部分檢視所呈現的模型。</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Profile">
      <summary>取得 HTTP 內容設定檔。</summary>
      <returns>HTTP 內容設定檔。</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Redirect(System.String)">
      <summary>建立 <see cref="T:System.Web.Mvc.RedirectResult" /> 物件，這個物件重新導向至指定的 URL。</summary>
      <returns>重新導向結果物件。</returns>
      <param name="url">要重新導向的目的 URL。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectPermanent(System.String)">
      <summary>傳回將 Permanent 屬性設定為 true 之 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的執行個體。</summary>
      <returns>將 Permanent 屬性設定為 true 之 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的執行個體。</returns>
      <param name="url">要重新導向的目的 URL。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String)">
      <summary>使用動作名稱重新導向至指定的動作。</summary>
      <returns>重新導向結果物件。</returns>
      <param name="actionName">動作的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)">
      <summary>使用動作名稱和路由值重新導向至指定的動作。</summary>
      <returns>重新導向結果物件。</returns>
      <param name="actionName">動作的名稱。</param>
      <param name="routeValues">路由的參數。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)">
      <summary>使用動作名稱和控制器名稱重新導向至指定的動作。</summary>
      <returns>重新導向結果物件。</returns>
      <param name="actionName">動作的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)">
      <summary>使用動作名稱、控制器名稱和路由字典，重新導向至指定的動作。</summary>
      <returns>重新導向結果物件。</returns>
      <param name="actionName">動作的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">路由的參數。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>使用動作名稱、控制器名稱和路由值，重新導向至指定的動作。</summary>
      <returns>重新導向結果物件。</returns>
      <param name="actionName">動作的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">路由的參數。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>使用動作名稱和路由字典，重新導向至指定的動作。</summary>
      <returns>重新導向結果物件。</returns>
      <param name="actionName">動作的名稱。</param>
      <param name="routeValues">路由的參數。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)">
      <summary>使用指定的動作名稱，傳回其 Permanent 屬性設為 true 的 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的執行個體。</summary>
      <returns>使用指定的動作名稱、控制器名稱和路由值，將 Permanent 屬性設定為 true 之 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的執行個體。</returns>
      <param name="actionName">動作名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)">
      <summary>使用指定的動作名稱和路由值，傳回將 Permanent 屬性設定為 true 之 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的執行個體。</summary>
      <returns>使用指定的動作名稱和路由值，將 Permanent 屬性設定為 true 之 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的執行個體。</returns>
      <param name="actionName">動作名稱。</param>
      <param name="routeValues">路徑值。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)">
      <summary>使用指定的動作名稱和控制器名稱，傳回將 Permanent 屬性設定為 true 之 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的執行個體。</summary>
      <returns>使用指定的動作名稱和控制器名稱，將 Permanent 屬性設定為 true 之 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的執行個體。</returns>
      <param name="actionName">動作名稱。</param>
      <param name="controllerName">控制器名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)">
      <summary>使用指定的動作名稱、控制器名稱和路由值，傳回將 Permanent 屬性設定為 true 之 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的執行個體。</summary>
      <returns>使用指定的動作名稱、控制器名稱和路由值，將 Permanent 屬性設定為 true 之 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的執行個體。</returns>
      <param name="actionName">動作名稱。</param>
      <param name="controllerName">控制器名稱。</param>
      <param name="routeValues">路徑值。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>使用指定的動作名稱、控制器名稱和路由值，傳回將 Permanent 屬性設定為 true 之 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的執行個體。</summary>
      <returns>使用指定的動作名稱、控制器名稱和路由值，將 Permanent 屬性設定為 true 之 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的執行個體。</returns>
      <param name="actionName">動作名稱。</param>
      <param name="controllerName">控制器名稱。</param>
      <param name="routeValues">路徑值。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>使用指定的動作名稱和路由值，傳回將 Permanent 屬性設定為 true 之 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的執行個體。</summary>
      <returns>使用指定的動作名稱和路由值，將 Permanent 屬性設定為 true 之 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的執行個體。</returns>
      <param name="actionName">動作名稱。</param>
      <param name="routeValues">路徑值。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Object)">
      <summary>使用指定的路由值重新導向至指定的路由。</summary>
      <returns>重新導向至路由的結果物件。</returns>
      <param name="routeValues">路由的參數。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String)">
      <summary>使用指定的路由名稱重新導向至指定的路由。</summary>
      <returns>重新導向至路由的結果物件。</returns>
      <param name="routeName">路徑的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)">
      <summary>使用路由名稱和路由值重新導向至指定的路由。</summary>
      <returns>重新導向至路由的結果物件。</returns>
      <param name="routeName">路徑的名稱。</param>
      <param name="routeValues">路由的參數。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>使用路由名稱和路由字典重新導向至指定的路由。</summary>
      <returns>重新導向至路由的結果物件。</returns>
      <param name="routeName">路徑的名稱。</param>
      <param name="routeValues">路由的參數。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
      <summary>使用路由字典重新導向至指定的路由。</summary>
      <returns>重新導向至路由的結果物件。</returns>
      <param name="routeValues">路由的參數。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)">
      <summary>使用指定的路由值，傳回其 Permanent 屬性設為 true 的 RedirectResult 類別的執行個體。</summary>
      <returns>傳回將 Permanent 屬性設定為 true 之 RedirectResult 類別的執行個體。</returns>
      <param name="routeValues">路徑名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)">
      <summary>使用指定的路由名稱，傳回其 Permanent 屬性設為 true 的 RedirectResult 類別的執行個體。</summary>
      <returns>使用指定的路由名稱，傳回其 Permanent 屬性設為 true 的 RedirectResult 類別的執行個體。</returns>
      <param name="routeName">路徑名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)">
      <summary>使用指定的路由名稱和路由值，傳回其 Permanent 屬性設為 true 的 RedirectResult 類別的執行個體。</summary>
      <returns>使用指定的路由名稱和路由值，其 Permanent 屬性設為 true 的 RedirectResult 類別的執行個體。</returns>
      <param name="routeName">路徑名稱。</param>
      <param name="routeValues">路徑值。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>使用指定的路由名稱和路由值，傳回其 Permanent 屬性設為 true 的 RedirectResult 類別的執行個體。</summary>
      <returns>將 Permanent 屬性設定為 true 之 RedirectResult 類別的執行個體。</returns>
      <param name="routeName">路徑名稱。</param>
      <param name="routeValues">路徑值。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
      <summary>使用指定的路由值，傳回其 Permanent 屬性設為 true 的 RedirectResult 類別的執行個體。</summary>
      <returns>使用指定的路由值，其 Permanent 屬性設為 true 的 RedirectResult 類別的執行個體。</returns>
      <param name="routeValues">路徑值。</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Request">
      <summary>取得目前 HTTP 要求的 HttpRequestBase 物件。</summary>
      <returns>要求物件。</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Resolver">
      <summary>表示提供服務的可取代相依性解析程式。依預設，它會使用 <see cref="P:System.Web.Mvc.DependencyResolver.CurrentCache" />。</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.Response">
      <summary>取得目前 HTTP 回應的 HttpResponseBase 物件。</summary>
      <returns>目前 HTTP 回應的 HttpResponseBase 物件。</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.RouteData">
      <summary>取得目前要求的路由資料。</summary>
      <returns>路徑資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Server">
      <summary>取得 HttpServerUtilityBase 物件，這個物件提供在 Web 要求處理期間使用的方法。</summary>
      <returns>HTTP 伺服器物件。</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Session">
      <summary>取得目前 HTTP 要求的 HttpSessionStateBase 物件。</summary>
      <returns>目前 HTTP 要求的 HTTP 工作階段狀態物件。</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>這個方法會在呼叫 BeginExecute 方法。</summary>
      <returns>作業的結果。</returns>
      <param name="requestContext">要求內容。</param>
      <param name="callback">非同步回呼。</param>
      <param name="state">物件的狀態。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)">
      <summary>這個方法會在呼叫 EndExecute 方法。</summary>
      <param name="asyncResult">作業的非同步結果。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>這個方法會在呼叫 OnAuthentication 方法。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>這個方法會在呼叫 OnAuthenticationChallenge 方法。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>這個方法會在呼叫 OnActionExecuted 方法。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>這個方法會在呼叫 OnActionExecuting 方法。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>這個方法會在呼叫 OnAuthorization 方法。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)">
      <summary>這個方法會在呼叫 OnException 方法。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>這個方法會在呼叫 OnResultExecuted 方法。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>這個方法會在呼叫 OnResultExecuting 方法。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.TempDataProvider">
      <summary>取得暫存資料提供者物件，這個物件用於儲存下一個要求的資料。</summary>
      <returns>暫存資料提供者。</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)">
      <summary>使用來自控制器之目前值提供者的值，更新指定的模型執行個體。</summary>
      <returns>如果更新成功，則為 true，否則為 false。</returns>
      <param name="model">要更新的模型執行個體。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="model" /> 參數或 ValueProvider 屬性為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)">
      <summary>使用來自控制器目前值提供者的值和前置詞，更新指定的模型執行個體。</summary>
      <returns>如果更新成功，則為 true，否則為 false。</returns>
      <param name="model">要更新的模型執行個體。</param>
      <param name="prefix">在值提供者中查閱值時要使用的前置詞。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="model" /> 參數或 ValueProvider 屬性為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])">
      <summary>使用來自控制器目前值提供者的值、前置詞和包含的屬性，更新指定的模型執行個體。</summary>
      <returns>如果更新成功，則為 true，否則為 false。</returns>
      <param name="model">要更新的模型執行個體。</param>
      <param name="prefix">在值提供者中查閱值時要使用的前置詞。</param>
      <param name="includeProperties">要更新之模型的屬性清單。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="model" /> 參數或 ValueProvider 屬性為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>使用來自控制器目前值提供者的值、前置詞、要排除的屬性清單和要包含的屬性清單，更新指定的模型執行個體。</summary>
      <returns>如果更新成功，則為 true，否則為 false。</returns>
      <param name="model">要更新的模型執行個體。</param>
      <param name="prefix">在值提供者中查閱值時要使用的前置詞。</param>
      <param name="includeProperties">要更新之模型的屬性清單。</param>
      <param name="excludeProperties">更新時要明確排除之屬性的清單。即使 includeProperties 參數清單中列出這些屬性，也一樣會排除。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="model" /> 參數或 ValueProvider 屬性為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>使用來自值提供者的值、前置詞、要排除的屬性清單以及要包含的屬性清單，更新指定的模型執行個體。</summary>
      <returns>如果更新成功，則為 true，否則為 false。</returns>
      <param name="model">要更新的模型執行個體。</param>
      <param name="prefix">在值提供者中查閱值時要使用的前置詞。</param>
      <param name="includeProperties">要更新之模型的屬性清單。</param>
      <param name="excludeProperties">更新時要明確排除之屬性的清單。即使 includeProperties 參數清單中列出這些屬性，也一樣會排除。</param>
      <param name="valueProvider">值的字典，用於更新模型。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>使用來自值提供者的值、前置詞和包含的屬性，更新指定的模型執行個體。</summary>
      <returns>如果更新成功，則為 true，否則為 false。</returns>
      <param name="model">要更新的模型執行個體。</param>
      <param name="prefix">在值提供者中查閱值時要使用的前置詞。</param>
      <param name="includeProperties">要更新之模型的屬性清單。</param>
      <param name="valueProvider">值的字典，用於更新模型。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>使用來自值提供者的值和要包含的屬性清單，更新指定的模型執行個體。</summary>
      <returns>如果更新成功，則為 true，否則為 false。</returns>
      <param name="model">要更新的模型執行個體。</param>
      <param name="prefix">要更新之模型的屬性清單。</param>
      <param name="valueProvider">值的字典，用於更新模型。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])">
      <summary>使用來自控制器目前值提供者的值和包含的屬性，更新指定的模型執行個體。</summary>
      <returns>如果更新成功，則為 true，否則為 false。</returns>
      <param name="model">要更新的模型執行個體。</param>
      <param name="includeProperties">要更新之模型的屬性清單。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>使用來自值提供者的值和要包含的屬性清單，更新指定的模型執行個體。</summary>
      <returns>如果更新成功，則為 true，否則為 false。</returns>
      <param name="model">要更新的模型執行個體。</param>
      <param name="includeProperties">要更新之模型的屬性清單。</param>
      <param name="valueProvider">值的字典，用於更新模型。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>使用來自值提供者的值更新指定的模型執行個體。</summary>
      <returns>如果更新成功，則為 true，否則為 false。</returns>
      <param name="model">要更新的模型執行個體。</param>
      <param name="valueProvider">值的字典，用於更新模型。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object)">
      <summary>驗證指定的模型執行個體。</summary>
      <returns>如果模型驗證成功，則為 true，否則為 false。</returns>
      <param name="model">要驗證的模型。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)">
      <summary>使用 HTML 前置詞驗證指定的模型執行個體。</summary>
      <returns>如果模型驗證成功，則為 true，否則為 false。</returns>
      <param name="model">要驗證的模型。</param>
      <param name="prefix">在模型提供者中查閱值時要使用的前置詞。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0)">
      <summary>使用來自控制器之目前值提供者的值，更新指定的模型執行個體。</summary>
      <param name="model">要更新的模型執行個體。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)">
      <summary>使用來自控制器目前值提供者的值和前置詞，更新指定的模型執行個體。</summary>
      <param name="model">要更新的模型執行個體。</param>
      <param name="prefix">在值提供者中查詢值時使用的前置詞。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])">
      <summary>使用來自控制器目前值提供者的值、前置詞和包含的屬性，更新指定的模型執行個體。</summary>
      <param name="model">要更新的模型執行個體。</param>
      <param name="prefix">在值提供者中查詢值時使用的前置詞。</param>
      <param name="includeProperties">要更新之模型的屬性清單。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>使用來自控制器目前值提供者的值、前置詞、要排除的屬性清單和要包含的屬性清單，更新指定的模型執行個體。</summary>
      <param name="model">要更新的模型執行個體。</param>
      <param name="prefix">在值提供者中查詢值時使用的前置詞。</param>
      <param name="includeProperties">要更新之模型的屬性清單。</param>
      <param name="excludeProperties">更新時要明確排除之屬性的清單。即使 includeProperties 清單中列出這些屬性，也一樣會排除。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>使用來自值提供者的值、前置詞、要排除的屬性清單以及要包含的屬性清單，更新指定的模型執行個體。</summary>
      <param name="model">要更新的模型執行個體。</param>
      <param name="prefix">在值提供者中查閱值時要使用的前置詞。</param>
      <param name="includeProperties">要更新之模型的屬性清單。</param>
      <param name="excludeProperties">更新時要明確排除之屬性的清單。即使 includeProperties 參數清單中列出這些屬性，也一樣會排除。</param>
      <param name="valueProvider">值的字典，用於更新模型。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>使用來自值提供者的值、前置詞和要包含的屬性清單，更新指定的模型執行個體。</summary>
      <param name="model">要更新的模型執行個體。</param>
      <param name="prefix">在值提供者中查閱值時要使用的前置詞。</param>
      <param name="includeProperties">要更新之模型的屬性清單。</param>
      <param name="valueProvider">值的字典，用於更新模型。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>使用來自值提供者的值、前置詞和要包含的屬性清單，更新指定的模型執行個體。</summary>
      <param name="model">要更新的模型執行個體。</param>
      <param name="prefix">要更新之模型的屬性清單。</param>
      <param name="valueProvider">值的字典，用於更新模型。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])">
      <summary>使用來自控制器物件目前值提供者的值，更新指定的模型執行個體。</summary>
      <param name="model">要更新的模型執行個體。</param>
      <param name="includeProperties">要更新之模型的屬性清單。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>使用來自值提供者的值、前置詞和要包含的屬性清單，更新指定的模型執行個體。</summary>
      <param name="model">要更新的模型執行個體。</param>
      <param name="includeProperties">要更新之模型的屬性清單。</param>
      <param name="valueProvider">值的字典，用於更新模型。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>使用來自值提供者的值更新指定的模型執行個體。</summary>
      <param name="model">要更新的模型執行個體。</param>
      <param name="valueProvider">值的字典，用於更新模型。</param>
      <typeparam name="TModel">模型物件的型別。</typeparam>
    </member>
    <member name="P:System.Web.Mvc.Controller.Url">
      <summary>取得 URL Helper 物件，這個物件使用路由來產生 URL。</summary>
      <returns>URL Helper 物件。</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.User">
      <summary>取得目前 HTTP 要求的使用者安全性資訊。</summary>
      <returns>目前 HTTP 要求的使用者安全性資訊。</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object)">
      <summary>驗證指定的模型執行個體。</summary>
      <param name="model">要驗證的模型。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)">
      <summary>使用 HTML 前置詞驗證指定的模型執行個體。</summary>
      <param name="model">要驗證的模型。</param>
      <param name="prefix">在模型提供者中查閱值時要使用的前置詞。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View">
      <summary>建立 <see cref="T:System.Web.Mvc.ViewResult" /> 物件，會轉譯回應的檢視。</summary>
      <returns>
        <see cref="M:System.Web.Mvc.Controller.View" /> 結果，將檢視呈現至回應。</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Object)">
      <summary>使用將檢視呈現至回應的模型，建立 <see cref="T:System.Web.Mvc.ViewResult" /> 物件。</summary>
      <returns>檢視結果。</returns>
      <param name="model">由檢視呈現的模型。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String)">
      <summary>使用呈現檢視的檢視名稱，建立 <see cref="T:System.Web.Mvc.ViewResult" /> 物件。</summary>
      <returns>檢視結果。</returns>
      <param name="viewName">對回應所呈現之檢視的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.Object)">
      <summary>建立 <see cref="T:System.Web.Mvc.ViewResult" /> 物件，這個物件呈現指定的 IView 物件。</summary>
      <returns>檢視結果。</returns>
      <param name="viewName">呈現至回應的檢視。</param>
      <param name="model">由檢視呈現的模型。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String)">
      <summary>使用將檢視呈現至回應的檢視名稱和主版頁面名稱，建立 <see cref="T:System.Web.Mvc.ViewResult" /> 物件。</summary>
      <returns>檢視結果。</returns>
      <param name="viewName">對回應所呈現之檢視的名稱。</param>
      <param name="masterName">在呈現檢視時要使用之主版頁面或範本的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String,System.Object)">
      <summary>使用呈現檢視的檢視名稱、主版頁面名稱和模型，建立 <see cref="T:System.Web.Mvc.ViewResult" /> 物件。</summary>
      <returns>檢視結果。</returns>
      <param name="viewName">對回應所呈現之檢視的名稱。</param>
      <param name="masterName">在呈現檢視時要使用之主版頁面或範本的名稱。</param>
      <param name="model">由檢視呈現的模型。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView)">
      <summary>建立 <see cref="T:System.Web.Mvc.ViewResult" /> 物件，這個物件呈現指定的 IView 物件。</summary>
      <returns>檢視結果。</returns>
      <param name="view">呈現至回應的檢視。</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)">
      <summary>建立 <see cref="T:System.Web.Mvc.ViewResult" /> 物件，這個物件呈現指定的 <see cref="T:System.Web.Mvc.IView" /> 物件。</summary>
      <returns>檢視結果。</returns>
      <param name="view">呈現至回應的檢視。</param>
      <param name="model">由檢視呈現的模型。</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ViewEngineCollection">
      <summary>取得檢視引擎集合。</summary>
      <returns>檢視引擎集合。</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerActionInvoker">
      <summary>表示負責叫用控制器之動作方法的類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ControllerActionInvoker" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerActionInvoker.Binders">
      <summary>取得或設定與動作相關聯的模型繫結器。</summary>
      <returns>與動作相關聯的模型繫結器。</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.CreateActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Object)">
      <summary>建立動作結果。</summary>
      <returns>動作結果物件。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">動作描述元。</param>
      <param name="actionReturnValue">動作傳回值。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.FindAction(System.Web.Mvc.ControllerContext,System.Web.Mvc.ControllerDescriptor,System.String)">
      <summary>尋找動作方法的相關資訊。</summary>
      <returns>動作方法相關資訊。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="controllerDescriptor">控制器描述元。</param>
      <param name="actionName">動作的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>使用指定的控制器內容，擷取控制器的相關資訊。</summary>
      <returns>控制器的相關資訊。</returns>
      <param name="controllerContext">控制器內容。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>擷取動作篩選條件的相關資訊。</summary>
      <returns>動作篩選條件的相關資訊。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">動作描述元。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ParameterDescriptor)">
      <summary>取得指定之動作方法參數的值。</summary>
      <returns>動作方法參數的值。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="parameterDescriptor">參數描述元。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValues(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>取得動作方法參數的值。</summary>
      <returns>動作方法參數的值。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">動作描述元。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>使用指定的控制器內容，叫用指定的動作。</summary>
      <returns>執行動作的結果。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionName">要叫用的動作名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.Threading.ThreadAbortException">執行緒已在動作的引動過程期間中止。</exception>
      <exception cref="T:System.Exception">動作的引動過程期間發生未指定的錯誤。</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的參數和控制器內容，叫用指定的動作方法。</summary>
      <returns>執行動作方法的結果。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">動作描述元。</param>
      <param name="parameters">參數。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的參數、控制器內容和動作篩選條件，叫用指定的動作方法。</summary>
      <returns>
        <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> 類別之 ActionExecuted 方法的內容。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="filters">動作篩選條件。</param>
      <param name="actionDescriptor">動作描述元。</param>
      <param name="parameters">參數。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>使用指定的控制器內容，叫用指定的動作結果。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionResult">動作結果。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IResultFilter},System.Web.Mvc.ActionResult)">
      <summary>使用指定的動作篩選條件和控制器內容，叫用指定的動作結果。</summary>
      <returns>
        <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> 類別之 ResultExecuted 方法的內容。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="filters">動作篩選條件。</param>
      <param name="actionResult">動作結果。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthenticationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.Filters.IAuthenticationFilter},System.Web.Mvc.ActionDescriptor)"></member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthenticationFiltersChallenge(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.Filters.IAuthenticationFilter},System.Web.Mvc.ActionDescriptor,System.Web.Mvc.ActionResult)"></member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthorizationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IAuthorizationFilter},System.Web.Mvc.ActionDescriptor)">
      <summary>使用指定的動作描述元和控制器內容，叫用指定的授權篩選。</summary>
      <returns>
        <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 物件的內容。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="filters">授權篩選。</param>
      <param name="actionDescriptor">動作描述元。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeExceptionFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IExceptionFilter},System.Exception)">
      <summary>使用指定的例外狀況和控制器內容，叫用指定的例外狀況篩選條件。</summary>
      <returns>
        <see cref="T:System.Web.Mvc.HandleErrorAttribute" /> 物件的內容。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="filters">例外狀況篩選條件。</param>
      <param name="exception">例外狀況。</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerBase">
      <summary>表示所有 MVC 控制器的基底類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ControllerBase" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ControllerContext">
      <summary>取得或設定控制器內容。</summary>
      <returns>控制器內容。</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)">
      <summary>執行指定的要求內容。</summary>
      <param name="requestContext">要求內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestContext" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.ExecuteCore">
      <summary>執行要求。</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Initialize(System.Web.Routing.RequestContext)">
      <summary>初始化指定的要求內容。</summary>
      <param name="requestContext">要求內容。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)">
      <summary>執行指定的要求內容。</summary>
      <param name="requestContext">要求內容。</param>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.TempData">
      <summary>取得或設定暫存資料的字典。</summary>
      <returns>暫存資料的字典。</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValidateRequest">
      <summary>取得或設定值，這個值表示此要求是否已啟用要求驗證。</summary>
      <returns>如果此要求已啟用要求驗證，則為 true，否則為 false。預設值為 true。</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValueProvider">
      <summary>取得或設定控制器的值提供者。</summary>
      <returns>控制器的值提供者。</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewBag">
      <summary>取得動態檢視資料字典。</summary>
      <returns>動態檢視資料字典。</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewData">
      <summary>取得或設定檢視資料的字典。</summary>
      <returns>檢視資料的字典。</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerBuilder">
      <summary>表示負責動態建置控制器的類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ControllerBuilder" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.Current">
      <summary>取得目前的控制器產生器物件。</summary>
      <returns>目前的控制器產生器。</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.DefaultNamespaces">
      <summary>取得預設命名空間。</summary>
      <returns>預設命名空間。</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.GetControllerFactory">
      <summary>取得相關聯的控制器 Factory。</summary>
      <returns>控制器 Factory。</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Type)">
      <summary>使用指定的型別來設定控制器 Factory。</summary>
      <param name="controllerFactoryType">控制器 Factory 的型別。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerFactoryType" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">無法從 <paramref name="controllerFactoryType" /> 參數中的型別指派控制器 Factory。</exception>
      <exception cref="T:System.InvalidOperationException">設定控制器 Factory 時發生錯誤。</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Web.Mvc.IControllerFactory)">
      <summary>設定指定的控制器 Factory。</summary>
      <param name="controllerFactory">控制器 Factory。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerFactory" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.ControllerContext">
      <summary>封裝符合指定之 <see cref="T:System.Web.Routing.RouteBase" /> 和 <see cref="T:System.Web.Mvc.ControllerBase" /> 執行個體的 HTTP 要求之相關資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ControllerContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.HttpContextBase,System.Web.Routing.RouteData,System.Web.Mvc.ControllerBase)">
      <summary>使用指定的 HTTP 內容、URL 路徑資料和控制器，初始化 <see cref="T:System.Web.Mvc.ControllerContext" /> 類別的新執行個體。</summary>
      <param name="httpContext">HTTP 內容。</param>
      <param name="routeData">路徑資料。</param>
      <param name="controller">控制器。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>使用指定的控制器內容，初始化 <see cref="T:System.Web.Mvc.ControllerContext" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Routing.RequestContext,System.Web.Mvc.ControllerBase)">
      <summary>使用指定的要求內容和控制器，初始化 <see cref="T:System.Web.Mvc.ControllerContext" /> 類別的新執行個體。</summary>
      <param name="requestContext">要求內容。</param>
      <param name="controller">控制器。</param>
      <exception cref="T:System.ArgumentNullException">參數的其中之一或兩者都是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.Controller">
      <summary>取得或設定控制器。</summary>
      <returns>控制器。</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.DisplayMode">
      <summary>取得顯示模式。</summary>
      <returns>顯示模式。</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.HttpContext">
      <summary>取得或設定 HTTP 內容。</summary>
      <returns>HTTP 內容。</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.IsChildAction">
      <summary>取得值，該值表示相關聯動作方法是否為子系動作。</summary>
      <returns>如果關聯動作方法為子系動作，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.ParentActionViewContext">
      <summary>取得物件，該物件包含父代動作方法的檢視內容資訊。</summary>
      <returns>包含父代動作方法的檢視內容資訊的物件。</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RequestContext">
      <summary>取得或設定要求內容。</summary>
      <returns>要求內容。</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RouteData">
      <summary>取得或設定 URL 路徑資料。</summary>
      <returns>URL 路徑資料。</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerDescriptor">
      <summary>封裝描述控制項的資訊，例如其名稱、型別和動作。</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ControllerDescriptor" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerName">
      <summary>取得控制器的名稱。</summary>
      <returns>控制器的名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerType">
      <summary>取得控制器的型別。</summary>
      <returns>控制器的型別。</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>使用指定的名稱和控制器內容，尋找動作方法。</summary>
      <returns>動作方法的相關資訊。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionName">動作的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCanonicalActions">
      <summary>擷取控制器中的動作方法描述元清單。</summary>
      <returns>控制器中的動作方法描述元清單。</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>擷取針對此成員定義的自訂屬性，但不包括具名屬性。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.TypeLoadException">無法載入自訂屬性型別。</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">針對此成員定義了一個以上的型別 <paramref name="attributeType" /> 屬性。</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>擷取針對此成員定義之指定型別的自訂屬性，但不包括具名屬性。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.TypeLoadException">無法載入自訂屬性型別。</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">針對此成員定義了一個以上的型別 <paramref name="attributeType" /> 屬性。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeType" /> 參數為 null (在 Visual Basic 中為 Nothing)。</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>取得篩選條件屬性。</summary>
      <returns>篩選條件屬性。</returns>
      <param name="useCache">如果應該使用快取，則為 true，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>擷取值，這個值表示是否已為此成員定義指定之自訂屬性的一個或多個執行個體。</summary>
      <returns>如果已定義此成員的 <paramref name="attributeType" />，則為 true，否則為 false。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeType" /> 參數為 null (在 Visual Basic 中為 Nothing)。</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.UniqueId">
      <summary>在衍生類別中實作時，使用延遲初始設定取得控制器描述元的唯一 ID。</summary>
      <returns>唯一 ID。</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerInstanceFilterProvider">
      <summary>將控制器加入至 <see cref="T:System.Web.Mvc.FilterProviderCollection" /> 執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ControllerInstanceFilterProvider" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>傳回控制器執行個體篩選的集合。</summary>
      <returns>控制器執行個體篩選的集合。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">動作描述元。</param>
    </member>
    <member name="T:System.Web.Mvc.CustomModelBinderAttribute">
      <summary>表示叫用自訂模型繫結器的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.CustomModelBinderAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.GetBinder">
      <summary>擷取相關聯的模型繫結器。</summary>
      <returns>實作 <see cref="T:System.Web.Mvc.IModelBinder" /> 介面的物件參考。</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadata">
      <summary>針對資料模型的通用中繼資料、<see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" /> 類別和 <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" /> 類別，提供容器。</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.#ctor(System.Web.Mvc.DataAnnotationsModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String,System.ComponentModel.DataAnnotations.DisplayColumnAttribute)">
      <summary>初始化 <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" /> 類別的新執行個體。</summary>
      <param name="provider">資料附註模型中繼資料提供者。</param>
      <param name="containerType">容器的型別。</param>
      <param name="modelAccessor">模型存取子。</param>
      <param name="modelType">模型的型別。</param>
      <param name="propertyName">屬性的名稱。</param>
      <param name="displayColumnAttribute">顯示資料行屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.GetSimpleDisplayText">
      <summary>傳回模型資料的簡單文字。</summary>
      <returns>模型資料的簡單文字。</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider">
      <summary>實作 ASP.NET MVC 的預設模型中繼資料提供者。</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>取得指定之屬性的中繼資料。</summary>
      <returns>屬性的中繼資料。</returns>
      <param name="attributes">屬性。</param>
      <param name="containerType">容器的型別。</param>
      <param name="modelAccessor">模型存取子。</param>
      <param name="modelType">模型的型別。</param>
      <param name="propertyName">屬性的名稱。</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidationFactory">
      <summary>表示建立 <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" /> 執行個體的方法。</summary>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator">
      <summary>提供模型驗證程式。</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>初始化 <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" /> 類別的新執行個體。</summary>
      <param name="metadata">模型的中繼資料。</param>
      <param name="context">模型的控制器內容。</param>
      <param name="attribute">模型的驗證屬性。</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.Attribute">
      <summary>取得模型驗證程式的驗證屬性。</summary>
      <returns>模型驗證程式的驗證屬性。</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.ErrorMessage">
      <summary>取得驗證失敗的錯誤訊息。</summary>
      <returns>驗證失敗的錯誤訊息。</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.GetClientValidationRules">
      <summary>擷取用戶端驗證規則集合。</summary>
      <returns>用戶端驗證規則的集合。</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.IsRequired">
      <summary>取得值，這個值表示是否需要模型驗證。</summary>
      <returns>如果需要模型驗證，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.Validate(System.Object)">
      <summary>傳回模型的驗證錯誤訊息清單。</summary>
      <returns>模型的驗證錯誤訊息清單，如果未發生錯誤則為空白清單。</returns>
      <param name="container">模型的容器。</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator`1">
      <summary>提供指定之驗證類型的模型驗證程式。</summary>
      <typeparam name="TAttribute"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator`1.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,`0)">
      <summary>初始化 <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" /> 類別的新執行個體。</summary>
      <param name="metadata">模型的中繼資料。</param>
      <param name="context">模型的控制器內容。</param>
      <param name="attribute">模型的驗證屬性。</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator`1.Attribute">
      <summary>從模型驗證程式取得驗證屬性。</summary>
      <returns>來自模型驗證程式的驗證屬性。</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider">
      <summary>實作 ASP.NET MVC 的預設驗證提供者。</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidatorProvider.AddImplicitRequiredAttributeForValueTypes">
      <summary>取得或設定值，這個值表示是否需要不可為 Null 的實值型別。</summary>
      <returns>如果需要不可為 Null 的實值型別，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>取得驗證程式清單。</summary>
      <returns>驗證程式清單。</returns>
      <param name="metadata">中繼資料。</param>
      <param name="context">內容。</param>
      <param name="attributes">驗證屬性清單。</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>註冊配接器來提供用戶端驗證。</summary>
      <param name="attributeType">驗證屬性的型別。</param>
      <param name="adapterType">配接器的型別。</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>註冊驗證提供者的配接器 Factory。</summary>
      <param name="attributeType">屬性的型別。</param>
      <param name="factory">Factory，用於建立指定之屬性的 <see cref="T:System.Web.Mvc.ModelValidator" /> 物件。</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>註冊預設配接器。</summary>
      <param name="adapterType">配接器的型別。</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>註冊預設配接器 Factory。</summary>
      <param name="factory">Factory，用於建立預設配接器的 <see cref="T:System.Web.Mvc.ModelValidator" /> 物件。</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>註冊配接器以提供預設物件驗證。</summary>
      <param name="adapterType">配接器的型別。</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>註冊預設物件驗證提供者的配接器 Factory。</summary>
      <param name="factory">Factory。</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>註冊配接器以提供物件驗證。</summary>
      <param name="modelType">模型的型別。</param>
      <param name="adapterType">配接器的型別。</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>註冊物件驗證提供者的配接器 Factory。</summary>
      <param name="modelType">模型的型別。</param>
      <param name="factory">Factory。</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>提供以 <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" /> 為基礎之驗證程式的 Factory。</summary>
    </member>
    <member name="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider">
      <summary>提供錯誤資訊模型驗證程式的容器。</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>取得錯誤資訊模型驗證程式的清單。</summary>
      <returns>錯誤資訊模型驗證程式的清單。</returns>
      <param name="metadata">模型中繼資料。</param>
      <param name="context">控制器內容。</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultControllerFactory">
      <summary>表示預設會註冊的控制器 Factory。</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.DefaultControllerFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor(System.Web.Mvc.IControllerActivator)">
      <summary>使用控制器啟動項，初始化 <see cref="T:System.Web.Mvc.DefaultControllerFactory" /> 類別的新執行個體。</summary>
      <param name="controllerActivator">實作控制器啟動項介面的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>使用指定的要求內容，建立指定的控制器。</summary>
      <returns>控制器。</returns>
      <param name="requestContext">HTTP 要求的內容，其中包含 HTTP 內容和路由資料。</param>
      <param name="controllerName">控制器的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestContext" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="controllerName" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
      <summary>擷取指定之要求內容和控制器型別的控制器執行個體。</summary>
      <returns>控制器執行個體。</returns>
      <param name="requestContext">HTTP 要求的內容，其中包含 HTTP 內容和路由資料。</param>
      <param name="controllerType">控制器的型別。</param>
      <exception cref="T:System.Web.HttpException">
        <paramref name="controllerType" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">無法指派 <paramref name="controllerType" />。</exception>
      <exception cref="T:System.InvalidOperationException">無法建立 <paramref name="controllerType" /> 的執行個體。</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)">
      <summary>傳回控制器的工作階段行為。</summary>
      <returns>控制器的工作階段行為。</returns>
      <param name="requestContext">要求內容。</param>
      <param name="controllerType">控制器的型別。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerType(System.Web.Routing.RequestContext,System.String)">
      <summary>擷取指定之名稱和要求內容的控制器型別。</summary>
      <returns>控制器類型。</returns>
      <param name="requestContext">HTTP 要求的內容，其中包含 HTTP 內容和路由資料。</param>
      <param name="controllerName">控制器的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>釋放指定的控制器。</summary>
      <param name="controller">要釋放的控制器。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.System#Web#Mvc#IControllerFactory#GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>這個 API 支援 ASP.NET MVC 基礎結構，但不建議直接使用於您的程式碼中。這個方法會呼叫 <see cref="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)" /> 方法。</summary>
      <returns>控制器的工作階段行為。</returns>
      <param name="requestContext">要求內容。</param>
      <param name="controllerName">控制器名稱。</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultModelBinder">
      <summary>將瀏覽器要求對應至資料物件。這個類別提供模型繫結器的具體實作。</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.DefaultModelBinder" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.Binders">
      <summary>取得或設定應用程式的模型繫結器。</summary>
      <returns>應用程式的模型繫結器。</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>使用指定的控制器內容和繫結內容來繫結模型。</summary>
      <returns>繫結的物件。</returns>
      <param name="controllerContext">控制器在其中運作的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingContext " /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor)">
      <summary>使用指定的控制器內容、繫結內容和指定的屬性描述元，繫結指定的屬性。</summary>
      <param name="controllerContext">控制器在其中運作的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
      <param name="propertyDescriptor">描述要繫結的屬性。描述元可提供如元件型別、屬性型別和屬性值這類資訊。它也會提供方法來取得或設定屬性值。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
      <summary>使用指定的控制器內容和繫結內容，建立指定的模型型別。</summary>
      <returns>指定之型別的資料物件。</returns>
      <param name="controllerContext">控制器在其中運作的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
      <param name="modelType">要傳回之模型物件的型別。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.Int32)">
      <summary>根據構成更大索引之元件的分類來建立索引 (子索引)，其中指定的索引值是整數。</summary>
      <returns>子索引的名稱。</returns>
      <param name="prefix">子索引的前置詞。</param>
      <param name="index">索引值。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.String)">
      <summary>根據構成更大索引之元件的分類來建立索引 (子索引)，其中指定的索引值是字串。</summary>
      <returns>子索引的名稱。</returns>
      <param name="prefix">子索引的前置詞。</param>
      <param name="index">索引值。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubPropertyName(System.String,System.String)">
      <summary>使用指定的前置字元和屬性名稱，建立子屬性的名稱。</summary>
      <returns>子屬性的名稱。</returns>
      <param name="prefix">子屬性的前置詞。</param>
      <param name="propertyName">屬性的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetFilteredModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>傳回一組屬性，這些屬性符合指定之 <paramref name="binding context" /> 所建立的屬性篩選條件限制。</summary>
      <returns>屬性描述元的可列舉集。</returns>
      <param name="controllerContext">控制器在其中運作的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>使用指定的控制器內容和繫結內容，傳回模型的屬性。</summary>
      <returns>屬性描述元的集合。</returns>
      <param name="controllerContext">控制器在其中運作的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetPropertyValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Web.Mvc.IModelBinder)">
      <summary>使用指定的控制器內容、繫結內容、屬性描述元和屬性繫結器，傳回屬性的值。</summary>
      <returns>物件，表示屬性值。</returns>
      <param name="controllerContext">控制器在其中運作的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
      <param name="propertyDescriptor">要存取之屬性的描述元。描述元可提供如元件型別、屬性型別和屬性值這類資訊。它也會提供方法來取得或設定屬性值。</param>
      <param name="propertyBinder">提供方法來繫結屬性的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetTypeDescriptor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>針對以控制器內容和繫結內容所指定的型別，傳回描述元物件。</summary>
      <returns>自訂型別描述元物件。</returns>
      <param name="controllerContext">控制器在其中運作的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.IsModelValid(System.Web.Mvc.ModelBindingContext)">
      <summary>判斷資料模型對指定之繫結內容而言是否有效。</summary>
      <returns>如果模型有效，則為 true，否則為 false。</returns>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingContext" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>當模型已更新時呼叫。</summary>
      <param name="controllerContext">控制器在其中運作的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>當模型正在更新時呼叫。</summary>
      <returns>如果模型正在更新，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器在其中運作的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>當指定的屬性已驗證時呼叫。</summary>
      <param name="controllerContext">控制器在其中運作的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
      <param name="propertyDescriptor">描述要驗證的屬性。描述元可提供如元件型別、屬性型別和屬性值這類資訊。它也會提供方法來取得或設定屬性值。</param>
      <param name="value">要為屬性設定值。</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>當指定的屬性正在驗證時呼叫。</summary>
      <returns>如果屬性正在驗證，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器在其中運作的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
      <param name="propertyDescriptor">描述正在驗證的屬性。描述元提供如元件型別、屬性型別和屬性值這類資訊。它也會提供方法來取得或設定屬性值。</param>
      <param name="value">要為屬性設定值。</param>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.ResourceClassKey">
      <summary>取得或設定包含當地語系化字串值的資源檔名稱 (類別機碼)。</summary>
      <returns>資源檔的名稱 (類別機碼)。</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.SetProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>使用指定的控制器內容、繫結內容和屬性值，設定指定的屬性。</summary>
      <param name="controllerContext">控制器在其中運作的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
      <param name="propertyDescriptor">描述要設定的屬性。描述元可提供如元件型別、屬性型別和屬性值這類資訊。它也會提供方法來取得或設定屬性值。</param>
      <param name="value">要為屬性設定值。</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultViewLocationCache">
      <summary>表示檢視位置的記憶體快取。</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.DefaultViewLocationCache" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor(System.TimeSpan)">
      <summary>使用指定的快取時間範圍，初始化 <see cref="T:System.Web.Mvc.DefaultViewLocationCache" /> 類別的新執行個體。</summary>
      <param name="timeSpan">快取時間範圍。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="timeSpan" /> 參數的 Ticks 屬性會設定為負數。</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>使用指定的 HTTP 內容和快取索引鍵，擷取預設檢視位置。</summary>
      <returns>預設檢視位置。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="key">快取索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>使用指定的 HTTP 內容、快取索引鍵和虛擬路徑，在指定的虛擬路徑中插入檢視。</summary>
      <param name="httpContext">HTTP 內容。</param>
      <param name="key">快取索引鍵。</param>
      <param name="virtualPath">虛擬路徑。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> 參數是 null。</exception>
    </member>
    <member name="F:System.Web.Mvc.DefaultViewLocationCache.Null">
      <summary>建立空的檢視位置快取。</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultViewLocationCache.TimeSpan">
      <summary>取得或設定快取時間範圍。</summary>
      <returns>快取時間範圍。</returns>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolver">
      <summary>提供實作 <see cref="T:System.Web.Mvc.IDependencyResolver" /> 或通用服務定位程式 IServiceLocator 介面之相依性解析程式的註冊點。</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.DependencyResolver" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.Current">
      <summary>取得相依性解析程式的實作。</summary>
      <returns>相依性解析程式的實作。</returns>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.InnerCurrent">
      <summary>這個 API 支援 ASP.NET MVC 基礎結構，但不建議直接使用於您的程式碼中。</summary>
      <returns>相依性解析程式的實作。</returns>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})">
      <summary>這個 API 支援 ASP.NET MVC 基礎結構，但不建議直接使用於您的程式碼中。</summary>
      <param name="getService">提供服務的函式。</param>
      <param name="getServices">提供服務的函式。</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Object)">
      <summary>這個 API 支援 ASP.NET MVC 基礎結構，但不建議直接使用於您的程式碼中。</summary>
      <param name="commonServiceLocator">一般服務定位程式。</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>這個 API 支援 ASP.NET MVC 基礎結構，但不建議直接使用於您的程式碼中。</summary>
      <param name="resolver">實作相依性解析程式的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})">
      <summary>使用指定的服務委派和指定的服務集合委派，提供相依性解析程式的註冊點。</summary>
      <param name="getService">服務委派。</param>
      <param name="getServices">服務委派。</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Object)">
      <summary>在使用服務定位程式介面時使用提供的通用服務定位程式，提供相依性解析程式的註冊點。</summary>
      <param name="commonServiceLocator">一般服務定位程式。</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>使用指定的相依性解析程式介面，提供相依性解析程式的註冊點。</summary>
      <param name="resolver">相依性解析程式。</param>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolverExtensions">
      <summary>提供 <see cref="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)" /> 和 <see cref="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)" /> 的型別安全實作。</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetService``1(System.Web.Mvc.IDependencyResolver)">
      <summary>解析支援任意物件建立的單一註冊服務。</summary>
      <returns>要求的服務或物件。</returns>
      <param name="resolver">此方法擴充的相依性解析程式執行個體。</param>
      <typeparam name="TService">要求之服務或物件的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetServices``1(System.Web.Mvc.IDependencyResolver)">
      <summary>解析多次註冊的服務。</summary>
      <returns>要求的服務。</returns>
      <param name="resolver">此方法擴充的相依性解析程式執行個體。</param>
      <typeparam name="TService">要求之服務的型別。</typeparam>
    </member>
    <member name="T:System.Web.Mvc.DictionaryValueProvider`1">
      <summary>表示值提供者的基底類別，該值提供者的值來自實作 <see cref="T:System.Collections.Generic.IDictionary`2" /> 介面的集合。</summary>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.#ctor(System.Collections.Generic.IDictionary{System.String,`0},System.Globalization.CultureInfo)">
      <summary>初始化 <see cref="T:System.Web.Mvc.DictionaryValueProvider`1" /> 類別的新執行個體。</summary>
      <param name="dictionary">用來初始化值提供者的名稱/值組。</param>
      <param name="culture">特定文化特性的相關資訊，例如文化特性、書寫系統與所使用曆法的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.ContainsPrefix(System.String)">
      <summary>判斷集合是否包含指定的前置詞。</summary>
      <returns>如果此集合包含指定的前置詞，則為 true，否則為 false。</returns>
      <param name="prefix">要搜尋的前置字元。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetKeysFromPrefix(System.String)">
      <summary>從前置字元取得索引鍵。</summary>
      <returns>前置詞中的索引鍵。</returns>
      <param name="prefix">前置字元。</param>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetValue(System.String)">
      <summary>使用指定的索引鍵和控制器內容，傳回值物件。</summary>
      <returns>指定之索引鍵的值物件。</returns>
      <param name="key">要擷取之值物件的索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelMetadataProvider">
      <summary>針對不需要中繼資料的資料模型，提供空白中繼資料提供者。</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.EmptyModelMetadataProvider" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>建立 <see cref="T:System.Web.Mvc.ModelMetadata" /> 類別的新執行個體。</summary>
      <returns>
        <see cref="T:System.Web.Mvc.ModelMetadata" /> 類別的新執行個體。</returns>
      <param name="attributes">屬性。</param>
      <param name="containerType">容器的型別。</param>
      <param name="modelAccessor">模型存取子。</param>
      <param name="modelType">模型的型別。</param>
      <param name="propertyName">模型的名稱。</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelValidatorProvider">
      <summary>針對不需要驗證程式的模型，提供空白驗證提供者。</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.EmptyModelValidatorProvider" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>取得空白模型驗證程式。</summary>
      <returns>空白模型驗證程式。</returns>
      <param name="metadata">中繼資料。</param>
      <param name="context">內容。</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyResult">
      <summary>表示沒有任何作用的結果，例如不會傳回任何值的控制器動作方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.EmptyResult" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>執行指定的結果內容。</summary>
      <param name="context">結果內容。</param>
    </member>
    <member name="T:System.Web.Mvc.ExceptionContext">
      <summary>提供用於使用 <see cref="T:System.Web.Mvc.HandleErrorAttribute" /> 類別的內容。</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ExceptionContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor(System.Web.Mvc.ControllerContext,System.Exception)">
      <summary>使用指定的控制器內容，針對指定的例外狀況初始化 <see cref="T:System.Web.Mvc.ExceptionContext" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="exception">例外狀況。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Exception">
      <summary>取得或設定例外狀況物件。</summary>
      <returns>例外狀況物件。</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.ExceptionHandled">
      <summary>取得或設定值，這個值表示是否已處理例外狀況。</summary>
      <returns>如果已處理例外狀況，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Result">
      <summary>取得或設定動作結果。</summary>
      <returns>動作結果。</returns>
    </member>
    <member name="T:System.Web.Mvc.ExpressionHelper">
      <summary>提供 Helper 類別以從運算式取得模型名稱。</summary>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.Linq.Expressions.LambdaExpression)">
      <summary>從 Lambda 運算式取得模型名稱。</summary>
      <returns>模型名稱。</returns>
      <param name="expression">運算式。</param>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.String)">
      <summary>從字串運算式取得模型名稱。</summary>
      <returns>模型名稱。</returns>
      <param name="expression">運算式。</param>
    </member>
    <member name="T:System.Web.Mvc.FieldValidationMetadata">
      <summary>提供用於用戶端欄位驗證中繼資料的容器。</summary>
    </member>
    <member name="M:System.Web.Mvc.FieldValidationMetadata.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.FieldValidationMetadata" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.FieldName">
      <summary>取得或設定資料欄位的名稱。</summary>
      <returns>資料欄位的名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ReplaceValidationMessageContents">
      <summary>取得或設定值，這個值表示驗證訊息內容是否應該取代成用戶端驗證錯誤。</summary>
      <returns>如果驗證訊息內容應該取代成用戶端驗證錯誤，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationMessageId">
      <summary>取得或設定驗證程式訊息 ID。</summary>
      <returns>驗證程式訊息 ID。</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationRules">
      <summary>取得用戶端驗證規則。</summary>
      <returns>用戶端驗證規則。</returns>
    </member>
    <member name="T:System.Web.Mvc.FileContentResult">
      <summary>將二進位檔案的內容傳送至回應。</summary>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.#ctor(System.Byte[],System.String)">
      <summary>使用指定的檔案內容和內容類型，初始化 <see cref="T:System.Web.Mvc.FileContentResult" /> 類別的新執行個體。</summary>
      <param name="fileContents">要傳送至回應的位元組陣列。</param>
      <param name="contentType">要用於回應的內容類型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileContents" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.FileContentResult.FileContents">
      <summary>要傳送至回應的二進位內容。</summary>
      <returns>檔案內容。</returns>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>將檔案內容寫入至回應。</summary>
      <param name="response">回應。</param>
    </member>
    <member name="T:System.Web.Mvc.FilePathResult">
      <summary>將檔案的內容傳送至回應。</summary>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.#ctor(System.String,System.String)">
      <summary>使用指定的檔案名稱和內容類型，初始化 <see cref="T:System.Web.Mvc.FilePathResult" /> 類別的新執行個體。</summary>
      <param name="fileName">要傳送至回應的檔案名稱。</param>
      <param name="contentType">回應的內容類型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileName" /> 參數是 null 或空白。</exception>
    </member>
    <member name="P:System.Web.Mvc.FilePathResult.FileName">
      <summary>取得或設定傳送至回應的檔案路徑。</summary>
      <returns>傳送至回應的檔案路徑。</returns>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>將檔案寫入至回應。</summary>
      <param name="response">回應。</param>
    </member>
    <member name="T:System.Web.Mvc.FileResult">
      <summary>表示用來將二進位檔案內容傳送至回應的基底類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.FileResult.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Web.Mvc.FileResult" /> 類別的新執行個體。</summary>
      <param name="contentType">內容的類型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="contentType" /> 參數是 null 或空白。</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.ContentType">
      <summary>取得要用於回應的內容類型。</summary>
      <returns>內容的類型。</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>以繼承自 <see cref="T:System.Web.Mvc.ActionResult" /> 類別的自訂型別，來處理動作方法的結果。</summary>
      <param name="context">執行結果時所在範圍的內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.FileDownloadName">
      <summary>取得或設定內容配置標頭，讓具有指定檔案名稱的檔案下載對話方塊顯示在瀏覽器中。</summary>
      <returns>檔案的名稱。</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>將檔案寫入至回應。</summary>
      <param name="response">回應。</param>
    </member>
    <member name="T:System.Web.Mvc.FileStreamResult">
      <summary>使用 <see cref="T:System.IO.Stream" /> 執行個體將二進位內容傳送至回應。</summary>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)">
      <summary>初始化 <see cref="T:System.Web.Mvc.FileStreamResult" /> 類別的新執行個體。</summary>
      <param name="fileStream">要傳送至回應的資料流。</param>
      <param name="contentType">要用於回應的內容類型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.FileStreamResult.FileStream">
      <summary>取得要傳送至回應的資料流。</summary>
      <returns>檔案資料流。</returns>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>將檔案寫入至回應。</summary>
      <param name="response">回應。</param>
    </member>
    <member name="T:System.Web.Mvc.Filter">
      <summary>表示中繼資料類別，這個類別包含對一個或多個篩選條件介面、篩選條件順序及範圍之實作的參考。</summary>
    </member>
    <member name="M:System.Web.Mvc.Filter.#ctor(System.Object,System.Web.Mvc.FilterScope,System.Nullable{System.Int32})">
      <summary>初始化 <see cref="T:System.Web.Mvc.Filter" /> 類別的新執行個體。</summary>
      <param name="instance">執行個體。</param>
      <param name="scope">範圍。</param>
      <param name="order">順序。</param>
    </member>
    <member name="F:System.Web.Mvc.Filter.DefaultOrder">
      <summary>表示用來指定篩選條件預設順序的常數。</summary>
    </member>
    <member name="P:System.Web.Mvc.Filter.Instance">
      <summary>取得此類別的執行個體。</summary>
      <returns>此類別的執行個體。</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Order">
      <summary>取得篩選條件的套用順序。</summary>
      <returns>篩選條件的套用順序。</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Scope">
      <summary>取得篩選的範圍順序。</summary>
      <returns>篩選的範圍順序。</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttribute">
      <summary>表示動作和結果篩選條件屬性的基底類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.FilterAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.AllowMultiple">
      <summary>取得或設定值，這個值表示是否可以指定多個篩選條件屬性執行個體。</summary>
      <returns>如果可以指定多個篩選條件屬性執行個體，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.Order">
      <summary>取得或設定動作篩選條件的執行順序。</summary>
      <returns>動作篩選條件的執行順序。</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttributeFilterProvider">
      <summary>定義篩選條件屬性的篩選條件提供者。</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" /> 類別的新執行個體，並且選擇性地快取屬性執行個體。</summary>
      <param name="cacheAttributeInstances">true 表示要快取屬性執行個體，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetActionAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>取得自訂動作屬性的集合。</summary>
      <returns>自訂動作屬性的集合。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">動作描述元。</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetControllerAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>取得控制器屬性的集合。</summary>
      <returns>控制器屬性的集合。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">動作描述元。</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>將所有篩選條件提供者的篩選條件彙總至一個集合。</summary>
      <returns>所有篩選條件提供者的集合篩選條件。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">動作描述元。</param>
    </member>
    <member name="T:System.Web.Mvc.FilterInfo">
      <summary>封裝可用動作篩選條件的相關資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.FilterInfo" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor(System.Collections.Generic.IEnumerable{System.Web.Mvc.Filter})">
      <summary>使用指定的篩選條件集合，初始化 <see cref="T:System.Web.Mvc.FilterInfo" /> 類別的新執行個體。</summary>
      <param name="filters">篩選條件集合。</param>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ActionFilters">
      <summary>取得應用程式中的所有動作篩選條件。</summary>
      <returns>動作篩選條件。</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthenticationFilters">
      <summary>取得應用程式中的所有驗證篩選條件。</summary>
      <returns>驗證篩選條件清單。</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthorizationFilters">
      <summary>取得應用程式中的所有授權篩選。</summary>
      <returns>授權篩選。</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ExceptionFilters">
      <summary>取得應用程式中的所有例外狀況篩選條件。</summary>
      <returns>例外狀況篩選條件。</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ResultFilters">
      <summary>取得應用程式中的所有結果篩選條件。</summary>
      <returns>結果篩選條件。</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterProviderCollection">
      <summary>表示應用程式的篩選條件提供者集合。</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.FilterProviderCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IFilterProvider})">
      <summary>初始化具有指定的篩選條件提供者的 <see cref="T:System.Web.Mvc.FilterProviderCollection" /> 類別的新執行個體。</summary>
      <param name="providers">篩選條件提供者的清單。</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.ClearItems">
      <summary>從集合移除所有元素。</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>傳回篩選條件提供者集合。</summary>
      <returns>篩選條件提供者集合。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">動作描述元。</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IFilterProvider)">
      <summary>將元素插入至集合中的指定索引處。</summary>
      <param name="index">應該插入 item 之以零起始的索引。</param>
      <param name="item">要插入的物件。此值可以是 null 以做為參照類型。</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.RemoveItem(System.Int32)">
      <summary>移除集合的指定索引處的項目</summary>
      <param name="index">要移除的項目之以零起始的索引。</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.SetItem(System.Int32,System.Web.Mvc.IFilterProvider)">
      <summary>取代指定之索引處的項目。</summary>
      <param name="index">要取代的項目之以零起始的索引。</param>
      <param name="item">指定之索引處的項目新值。此值可以是 null 以做為參照類型。</param>
    </member>
    <member name="T:System.Web.Mvc.FilterProviders">
      <summary>提供篩選的註冊點。</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterProviders.Providers">
      <summary>提供篩選的註冊點。</summary>
      <returns>篩選的集合。</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterScope">
      <summary>定義用來指定在相同的篩選類型和篩選順序中 ASP.NET MVC 篩選執行順序的值。</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Action">
      <summary>指定 <see cref="F:System.Web.Mvc.FilterScope.Last" />之前及 <see cref="F:System.Web.Mvc.FilterScope.Controller" /> 之後的順序。</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Controller">
      <summary>指定 <see cref="F:System.Web.Mvc.FilterScope.Action" />之前及 <see cref="F:System.Web.Mvc.FilterScope.Global" /> 之後的順序。</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.First">
      <summary>最先指定。</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Global">
      <summary>指定 <see cref="F:System.Web.Mvc.FilterScope.Controller" />之前及 <see cref="F:System.Web.Mvc.FilterScope.First" /> 之後的順序。</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Last">
      <summary>最後指定。</summary>
    </member>
    <member name="T:System.Web.Mvc.FormCollection">
      <summary>包含應用程式的表單值提供者。</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.FormCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>初始化 <see cref="T:System.Web.Mvc.FormCollection" /> 類別的新執行個體。</summary>
      <param name="collection">集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.GetValue(System.String)">
      <summary>取得指定的值提供者。</summary>
      <returns>值提供者。</returns>
      <param name="name">要取得之值提供者的名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>取得值，指出值提供者是否包含具有指定之前置詞的項目。</summary>
      <returns>如果值提供者包含具有指定之前置詞的項目，則為 true，否則為 false。</returns>
      <param name="prefix">要尋找的前置詞。</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>使用指定的索引鍵，從值提供者取得值。</summary>
      <returns>來自值提供者的值。</returns>
      <param name="key">索引鍵。</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.ToValueProvider">
      <summary>傳回包含值提供者的字典。</summary>
      <returns>值提供者的字典。</returns>
    </member>
    <member name="T:System.Web.Mvc.FormContext">
      <summary>封裝驗證和處理 HTML 表單的輸入資料時所需的資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.FormContext.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.FormContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FieldValidators">
      <summary>取得表單的欄位驗證程式。</summary>
      <returns>表單之欄位驗證程式的字典。</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FormId">
      <summary>取得或設定表單識別項。</summary>
      <returns>表單識別項。</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetJsonValidationMetadata">
      <summary>傳回序列化物件，這個物件包含表單識別項和表單欄位驗證值。</summary>
      <returns>序列化物件，包含表單的表單識別碼和欄位驗證值。</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String)">
      <summary>傳回指定之輸入欄位的驗證值。</summary>
      <returns>驗證欄位輸入所要根據的值。</returns>
      <param name="fieldName">要從中擷取驗證值之欄位的名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fieldName" /> 參數為 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String,System.Boolean)">
      <summary>傳回指定之輸入欄位的驗證值，以及表示找不到驗證值時應該如何處理的值。</summary>
      <returns>驗證欄位輸入所要根據的值。</returns>
      <param name="fieldName">要從中擷取驗證值之欄位的名稱。</param>
      <param name="createIfNotFound">true 表示如果找不到驗證值，則建立驗證值，否則為 false。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fieldName" /> 參數為 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String)">
      <summary>傳回值，這個值表示指定的欄位是否已呈現在表單中。</summary>
      <returns>如果欄位已呈現，則為 true，否則為 false。</returns>
      <param name="fieldName">欄位名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String,System.Boolean)">
      <summary>設定值，這個值表示指定的欄位是否已呈現在表單中。</summary>
      <param name="fieldName">欄位名稱。</param>
      <param name="value">true 表示指定欄位已呈現在表單中，否則為 false。</param>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ReplaceValidationSummary">
      <summary>決定用戶端驗證錯誤是否應該動態加入至驗證摘要。</summary>
      <returns>如果用戶端驗證錯誤應該加入至驗證摘要，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ValidationSummaryId">
      <summary>取得或設定驗證摘要的識別碼。</summary>
      <returns>驗證摘要的識別碼。</returns>
    </member>
    <member name="T:System.Web.Mvc.FormMethod">
      <summary>列舉表單的 HTTP 要求類型。</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Get">
      <summary>指定 GET 要求。</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Post">
      <summary>指定 POST 要求。</summary>
    </member>
    <member name="T:System.Web.Mvc.FormValueProvider">
      <summary>表示 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 物件中所含表單值的值提供者。</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>初始化 <see cref="T:System.Web.Mvc.FormValueProvider" /> 類別的新執行個體。</summary>
      <param name="controllerContext">物件，會封裝目前 HTTP 要求之相關資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.FormValueProviderFactory">
      <summary>表示負責建立表單值提供者物件之新執行個體的類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.FormValueProviderFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>針對指定的控制器內容傳回表單值提供者物件。</summary>
      <returns>表單值提供者物件。</returns>
      <param name="controllerContext">物件，會封裝目前 HTTP 要求之相關資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilterCollection">
      <summary>表示包含所有全域篩選的類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.GlobalFilterCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object)">
      <summary>將指定的篩選加入至全域篩選集合。</summary>
      <param name="filter">篩選器。</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object,System.Int32)">
      <summary>使用指定的篩選執行順序，將指定的篩選加入至全域篩選集合。</summary>
      <param name="filter">篩選器。</param>
      <param name="order">篩選器執行順序。</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Clear">
      <summary>從全域篩選集合中移除所有篩選。</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Contains(System.Object)">
      <summary>判斷篩選是否在全域篩選集合中。</summary>
      <returns>如果在全域篩選集合中找到 <paramref name="filter" />，則為 true，否則為 false。</returns>
      <param name="filter">篩選器。</param>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilterCollection.Count">
      <summary>取得全域篩選集合中的篩選數目。</summary>
      <returns>全域篩選集合中的篩選數目。</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.GetEnumerator">
      <summary>傳回會逐一查看全域篩選集合的列舉值。</summary>
      <returns>會逐一查看全域篩選集合的列舉值。</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Remove(System.Object)">
      <summary>移除符合指定篩選的所有篩選。</summary>
      <param name="filter">要移除的篩選器。</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>這個 API 支援 ASP.NET MVC 基礎結構，但不建議直接使用於您的程式碼中。</summary>
      <returns>會逐一查看全域篩選集合的列舉值。</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Web#Mvc#IFilterProvider#GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>這個 API 支援 ASP.NET MVC 基礎結構，但不建議直接使用於您的程式碼中。</summary>
      <returns>會逐一查看全域篩選集合的列舉值。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">動作描述元。</param>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilters">
      <summary>表示全域篩選集合。</summary>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilters.Filters">
      <summary>取得或設定全域篩選集合。</summary>
      <returns>全域篩選集合。</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorAttribute">
      <summary>表示用來處理動作方法所擲回之例外狀況的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.HandleErrorAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.ExceptionType">
      <summary>取得或設定例外狀況的類型。</summary>
      <returns>例外狀況的類型。</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.Master">
      <summary>取得或設定用來顯示例外狀況資訊的主版檢視。</summary>
      <returns>主版檢視。</returns>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>在發生例外狀況時呼叫。</summary>
      <param name="filterContext">動作篩選條件內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filterContext" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.TypeId">
      <summary>取得此屬性的唯一識別項。</summary>
      <returns>此屬性的唯一識別項。</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.View">
      <summary>取得或設定用來顯示例外狀況資訊的頁面檢視。</summary>
      <returns>頁面檢視。</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorInfo">
      <summary>封裝處理動作方法所擲回之錯誤的資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorInfo.#ctor(System.Exception,System.String,System.String)">
      <summary>初始化 <see cref="T:System.Web.Mvc.HandleErrorInfo" /> 類別的新執行個體。</summary>
      <param name="exception">例外狀況。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="actionName">動作的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="controllerName" /> 或 <paramref name="actionName" /> 參數為 null 或空白。</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ActionName">
      <summary>取得或設定擲回例外狀況時所執行的動作名稱。</summary>
      <returns>動作的名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ControllerName">
      <summary>取得或設定包含擲回例外狀況之動作方法的控制器名稱。</summary>
      <returns>控制器的名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.Exception">
      <summary>取得或設定例外狀況物件。</summary>
      <returns>例外狀況物件。</returns>
    </member>
    <member name="T:System.Web.Mvc.HiddenInputAttribute">
      <summary>表示屬性 (Attribute)，這個屬性 (Attribute) 用於表示屬性 (Property) 或欄位值是否應該呈現為隱藏的 input 項目。</summary>
    </member>
    <member name="M:System.Web.Mvc.HiddenInputAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.HiddenInputAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.HiddenInputAttribute.DisplayValue">
      <summary>取得或設定值，這個值表示是否顯示隱藏之 input 項目的值。</summary>
      <returns>如果應該顯示值，則為 true，否則為 false。</returns>
    </member>
    <member name="T:System.Web.Mvc.Html5DateRenderingMode">
      <summary>列舉 HTML5 的日期呈現模式。</summary>
    </member>
    <member name="F:System.Web.Mvc.Html5DateRenderingMode.CurrentCulture">
      <summary>目前文化特性格式。</summary>
    </member>
    <member name="F:System.Web.Mvc.Html5DateRenderingMode.Rfc3339">
      <summary>RFC 3339 格式。</summary>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper">
      <summary>支援在檢視中呈現 HTML 控制項。</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>使用指定的檢視內容和檢視資料容器，初始化 <see cref="T:System.Web.Mvc.HtmlHelper" /> 類別的新執行個體。</summary>
      <param name="viewContext">檢視內容。</param>
      <param name="viewDataContainer">檢視資料容器。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Web.Mvc.ViewContext" /> 或 viewDataContainer 參數為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>使用指定的檢視內容、檢視資料容器和路由集合，初始化 <see cref="T:System.Web.Mvc.HtmlHelper" /> 類別的新執行個體。</summary>
      <param name="viewContext">檢視內容。</param>
      <param name="viewDataContainer">檢視資料容器。</param>
      <param name="routeCollection">路徑集合。</param>
      <exception cref="T:System.ArgumentNullException">一或多個參數為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
      <summary>在指定的 HTML 屬性中以連字號 (-) 取代底線字元 (_)。</summary>
      <returns>HTML 屬性，其中底線字元已取代為連字號。</returns>
      <param name="htmlAttributes">HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken">
      <summary>產生隱藏的表單欄位 (防偽語彙基元)，表單送出時會驗證這個欄位。</summary>
      <returns>產生的表單欄位 (防偽語彙基元)。</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String)">
      <summary>產生隱藏的表單欄位 (防偽語彙基元)，表單送出時會驗證這個欄位。欄位值是使用指定的 Salt 值來產生。</summary>
      <returns>產生的表單欄位 (防偽語彙基元)。</returns>
      <param name="salt">Salt 值，可以是任何非空白字串。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String,System.String,System.String)">
      <summary>產生隱藏的表單欄位 (防偽語彙基元)，表單送出時會驗證這個欄位。欄位值是使用指定的 Salt 值、網域和路徑來產生。</summary>
      <returns>產生的表單欄位 (防偽語彙基元)。</returns>
      <param name="salt">Salt 值，可以是任何非空白字串。</param>
      <param name="domain">應用程式定義域。</param>
      <param name="path">虛擬路徑。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.Object)">
      <summary>將指定的屬性值轉換成 HTML 編碼字串。</summary>
      <returns>HTML 編碼字串。如果值參數是 null 或空白，這個方法會傳回空字串。</returns>
      <param name="value">要編碼的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.String)">
      <summary>將指定的屬性值轉換成 HTML 編碼字串。</summary>
      <returns>HTML 編碼字串。如果值參數是 null 或空白，這個方法會傳回空字串。</returns>
      <param name="value">要編碼的字串。</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ClientValidationEnabled">
      <summary>取得或設定值，這個值表示用戶端驗證是否啟用。</summary>
      <returns>如果啟用用戶端驗證，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation">
      <summary>啟用輸入驗證，該輸入驗證透過在瀏覽器中使用用戶端指令碼來執行。</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation(System.Boolean)">
      <summary>啟用或停用用戶端驗證。</summary>
      <param name="enabled">若要啟用用戶端驗證，則為 true，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript">
      <summary>啟用或停用不顯眼的 JavaScript。</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript(System.Boolean)">
      <summary>啟用或停用不顯眼的 JavaScript。</summary>
      <param name="enabled">若要啟用不顯眼的 JavaScript，則為 true，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.Object)">
      <summary>將指定之物件的值轉換成 HTML 編碼字串。</summary>
      <returns>HTML 編碼字串。</returns>
      <param name="value">要編碼的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.String)">
      <summary>將指定的字串轉換成 HTML 編碼字串。</summary>
      <returns>HTML 編碼字串。</returns>
      <param name="value">要編碼的字串。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.FormatValue(System.Object,System.String)">
      <summary>將值格式化。</summary>
      <returns>已格式化的值。</returns>
      <param name="value">數值。</param>
      <param name="format">格式字串。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String)">
      <summary>使用指定的 HTML 項目名稱建立項目 ID。</summary>
      <returns>HTML 項目的 ID。</returns>
      <param name="name">HTML 項目的名稱。</param>
      <exception cref="T:System.ArgumentNullException">name 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String,System.String)">
      <summary>使用指定的項目名稱和在名稱中取代點的字串，建立 HTML 項目 ID。</summary>
      <returns>HTML 項目的 ID。</returns>
      <param name="name">HTML 項目的名稱。</param>
      <param name="idAttributeDotReplacement">名稱參數中取代點 (.) 的字串。</param>
      <exception cref="T:System.ArgumentNullException">name 參數或 idAttributeDotReplacement 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>產生連結至指定之動作方法的 HTML 錨點項目 (a 項目)，並讓使用者指定通訊協定、主機名稱和 URL 片段。</summary>
      <returns>HTML 項目，連結至指定的動作方法。</returns>
      <param name="requestContext">HTTP 要求的內容。</param>
      <param name="routeCollection">URL 路由的集合。</param>
      <param name="linkText">要顯示的連結文字標題。</param>
      <param name="routeName">用來傳回虛擬路徑之路由的名稱。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="protocol">通訊協定，例如 HTTP 或 HTTPS。如果這個參數是 null，則通訊協定預設為 HTTP。</param>
      <param name="hostName">主機的名稱。</param>
      <param name="fragment">片段識別項。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>產生連結至指定之動作方法的 HTML 錨定項目 (a 項目)。</summary>
      <returns>HTML 項目，連結至指定的動作方法。</returns>
      <param name="requestContext">HTTP 要求的內容。</param>
      <param name="routeCollection">URL 路由的集合。</param>
      <param name="linkText">要顯示的連結文字標題。</param>
      <param name="routeName">用來傳回虛擬路徑之路由的名稱。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>產生連結至指定之 URL 路由的 HTML 錨點項目 (a 項目)，並讓使用者指定通訊協定、主機名稱和 URL 片段。</summary>
      <returns>HTML 項目，連結至指定的 URL 路由。</returns>
      <param name="requestContext">HTTP 要求的內容。</param>
      <param name="routeCollection">URL 路由的集合。</param>
      <param name="linkText">要顯示的連結文字標題。</param>
      <param name="routeName">用來傳回虛擬路徑之路由的名稱。</param>
      <param name="protocol">通訊協定，例如 HTTP 或 HTTPS。如果這個參數是 null，則通訊協定預設為 HTTP。</param>
      <param name="hostName">主機的名稱。</param>
      <param name="fragment">片段識別項。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>產生連結至指定之 URL 路由的 HTML 錨定項目 (a 項目)。</summary>
      <returns>HTML 項目，連結至指定的 URL 路由。</returns>
      <param name="requestContext">HTTP 要求的內容。</param>
      <param name="routeCollection">URL 路由的集合。</param>
      <param name="linkText">要顯示的連結文字標題。</param>
      <param name="routeName">用來傳回虛擬路徑之路由的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetFormMethodString(System.Web.Mvc.FormMethod)">
      <summary>以字串形式傳回處理表單輸入的 HTTP 方法 (GET 或 POST) 轉換成字串。</summary>
      <returns>表單方法字串，為 "get" 或 "post"。</returns>
      <param name="method">處理表單的 HTTP 方法。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetInputTypeString(System.Web.Mvc.InputType)">
      <summary>以字串形式傳回 HTML 輸入控制項型別。</summary>
      <returns>輸入型別字串 ("checkbox"、"hidden"、"password"、"radio" 或 "text")。</returns>
      <param name="inputType">列舉的輸入型別。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String)">
      <summary>使用指定的 HTML name 屬性，取得不顯眼的 JavaScript 驗證屬性的集合。</summary>
      <returns>不顯眼的 JavaScript 驗證屬性的集合。</returns>
      <param name="name">HTML name 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String,System.Web.Mvc.ModelMetadata)">
      <summary>使用指定的 HTML name 屬性和模型中繼資料，取得不顯眼的 JavaScript 驗證屬性的集合。</summary>
      <returns>不顯眼的 JavaScript 驗證屬性的集合。</returns>
      <param name="name">HTML name 屬性。</param>
      <param name="metadata">模型中繼資料。</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.Html5DateRenderingMode">
      <summary>取得或設定 HTML5 日期呈現模式。</summary>
      <returns>HTML5 日期呈現模式。</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.String)">
      <summary>傳回隱藏的輸入項目，這個項目識別用戶端使用之指定 HTTP 資料傳輸方法的覆寫方法。</summary>
      <returns>使用用戶端所使用 HTTP 資料傳送方法的覆寫方法。</returns>
      <param name="httpMethod">用戶端使用的 HTTP 資料傳輸方法 (DELETE、HEAD 或 PUT)。</param>
      <exception cref="T:System.ArgumentNullException">httpVerb 參數不是 "PUT"、"DELETE" 或 "HEAD"。</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.Web.Mvc.HttpVerbs)">
      <summary>傳回隱藏的輸入項目，這個項目識別所指定動詞的覆寫方法，這個動詞表示用戶端使用的 HTTP 資料傳輸方法。</summary>
      <returns>覆寫方法，該方法使用表示用戶端所使用之 HTTP 資料傳送方法的動詞。</returns>
      <param name="httpVerb">表示用戶端所使用之 HTTP 資料傳輸方法的動詞。</param>
      <exception cref="T:System.ArgumentNullException">httpVerb 參數不是 "PUT"、"DELETE" 或 "HEAD"。</exception>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.IdAttributeDotReplacement">
      <summary>取得或設定字元，這個字元取代項目的 ID 屬性中的句點。</summary>
      <returns>字元，取代項目的 ID 屬性中的句點。</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.ObjectToDictionary(System.Object)">
      <summary>從物件建立字典，方法為將每一個公用執行個體屬性，當作具有其關聯值的索引鍵新增至字典。它也將公開衍生類型中的公用屬性。這通常與匿名類型的物件搭配使用。</summary>
      <returns>建立的屬性名稱及屬性值字典。</returns>
      <param name="value">要轉換的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.Object)">
      <summary>傳回不是 HTML 編碼的標記。</summary>
      <returns>未編碼的 HTML 標記。</returns>
      <param name="value">HTML 標記。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.String)">
      <summary>傳回不是 HTML 編碼的標記。</summary>
      <returns>未編碼的 HTML 標記。</returns>
      <param name="value">HTML 標記。</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.RouteCollection">
      <summary>取得或設定應用程式的路由集合。</summary>
      <returns>應用程式的路徑集合。</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.SetValidationMessageElement(System.String)">
      <summary>設定用來包裝 <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" /> 所產生之驗證訊息以及其他多載的項目名稱。</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.SetValidationSummaryMessageElement(System.String)">
      <summary>設定用來包裝 <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" /> 中之頂層訊息以及其他多載的項目名稱。</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>取得或設定值，這個值表示不顯眼的 JavaScript 是否啟用。</summary>
      <returns>如果啟用不顯眼的 JavaScript，則為 true，否則為 false。</returns>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputCssClassName">
      <summary>發生驗證錯誤時，用於設定輸入欄位樣式之 CSS 類別的名稱。</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputValidCssClassName">
      <summary>輸入有效時，用於設定輸入欄位樣式之 CSS 類別的名稱。</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageCssClassName">
      <summary>發生驗證錯誤時，用於設定錯誤訊息樣式之 CSS 類別的名稱。</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ValidationMessageElement">
      <summary>用來包裝 <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" /> 所產生之驗證訊息以及其他多載的項目名稱。</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>輸入有效時用於設定驗證訊息樣式之 CSS 類別的名稱。</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryCssClassName">
      <summary>用於設定驗證摘要錯誤訊息樣式之 CSS 類別的名稱。</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ValidationSummaryMessageElement">
      <summary>用來包裝 <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" /> 中之頂層訊息以及其他多載的項目名稱。</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryValidCssClassName">
      <summary>輸入有效時用於設定驗證摘要樣式之 CSS 類別的名稱。</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewBag">
      <summary>取得檢視包。</summary>
      <returns>檢視包。</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewContext">
      <summary>取得或設定有關檢視的內容資訊。</summary>
      <returns>檢視的內容。</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewData">
      <summary>取得目前的檢視資料字典。</summary>
      <returns>檢視資料字典。</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewDataContainer">
      <summary>取得或設定檢視資料容器。</summary>
      <returns>檢視資料容器。</returns>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper`1">
      <summary>表示支援在強型別檢視中呈現 HTML 控制項。</summary>
      <typeparam name="TModel">模型的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>使用指定的檢視內容和檢視資料容器，初始化 <see cref="T:System.Web.Mvc.HtmlHelper`1" /> 類別的新執行個體。</summary>
      <param name="viewContext">檢視內容。</param>
      <param name="viewDataContainer">檢視資料容器。</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>使用指定的檢視內容、檢視資料容器和路由集合，初始化 <see cref="T:System.Web.Mvc.HtmlHelper`1" /> 類別的新執行個體。</summary>
      <param name="viewContext">檢視內容。</param>
      <param name="viewDataContainer">檢視資料容器。</param>
      <param name="routeCollection">路徑集合。</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewBag">
      <summary>取得檢視包。</summary>
      <returns>檢視包。</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewData">
      <summary>取得強型別檢視資料字典。</summary>
      <returns>強型別檢視資料字典。</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpDeleteAttribute">
      <summary>表示用於限制動作方法只處理 HTTP DELETE 要求的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.HttpDeleteAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>判斷動作方法 Delete 要求對於指定的控制器內容是否有效。</summary>
      <returns>如果動作方法要求對於指定的控制器內容有效，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="methodInfo">動作方法相關資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProvider">
      <summary>表示搭配來自 HTTP 檔案集合中的值使用的值提供者。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>初始化 <see cref="T:System.Web.Mvc.HttpFileCollectionValueProvider" /> 類別的新執行個體。</summary>
      <param name="controllerContext">物件，會封裝目前 HTTP 要求之相關資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory">
      <summary>表示負責建立 HTTP 檔案集合值提供者物件之新執行個體的類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>針對指定的控制器內容傳回值提供者物件。</summary>
      <returns>HTTP 檔案集合值提供者。</returns>
      <param name="controllerContext">封裝 HTTP 要求相關資訊的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpGetAttribute">
      <summary>表示用於限制動作方法只處理 HTTP GET 要求的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.HttpGetAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>判斷動作方法 Get 要求對於指定的控制器內容是否有效。</summary>
      <returns>如果動作方法要求對於指定的控制器內容有效，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="methodInfo">動作方法相關資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.HttpHeadAttribute">
      <summary>指定 HTTP 要求必須是 HTTP HEAD 方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpHeadAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.HttpHeadAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpHeadAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>判斷動作方法要求對於指定的控制器內容是否有效。</summary>
      <returns>如果動作方法要求對於指定的控制器內容有效，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="methodInfo">動作方法相關資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.HttpNotFoundResult">
      <summary>定義用來表示找不到要求之資源的物件。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor(System.String)">
      <summary>使用狀態描述，初始化 <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> 類別的新執行個體。</summary>
      <param name="statusDescription">狀態描述。</param>
    </member>
    <member name="T:System.Web.Mvc.HttpOptionsAttribute">
      <summary>表示用於限制動作方法只處理 HTTP OPTIONS 要求的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpOptionsAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.HttpOptionsAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpOptionsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>判斷動作方法要求對於指定的控制器內容是否有效。</summary>
      <returns>如果動作方法要求對於指定的控制器內容有效，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="methodInfo">動作方法相關資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPatchAttribute">
      <summary>表示用於限制動作方法只處理 HTTP PATCH 要求的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPatchAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.HttpPatchAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPatchAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>判斷動作方法要求對於指定的控制器內容是否有效。</summary>
      <returns>如果動作方法要求對於指定的控制器內容有效，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="methodInfo">動作方法相關資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostAttribute">
      <summary>表示用於限制動作方法只處理 HTTP POST 要求的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.HttpPostAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>判斷動作方法 Post 要求對於指定的控制器內容是否有效。</summary>
      <returns>如果動作方法要求對於指定的控制器內容有效，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="methodInfo">動作方法相關資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostedFileBaseModelBinder">
      <summary>將模型繫結至已張貼的檔案。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.HttpPostedFileBaseModelBinder" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>繫結模型。</summary>
      <returns>繫結值。實作<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="bindingContext">繫結內容。</param>
      <exception cref="T:System.ArgumentNullException">參數的其中之一或兩者都是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpPutAttribute">
      <summary>表示用於限制動作方法只處理 HTTP PUT 要求的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.HttpPutAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>判斷動作方法 Put 要求對於指定的控制器內容是否有效。</summary>
      <returns>如果動作方法要求對於指定的控制器內容有效，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="methodInfo">動作方法相關資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.HttpRequestExtensions">
      <summary>擴充 <see cref="T:System.Web.HttpRequestBase" /> 類別，這個類別包含用戶端在 Web 要求期間傳送的 HTTP 值。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpRequestExtensions.GetHttpMethodOverride(System.Web.HttpRequestBase)">
      <summary>擷取用戶端使用的 HTTP 資料傳輸方法覆寫。</summary>
      <returns>用戶端使用的 HTTP 資料傳輸方法覆寫。</returns>
      <param name="request">包含用戶端在 Web 要求期間傳送之 HTTP 值的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 參數是 null。</exception>
      <exception cref="T:System.NotImplementedException">未實作 HTTP 資料傳輸方法覆寫。</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpStatusCodeResult">
      <summary>提供方法可傳回具有特定 HTTP 回應狀態碼和描述的動作結果。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32)">
      <summary>使用狀態碼，初始化 <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> 類別的新執行個體。</summary>
      <param name="statusCode">狀態碼。</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32,System.String)">
      <summary>使用狀態碼和狀態描述，初始化 <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> 類別的新執行個體。</summary>
      <param name="statusCode">狀態碼。</param>
      <param name="statusDescription">狀態描述。</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Net.HttpStatusCode)">
      <summary>使用狀態碼，初始化 <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> 類別的新執行個體。</summary>
      <param name="statusCode">狀態碼。</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Net.HttpStatusCode,System.String)">
      <summary>使用狀態碼和狀態描述，初始化 <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> 類別的新執行個體。</summary>
      <param name="statusCode">狀態碼。</param>
      <param name="statusDescription">狀態描述。</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>以繼承自 <see cref="T:System.Web.Mvc.ActionResult" /> 類別的自訂型別，來處理動作方法的結果。</summary>
      <param name="context">執行結果所在的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusCode">
      <summary>取得 HTTP 狀態碼。</summary>
      <returns>HTTP 狀態碼。</returns>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusDescription">
      <summary>取得 HTTP 狀態描述。</summary>
      <returns>HTTP 狀態描述。</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpUnauthorizedResult">
      <summary>表示未經授權之 HTTP 要求的結果。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor(System.String)">
      <summary>使用狀態描述，初始化 <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" /> 類別的新執行個體。</summary>
      <param name="statusDescription">狀態描述。</param>
    </member>
    <member name="T:System.Web.Mvc.HttpVerbs">
      <summary>列舉 HTTP 動詞命令。</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Delete">
      <summary>要求刪除指定的 URI。</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Get">
      <summary>擷取要求之 URI 所識別的資訊或實體。</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Head">
      <summary>擷取要求 URI 所識別之資訊或實體的訊息標頭。</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Options">
      <summary>表示要求通訊選項的相關資訊，該選項由要求 URI 所識別的要求/回應鏈結提供使用。</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Patch">
      <summary>要求將要求實體中所描述的一組變更套用到要求 URI 所識別的資源。</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Post">
      <summary>公佈新實體至 URI 做為新增項目。</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Put">
      <summary>取代 URI 所識別的實體。</summary>
    </member>
    <member name="T:System.Web.Mvc.IActionFilter">
      <summary>定義動作篩選中使用的方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>在動作方法執行之後呼叫。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>在動作方法執行之前呼叫。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvoker">
      <summary>定義動作啟動程式的合約，用於叫用動作以回應 HTTP 要求。</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>使用指定的控制器內容，叫用指定的動作。</summary>
      <returns>如果找到動作，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionName">動作的名稱。</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvokerFactory">
      <summary>用來建立目前要求的 <see cref="T:System.Web.Mvc.IActionInvoker" /> 執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvokerFactory.CreateInstance">
      <summary>建立目前要求之動作啟動程式的執行個體。</summary>
      <returns>建立的 <see cref="T:System.Web.Mvc.IActionInvoker" />。</returns>
    </member>
    <member name="T:System.Web.Mvc.IAuthorizationFilter">
      <summary>定義授權篩選所需的方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.IAuthorizationFilter.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>在需要授權時呼叫。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="T:System.Web.Mvc.IClientValidatable">
      <summary>提供方法讓 ASP.NET MVC 驗證架構在執行階段探索驗證程式是否支援用戶端驗證。</summary>
    </member>
    <member name="M:System.Web.Mvc.IClientValidatable.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>在類別中實作時，傳回該類別的用戶端驗證規則。</summary>
      <returns>此驗證程式的用戶端驗證規則。</returns>
      <param name="metadata">模型中繼資料。</param>
      <param name="context">控制器內容。</param>
    </member>
    <member name="T:System.Web.Mvc.IController">
      <summary>定義控制器所需的方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.IController.Execute(System.Web.Routing.RequestContext)">
      <summary>執行指定的要求內容。</summary>
      <param name="requestContext">要求內容。</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerActivator">
      <summary>對使用相依性插入具現化控制器的方式提供更細微的控制。</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerActivator.Create(System.Web.Routing.RequestContext,System.Type)">
      <summary>在類別中實作時，建立控制器。</summary>
      <returns>建立的控制器。</returns>
      <param name="requestContext">要求內容。</param>
      <param name="controllerType">控制器類型。</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerFactory">
      <summary>定義控制器 Factory 所需的方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>使用指定的要求內容，建立指定的控制器。</summary>
      <returns>控制器。</returns>
      <param name="requestContext">要求內容。</param>
      <param name="controllerName">控制器的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>取得控制器的工作階段行為。</summary>
      <returns>控制器的工作階段行為。</returns>
      <param name="requestContext">要求內容。</param>
      <param name="controllerName">您要取得之工作階段行為的控制器名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>釋放指定的控制器。</summary>
      <param name="controller">控制器。</param>
    </member>
    <member name="T:System.Web.Mvc.IDependencyResolver">
      <summary>定義能簡化服務位置和相依性解析的方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)">
      <summary>解析支援任意物件建立的單一註冊服務。</summary>
      <returns>要求的服務或物件。</returns>
      <param name="serviceType">要求之服務或物件的型別。</param>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)">
      <summary>解析多次註冊的服務。</summary>
      <returns>要求的服務。</returns>
      <param name="serviceType">要求之服務的型別。</param>
    </member>
    <member name="T:System.Web.Mvc.IEnumerableValueProvider">
      <summary>表示能夠列舉的特殊 <see cref="T:System.Web.Mvc.IValueProvider" />。</summary>
    </member>
    <member name="M:System.Web.Mvc.IEnumerableValueProvider.GetKeysFromPrefix(System.String)">
      <summary>從前置字元取得索引鍵。</summary>
      <returns>索引鍵。</returns>
      <param name="prefix">前置字元。</param>
    </member>
    <member name="T:System.Web.Mvc.IExceptionFilter">
      <summary>定義例外狀況篩選條件所需的方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>在發生例外狀況時呼叫。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="T:System.Web.Mvc.IFilterProvider">
      <summary>提供用來尋找篩選的介面。</summary>
    </member>
    <member name="M:System.Web.Mvc.IFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>傳回包含服務定位程式中所有 <see cref="T:System.Web.Mvc.IFilterProvider" /> 執行個體的列舉值。</summary>
      <returns>包含服務定位程式中所有 <see cref="T:System.Web.Mvc.IFilterProvider" /> 執行個體的列舉值。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">動作描述元。</param>
    </member>
    <member name="T:System.Web.Mvc.IMetadataAware">
      <summary>提供介面，這個介面可用來對 <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" /> 類別公開屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.IMetadataAware.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>在類別中實作時，提供中繼資料給模型中繼資料建立程序。</summary>
      <param name="metadata">模型中繼資料。</param>
    </member>
    <member name="T:System.Web.Mvc.IMethodInfoActionDescriptor">
      <summary>提供 <see cref="P:System.Web.Mvc.IMethodInfoActionDescriptor.MethodInfo" /> 之 <see cref="T:System.Web.Mvc.ActionDescriptor" /> 類型的選用介面。</summary>
    </member>
    <member name="P:System.Web.Mvc.IMethodInfoActionDescriptor.MethodInfo">
      <summary>取得 MethodInfo</summary>
    </member>
    <member name="T:System.Web.Mvc.IModelBinder">
      <summary>定義模型繫結器所需的方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>使用指定的控制器內容和繫結內容，將模型繫結至值。</summary>
      <returns>繫結值。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="bindingContext">繫結內容。</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinderProvider">
      <summary>定義方法，這些方法可啟用會實作 <see cref="T:System.Web.Mvc.IModelBinder" /> 介面之類別的模型繫結動態實作。</summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinderProvider.GetBinder(System.Type)">
      <summary>傳回指定型別的模型繫結器。</summary>
      <returns>指定型別的模型繫結器。</returns>
      <param name="modelType">模型的型別。</param>
    </member>
    <member name="T:System.Web.Mvc.IMvcFilter">
      <summary>定義成員，這些成員可指定篩選條件順序，以及是否允許使用多個篩選條件。</summary>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.AllowMultiple">
      <summary>在類別中實作時取得或設定值，這個值表示是否允許使用多個篩選。</summary>
      <returns>如果允許使用多個篩選條件，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.Order">
      <summary>在類別中實作時，取得篩選順序。</summary>
      <returns>篩選順序。</returns>
    </member>
    <member name="T:System.Web.Mvc.InputType">
      <summary>列舉輸入控制項的型別。</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.CheckBox">
      <summary>核取方塊。</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Hidden">
      <summary>隱藏欄位。</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Password">
      <summary>密碼方塊。</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Radio">
      <summary>選項按鈕。</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Text">
      <summary>文字方塊。</summary>
    </member>
    <member name="T:System.Web.Mvc.IResultFilter">
      <summary>定義結果篩選所需的方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>在動作結果執行之後呼叫。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>在動作結果執行之前呼叫。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="T:System.Web.Mvc.IRouteWithArea">
      <summary>將 ASP.NET MVC 應用程式中的路由與區域產生關聯。</summary>
    </member>
    <member name="P:System.Web.Mvc.IRouteWithArea.Area">
      <summary>取得要與路由產生關聯之區域的名稱。</summary>
      <returns>要與路由產生關聯之區域的名稱。</returns>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProvider">
      <summary>定義暫存資料提供者的合約，這些資料提供者會儲存在下一個要求中檢視的資料。</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>載入暫存資料。</summary>
      <returns>暫存資料。</returns>
      <param name="controllerContext">控制器內容。</param>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>儲存暫存資料。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="values">值。</param>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProviderFactory">
      <summary>用來建立控制器的 <see cref="T:System.Web.Mvc.ITempDataProvider" /> 執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProviderFactory.CreateInstance">
      <summary>建立控制器之 <see cref="T:System.Web.Mvc.ITempDataProvider" /> 的執行個體。</summary>
      <returns>建立的 <see cref="T:System.Web.Mvc.ITempDataProvider" />。</returns>
    </member>
    <member name="T:System.Web.Mvc.IUnvalidatedValueProvider">
      <summary>表示可略過要求驗證的 <see cref="T:System.Web.Mvc.IValueProvider" /> 介面。</summary>
    </member>
    <member name="M:System.Web.Mvc.IUnvalidatedValueProvider.GetValue(System.String,System.Boolean)">
      <summary>擷取與指定之索引鍵相關聯的物件值。</summary>
      <returns>指定之索引鍵的物件值。</returns>
      <param name="key">索引鍵。</param>
      <param name="skipValidation">如果應該略過驗證，則為 true，否則為 false。</param>
    </member>
    <member name="T:System.Web.Mvc.IValueProvider">
      <summary>定義 ASP.NET MVC 中值提供者所需的方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.ContainsPrefix(System.String)">
      <summary>判斷集合是否包含指定的前置詞。</summary>
      <returns>如果此集合包含指定的前置詞，則為 true，否則為 false。</returns>
      <param name="prefix">要搜尋的前置字元。</param>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.GetValue(System.String)">
      <summary>使用指定的索引鍵擷取值物件。</summary>
      <returns>指定之索引鍵的值物件，如果找不到索引鍵則為 null。</returns>
      <param name="key">要擷取之值物件的索引鍵。</param>
    </member>
    <member name="T:System.Web.Mvc.IView">
      <summary>定義檢視所需的方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.IView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>使用指定的寫入器物件來呈現指定的檢視內容。</summary>
      <param name="viewContext">檢視內容。</param>
      <param name="writer">寫入器物件。</param>
    </member>
    <member name="T:System.Web.Mvc.IViewDataContainer">
      <summary>定義檢視資料字典所需的方法。</summary>
    </member>
    <member name="P:System.Web.Mvc.IViewDataContainer.ViewData">
      <summary>取得或設定檢視資料字典。</summary>
      <returns>檢視資料字典。</returns>
    </member>
    <member name="T:System.Web.Mvc.IViewEngine">
      <summary>定義檢視引擎所需的方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>使用指定的控制器內容，尋找指定的部分檢視。</summary>
      <returns>部分檢視。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="partialViewName">部分檢視的名稱。</param>
      <param name="useCache">true 表示指定讓檢視引擎傳回快取檢視 (如果快取檢視存在的話)，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>使用指定的控制器內容，尋找指定的檢視。</summary>
      <returns>頁面檢視。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="viewName">檢視的名稱。</param>
      <param name="masterName">主版頁面的名稱。</param>
      <param name="useCache">true 表示指定讓檢視引擎傳回快取檢視 (如果快取檢視存在的話)，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>使用指定的控制器內容，釋放指定的檢視。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="view">檢視。</param>
    </member>
    <member name="T:System.Web.Mvc.IViewLocationCache">
      <summary>定義在記憶體中快取檢視位置時的必要方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>使用指定的 HTTP 內容和快取索引鍵，取得檢視位置。</summary>
      <returns>檢視位置。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="key">快取索引鍵。</param>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>使用指定的 HTTP 內容和快取索引鍵，將指定的檢視位置插入到快取中。</summary>
      <param name="httpContext">HTTP 內容。</param>
      <param name="key">快取索引鍵。</param>
      <param name="virtualPath">虛擬路徑。</param>
    </member>
    <member name="T:System.Web.Mvc.IViewPageActivator">
      <summary>對使用相依性插入建立檢視頁面的方式提供更細微的控制。</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewPageActivator.Create(System.Web.Mvc.ControllerContext,System.Type)">
      <summary>對使用相依性插入建立檢視頁面的方式提供更細微的控制。</summary>
      <returns>建立的檢視頁面。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="type">控制器的型別。</param>
    </member>
    <member name="T:System.Web.Mvc.JavaScriptResult">
      <summary>將 JavaScript 內容傳送至回應。</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.JavaScriptResult" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>以繼承自 <see cref="T:System.Web.Mvc.ActionResult" /> 類別的自訂型別，來處理動作方法的結果。</summary>
      <param name="context">執行結果時所在範圍的內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.JavaScriptResult.Script">
      <summary>取得或設定指令碼。</summary>
      <returns>指令碼。</returns>
    </member>
    <member name="T:System.Web.Mvc.JQueryFormValueProvider">
      <summary>JQuery 表單值提供者是用來處理要求表單中的 JQuery 格式資料。</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>建構 JQuery 表單 ValueProvider 的新執行個體</summary>
      <param name="controllerContext">ValueProvider 操作所在的內容。</param>
    </member>
    <member name="T:System.Web.Mvc.JQueryFormValueProviderFactory">
      <summary>提供必要的 ValueProvider 以處理 JQuery 表單資料。</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProviderFactory.#ctor">
      <summary>建構新的 Factory 執行個體，以從 ValueProviders 提供 JQuery。</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>傳回適合的 ValueProvider。</summary>
      <param name="controllerContext">ValueProvider 應在其上操作的內容。</param>
    </member>
    <member name="T:System.Web.Mvc.JsonRequestBehavior">
      <summary>指定是否允許來自用戶端的 HTTP GET 要求。</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.AllowGet">
      <summary>允許來自用戶端的 HTTP GET 要求。</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.DenyGet">
      <summary>不允許來自用戶端的 HTTP GET 要求。</summary>
    </member>
    <member name="T:System.Web.Mvc.JsonResult">
      <summary>表示用來將 JSON 格式之內容傳送至回應的類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.JsonResult" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentEncoding">
      <summary>取得或設定內容編碼方式。</summary>
      <returns>內容編碼方式。</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentType">
      <summary>取得或設定內容的類型。</summary>
      <returns>內容的類型。</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.Data">
      <summary>取得或設定資料。</summary>
      <returns>資料。</returns>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>以繼承自 <see cref="T:System.Web.Mvc.ActionResult" /> 類別的自訂型別，來處理動作方法的結果。</summary>
      <param name="context">執行結果時所在範圍的內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.JsonRequestBehavior">
      <summary>取得或設定值，表示是否允許來自用戶端的 HTTP GET 要求。</summary>
      <returns>表示是否允許來自用戶端 HTTP GET 要求的值。</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.MaxJsonLength">
      <summary>取得或設定資料的最大長度。</summary>
      <returns>資料的最大長度。</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.RecursionLimit">
      <summary>取得或設定遞迴限制。</summary>
      <returns>遞迴限制。</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonValueProviderFactory">
      <summary>啟用動作方法以傳送和接收 JSON 格式的文字，並模型繫結 JSON 文字至動作方法的參數。</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.JsonValueProviderFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>傳回指定之控制器內容的 JSON 值提供者物件。</summary>
      <returns>指定之控制器內容的 JSON 值提供者物件。</returns>
      <param name="controllerContext">控制器內容。</param>
    </member>
    <member name="T:System.Web.Mvc.LinqBinaryModelBinder">
      <summary>將瀏覽器要求對應至 LINQ <see cref="T:System.Data.Linq.Binary" /> 物件。</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.LinqBinaryModelBinder" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>使用指定的控制器內容和繫結內容來繫結模型。</summary>
      <returns>繫結的資料物件。如果無法繫結模型，這個方法會傳回 null。實作<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" />.</returns>
      <param name="controllerContext">控制器在其中運作的內容。此內容資訊包含控制器、HTTP 內容、要求內容和路由資料。</param>
      <param name="bindingContext">模型在其中繫結的內容。此內容包含如模型物件、模型名稱、模型型別、屬性篩選和值提供者這類資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.MaxLengthAttributeAdapter">
      <summary>提供 MaxLengthAttribute 屬性的介面卡。</summary>
    </member>
    <member name="M:System.Web.Mvc.MaxLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.MaxLengthAttribute)">
      <summary>初始化 MaxLengthAttribute 類別的新執行個體。</summary>
      <param name="metadata">模型中繼資料。</param>
      <param name="context">控制器內容。</param>
      <param name="attribute">MaxLength 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.MaxLengthAttributeAdapter.GetClientValidationRules">
      <summary>取得用於進行長度上限檢查的用戶端驗證規則清單。</summary>
      <returns>用於進行檢查的用戶端驗證規則清單。</returns>
    </member>
    <member name="T:System.Web.Mvc.MinLengthAttributeAdapter">
      <summary>提供 MinLengthAttribute 屬性的介面卡。</summary>
    </member>
    <member name="M:System.Web.Mvc.MinLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.MinLengthAttribute)">
      <summary>初始化 MinLenghtAttribute 類別的新執行個體。</summary>
      <param name="metadata">模型中繼資料。</param>
      <param name="context">控制器內容。</param>
      <param name="attribute">最小長度屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.MinLengthAttributeAdapter.GetClientValidationRules">
      <summary>取得用於進行長度下限檢查的用戶端驗證規則清單。</summary>
      <returns>用於進行檢查的用戶端驗證規則清單。</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderAttribute">
      <summary>表示用來在模型型別與模型產生器型別之間建立關聯的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.Mvc.ModelBinderAttribute" /> 類別的新執行個體。</summary>
      <param name="binderType">繫結器的型別。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binderType" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderAttribute.BinderType">
      <summary>取得或設定繫結器的型別。</summary>
      <returns>繫結器的型別。</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.GetBinder">
      <summary>擷取模型繫結器的執行個體。</summary>
      <returns>實作 <see cref="T:System.Web.Mvc.IModelBinder" /> 介面的物件參考。</returns>
      <exception cref="T:System.InvalidOperationException">建立模型繫結器的執行個體時發生錯誤。</exception>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderDictionary">
      <summary>表示包含應用程式之所有模型繫結器 (依繫結器型別列出) 的類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ModelBinderDictionary" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>將指定的項目加入至模型繫結器字典。</summary>
      <param name="item">要加入至 <see cref="T:System.Collections.Generic.ICollection`1" /> 執行個體的物件。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 物件為唯讀。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Type,System.Web.Mvc.IModelBinder)">
      <summary>使用指定的索引鍵，將指定的項目加入至模型繫結器字典。</summary>
      <param name="key">要加入的元素的索引鍵。</param>
      <param name="value">要加入的元素值。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件為唯讀。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">具有相同索引鍵的項目已經存在於 <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件中。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Clear">
      <summary>從模型繫結器字典移除所有項目。</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 物件為唯讀。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>判斷模型繫結器字典是否包含指定的值。</summary>
      <returns>如果在模型繫結器字典中找到 <paramref name="item" />，則為 true，否則為 false。</returns>
      <param name="item">要在 <see cref="T:System.Collections.Generic.ICollection`1" /> 物件中尋找的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.ContainsKey(System.Type)">
      <summary>判斷模型繫結器字典是否包含具有指定之索引鍵的項目。</summary>
      <returns>如果模型繫結器字典中包含具有指定之索引鍵的項目，則為 true，否則為 false。</returns>
      <param name="key">要在 <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件中尋找的索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder}[],System.Int32)">
      <summary>從指定的索引開始，將模型繫結器字典的項目複製到陣列。</summary>
      <param name="array">一維陣列，表示從 <see cref="T:System.Collections.Generic.ICollection`1" /> 複製過來的項目之目的端。陣列必須有以零起始的索引。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 中以零起始的索引，位於複製開始的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> 小於 0。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 為多維。-或-<paramref name="arrayIndex" /> 等於或大於 <paramref name="array" /> 的長度。-或-來源 <see cref="T:System.Collections.Generic.ICollection`1" /> 物件中的項目數大於從 <paramref name="arrayIndex" /> 到目的陣列末端的可用空間。 -或-型別 <paramref name="T" /> 不能自動轉換為目的陣列的型別。</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Count">
      <summary>取得模型繫結器字典中的項目數目。</summary>
      <returns>模型繫結器字典中的項目數目。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.DefaultBinder">
      <summary>取得或設定預設模型繫結器。</summary>
      <returns>預設模型繫結器。</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type)">
      <summary>擷取指定型別的模型繫結器。</summary>
      <returns>模型繫結器。</returns>
      <param name="modelType">要擷取的模型型別。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="modelType" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type,System.Boolean)">
      <summary>擷取指定之型別的模型繫結器或擷取預設的模型繫結器。</summary>
      <returns>模型繫結器。</returns>
      <param name="modelType">要擷取的模型型別。</param>
      <param name="fallbackToDefault">true 表示要擷取預設的模型繫結器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="modelType" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetEnumerator">
      <summary>傳回可用來逐一查看集合的列舉程式。</summary>
      <returns>可用來逐一查看集合的列舉程式。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.IsReadOnly">
      <summary>取得值，這個值表示模型繫結器字典是否為唯讀。</summary>
      <returns>如果模型繫結器字典是唯讀的，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Item(System.Type)">
      <summary>取得或設定實作 <see cref="T:System.Web.Mvc.IModelBinder" /> 介面之物件中指定的索引鍵。</summary>
      <returns>指定之項目的索引鍵。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Keys">
      <summary>取得包含模型繫結器字典中的索引鍵之集合。</summary>
      <returns>包含模型繫結器字典中的索引鍵之集合。</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>從模型繫結器字典中移除第一次出現的指定項目。</summary>
      <returns>如果已順利從模型繫結器字典中移除 <paramref name="item" />，則為 true，否則為 false。如果在模型繫結器字典中找不到 <paramref name="item" />，這個方法也會傳回 false。</returns>
      <param name="item">要從 <see cref="T:System.Collections.Generic.ICollection`1" /> 物件中移除的物件。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 物件為唯讀。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Type)">
      <summary>從模型繫結器字典移除具有指定之索引鍵的項目。</summary>
      <returns>如果成功移除項目，則為 true，否則為 false。如果在模型繫結器字典中找不到 <paramref name="key" />，這個方法也會傳回 false。</returns>
      <param name="key">要移除之項目的索引鍵。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件為唯讀。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回可用來逐一查看集合的列舉程式。</summary>
      <returns>可用來逐一查看集合的列舉程式。</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.TryGetValue(System.Type,System.Web.Mvc.IModelBinder@)">
      <summary>取得與指定之索引鍵相關聯的值。</summary>
      <returns>如果實作 <see cref="T:System.Collections.Generic.IDictionary`2" /> 之物件包含具有指定之索引鍵的項目，則為 true，否則為 false。</returns>
      <param name="key">要取得之值的索引鍵。</param>
      <param name="value">這個方法傳回時，如果找到索引鍵，則為與指定索引鍵關聯的值，否則為 <paramref name="value" /> 參數的型別預設值。傳遞此參數時不需設定初始值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Values">
      <summary>取得包含模型繫結器字典中的值之集合。</summary>
      <returns>包含模型繫結器字典中的值之集合。</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviderCollection">
      <summary>表示模型繫結器提供者的集合。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IModelBinderProvider})">
      <summary>使用模型繫結器提供者清單，初始化 <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" /> 類別的新執行個體。</summary>
      <param name="list">模型繫結器提供者的清單。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.ClearItems">
      <summary>從集合移除所有元素。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.GetBinder(System.Type)">
      <summary>傳回指定之型別的模型繫結器。</summary>
      <returns>指定之型別的模型繫結器。</returns>
      <param name="modelType">模型繫結器的型別。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>將模型繫結器提供者插入至 ModelBinderProviderCollection 中的指定索引處。</summary>
      <param name="index">索引。</param>
      <param name="item">模型繫結器提供者。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.RemoveItem(System.Int32)">
      <summary>移除集合的指定索引處的項目。</summary>
      <param name="index">要移除的項目之以零起始的索引。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.SetItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>取代位於指定之索引處的模型繫結器提供者項目。</summary>
      <param name="index">索引。</param>
      <param name="item">模型繫結器提供者。</param>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviders">
      <summary>提供模型繫結器提供者的容器。</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderProviders.BinderProviders">
      <summary>為不使用相依性插入的應用程式提供模型繫結器提供者的註冊點。</summary>
      <returns>模型繫結器提供者集合。</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinders">
      <summary>提供應用程式之模型繫結器的全域存取。</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinders.Binders">
      <summary>取得應用程式的模型繫結器。</summary>
      <returns>應用程式的模型繫結器。</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBindingContext">
      <summary>提供模型繫結器運作所在的內容。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ModelBindingContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor(System.Web.Mvc.ModelBindingContext)">
      <summary>使用繫結內容，初始化 <see cref="T:System.Web.Mvc.ModelBindingContext" /> 類別的新執行個體。</summary>
      <param name="bindingContext">繫結內容。</param>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>取得或設定值，這個值表示繫結器是否應該使用空白前置字元。</summary>
      <returns>如果繫結器應該使用空白前置字元，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.Model">
      <summary>取得或設定模型。</summary>
      <returns>模型。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelMetadata">
      <summary>取得或設定模型中繼資料。</summary>
      <returns>模型中繼資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelName">
      <summary>取得或設定模型的名稱。</summary>
      <returns>模型的名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelState">
      <summary>取得或設定模型的狀態。</summary>
      <returns>模型的狀態。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelType">
      <summary>取得或設定模型的型別。</summary>
      <returns>模型的型別。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyFilter">
      <summary>取得或設定屬性篩選常式。</summary>
      <returns>屬性篩選常式。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyMetadata">
      <summary>取得屬性中繼資料。</summary>
      <returns>屬性中繼資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ValueProvider">
      <summary>取得或設定值提供者。</summary>
      <returns>值提供者。</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelError">
      <summary>表示在模型繫結期間所發生的錯誤。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception)">
      <summary>使用指定的例外狀況，初始化 <see cref="T:System.Web.Mvc.ModelError" /> 類別的新執行個體。</summary>
      <param name="exception">例外狀況。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception,System.String)">
      <summary>使用指定的例外狀況和錯誤訊息，初始化 <see cref="T:System.Web.Mvc.ModelError" /> 類別的新執行個體。</summary>
      <param name="exception">例外狀況。</param>
      <param name="errorMessage">錯誤訊息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.Web.Mvc.ModelError" /> 類別的新執行個體。</summary>
      <param name="errorMessage">錯誤訊息。</param>
    </member>
    <member name="P:System.Web.Mvc.ModelError.ErrorMessage">
      <summary>取得或設定錯誤訊息。</summary>
      <returns>錯誤訊息。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelError.Exception">
      <summary>取得或設定例外狀況物件。</summary>
      <returns>例外狀況物件。</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelErrorCollection">
      <summary>
        <see cref="T:System.Web.Mvc.ModelError" /> 執行個體的集合。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ModelErrorCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.Exception)">
      <summary>將指定的 <see cref="T:System.Exception" /> 物件加入至模型錯誤集合。</summary>
      <param name="exception">例外狀況。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.String)">
      <summary>將指定的錯誤訊息加入至模型錯誤集合。</summary>
      <param name="errorMessage">錯誤訊息。</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadata">
      <summary>針對資料模型的通用中繼資料、<see cref="T:System.Web.Mvc.ModelMetadataProvider" /> 類別和 <see cref="T:System.Web.Mvc.ModelValidator" /> 類別，提供容器。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.#ctor(System.Web.Mvc.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>初始化 <see cref="T:System.Web.Mvc.ModelMetadata" /> 類別的新執行個體。</summary>
      <param name="provider">提供者。</param>
      <param name="containerType">容器的型別。</param>
      <param name="modelAccessor">模型存取子。</param>
      <param name="modelType">模型的型別。</param>
      <param name="propertyName">模型的名稱。</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.AdditionalValues">
      <summary>取得字典，其中包含模型的其他中繼資料。</summary>
      <returns>字典，包含模型的其他中繼資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Container">
      <summary>參照模型的容器物件。如果模型表示屬性，則將為非 null。</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ContainerType">
      <summary>取得或設定模型的容器類型。</summary>
      <returns>模型的容器類型。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ConvertEmptyStringToNull">
      <summary>取得或設定值，這個值表示是否應該將表單中回傳的空字串轉換成 null。</summary>
      <returns>如果表單中回傳的空字串應該轉換成 null，則為 true，否則為 false。預設值為 true。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DataTypeName">
      <summary>取得或設定資料型別的中繼資訊。</summary>
      <returns>資料型別的中繼資訊。</returns>
    </member>
    <member name="F:System.Web.Mvc.ModelMetadata.DefaultOrder">
      <summary>預設順序值，也就是 10000。</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Description">
      <summary>取得或設定模型的描述。</summary>
      <returns>模型的描述。預設值為 null。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayFormatString">
      <summary>取得或設定模型的顯示格式字串。</summary>
      <returns>模型的顯示格式字串。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayName">
      <summary>取得或設定模型的顯示名稱。</summary>
      <returns>模型的顯示名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.EditFormatString">
      <summary>取得或設定模型的編輯格式字串。</summary>
      <returns>模型的編輯格式字串。</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromLambdaExpression``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Web.Mvc.ViewDataDictionary{``0})">
      <summary>從 <see cref="T:System.Linq.Expressions.Expression" /> 參數中傳回模型的中繼資料。</summary>
      <returns>中繼資料。</returns>
      <param name="expression">用於識別模型的運算式。</param>
      <param name="viewData">檢視資料字典。</param>
      <typeparam name="TParameter">參數的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromStringExpression(System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>從運算式參數取得模型的中繼資料。</summary>
      <returns>模型的中繼資料。</returns>
      <param name="expression">用於識別模型的運算式。</param>
      <param name="viewData">檢視資料字典。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetDisplayName">
      <summary>取得模型的顯示名稱。</summary>
      <returns>模型的顯示名稱。</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetSimpleDisplayText">
      <summary>傳回模型的簡單描述。</summary>
      <returns>模型的簡單描述。</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetValidators(System.Web.Mvc.ControllerContext)">
      <summary>取得模型的驗證程式清單。</summary>
      <returns>模型的驗證程式清單。</returns>
      <param name="context">控制器內容。</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HideSurroundingHtml">
      <summary>取得或設定值，這個值表示模型物件是否應該使用相關 HTML 項目來呈現。</summary>
      <returns>如果包含模型物件的相關聯 HTML 項目應該隨附於物件，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HtmlEncode"></member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsComplexType">
      <summary>取得或設定值，這個值表示模型是否為複雜類型。</summary>
      <returns>值，表示 MVC Framework 是否將模型視為複雜型別。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsNullableValueType">
      <summary>取得值，這個值表示類型是否可為 Null。</summary>
      <returns>如果類型可為 Null，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsReadOnly">
      <summary>取得或設定值，這個值表示模型是否為唯讀。</summary>
      <returns>如果模型是唯讀的，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsRequired">
      <summary>取得或設定值，這個值表示是否需要模型。</summary>
      <returns>如果需要模型，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Model">
      <summary>取得模型的值。</summary>
      <returns>模型的值。如需 <see cref="T:System.Web.Mvc.ModelMetadata" /> 的詳細資訊，請參閱 Brad Wilson 的部落格項目 ASP.NET MVC 2 Templates, Part 2: ModelMetadata。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ModelType">
      <summary>取得模型的型別。</summary>
      <returns>模型的型別。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.NullDisplayText">
      <summary>取得或設定要針對 Null 值顯示的字串。</summary>
      <returns>要針對 Null 值顯示的字串。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Order">
      <summary>取得或設定值，這個值代表目前中繼資料的順序。</summary>
      <returns>目前中繼資料的順序值。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Properties">
      <summary>取得模型中繼資料物件的集合，這類物件描述模型的屬性。</summary>
      <returns>描述模型屬性之模型中繼資料物件的集合。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.PropertyName">
      <summary>取得屬性名稱。</summary>
      <returns>屬性名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Provider">
      <summary>取得或設定提供者。</summary>
      <returns>提供者。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.RequestValidationEnabled">
      <summary>取得或設定值，這個值表示是否已啟用要求驗證。</summary>
      <returns>如果啟用要求驗證，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShortDisplayName">
      <summary>取得或設定簡短顯示名稱。</summary>
      <returns>簡短顯示名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForDisplay">
      <summary>取得或設定值，這個值表示是否應該以唯讀檢視來顯示屬性，例如清單和詳細資料檢視。</summary>
      <returns>如果應該以唯讀檢視來顯示模型，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForEdit">
      <summary>取得或設定值，表示是否應該以可編輯檢視來顯示模型。</summary>
      <returns>如果應該以可編輯檢視來顯示模型，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.SimpleDisplayText">
      <summary>取得或設定模型的簡單顯示字串。</summary>
      <returns>模型的簡單顯示字串。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.TemplateHint">
      <summary>取得或設定提示，這個提示建議要用於此模型的範本。</summary>
      <returns>提示，建議要用於此模型的範本。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Watermark">
      <summary>取得或設定可以做為浮水印的值。</summary>
      <returns>浮水印。</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProvider">
      <summary>提供自訂中繼資料提供者的抽象基底類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.#ctor">
      <summary>在衍生類別中覆寫時，初始化衍生自 <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> 類別之物件的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>取得模型中每一個屬性的 <see cref="T:System.Web.Mvc.ModelMetadata" /> 物件。</summary>
      <returns>模型中每一個屬性的 <see cref="T:System.Web.Mvc.ModelMetadata" /> 物件。</returns>
      <param name="container">容器。</param>
      <param name="containerType">容器的型別。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>取得指定之屬性的中繼資料。</summary>
      <returns>屬性的 <see cref="T:System.Web.Mvc.ModelMetadata" /> 物件。</returns>
      <param name="modelAccessor">模型存取子。</param>
      <param name="containerType">容器的型別。</param>
      <param name="propertyName">要取得中繼資料模型的屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>取得指定之模型存取子的中繼資料和模型型別。</summary>
      <returns>指定之模型存取子和模型型別的 <see cref="T:System.Web.Mvc.ModelMetadata" /> 物件。</returns>
      <param name="modelAccessor">模型存取子。</param>
      <param name="modelType">模型的型別。</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProviders">
      <summary>提供目前 <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> 執行個體的容器。</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadataProviders.Current">
      <summary>取得或設定目前的 <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> 物件。</summary>
      <returns>目前的 <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> 物件。</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelState">
      <summary>封裝繫結至動作方法引數之屬性或繫結至引數本身的模型繫結狀態。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelState.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ModelState" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Errors">
      <summary>傳回 <see cref="T:System.Web.Mvc.ModelErrorCollection" /> 物件，其中包含模型繫結期間發生的任何錯誤。</summary>
      <returns>錯誤。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Value">
      <summary>傳回 <see cref="T:System.Web.Mvc.ValueProviderResult" /> 物件，其中封裝模型繫結期間所繫結的值。</summary>
      <returns>數值。</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelStateDictionary">
      <summary>表示嘗試將已張貼的表單繫結至動作方法的狀態，包括驗證資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor(System.Web.Mvc.ModelStateDictionary)">
      <summary>使用從指定的模型狀態字典複製過來的值，初始化 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 類別的新執行個體。</summary>
      <param name="dictionary">模型狀態字典。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary " /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>將指定的項目加入至模型狀態字典。</summary>
      <param name="item">要加入至模型狀態字典的物件。</param>
      <exception cref="T:System.NotSupportedException">模型狀態字典為唯讀。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.String,System.Web.Mvc.ModelState)">
      <summary>將具有指定索引鍵和值的項目加入至模型狀態字典。</summary>
      <param name="key">要加入的元素的索引鍵。</param>
      <param name="value">要加入的元素值。</param>
      <exception cref="T:System.NotSupportedException">模型狀態字典為唯讀。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">具有指定索引鍵的項目已經出現在模型狀態字典中。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>針對與指定索引鍵相關聯的模型狀態字典，將指定的模型錯誤加入至該字典的錯誤集合。</summary>
      <param name="key">索引鍵。</param>
      <param name="exception">例外狀況。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>針對與指定索引鍵相關聯的模型狀態字典，將指定的錯誤訊息加入至該字典的錯誤集合。</summary>
      <param name="key">索引鍵。</param>
      <param name="errorMessage">錯誤訊息。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Clear">
      <summary>從模型狀態字典移除所有項目。</summary>
      <exception cref="T:System.NotSupportedException">模型狀態字典為唯讀。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>判斷模型狀態字典是否包含特定值。</summary>
      <returns>如果在模型狀態字典中找到 <paramref name="item" />，則為 true，否則為 false。</returns>
      <param name="item">要在模型狀態字典中尋找的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.ContainsKey(System.String)">
      <summary>判斷模型狀態字典是否包含指定的索引鍵。</summary>
      <returns>如果模型狀態字典包含指定的索引鍵，則為 true，否則為 false。</returns>
      <param name="key">要在模型狀態字典中尋找的索引鍵。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState}[],System.Int32)">
      <summary>從指定的索引開始，將模型狀態字典的項目複製到陣列。</summary>
      <param name="array">一維陣列，是從 <see cref="T:System.Collections.Generic.ICollection`1" /> 物件所複製的項目之目的端。陣列必須有以零起始的索引。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 中以零起始的索引，位於複製開始的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> 小於 0。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 為多維。-或-<paramref name="arrayIndex" /> 等於或大於 <paramref name="array" /> 的長度。-或-來源集合中的項目數大於從 <paramref name="arrayIndex" /> 到目的 <paramref name="array" /> 末端的可用空間。-或-型別 <paramref name="T" /> 不能自動轉換為目的 <paramref name="array" /> 的型別。</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Count">
      <summary>取得集合中的索引鍵/值組數目。</summary>
      <returns>集合中索引鍵/值組數目。</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.GetEnumerator">
      <summary>傳回可用來逐一查看集合的列舉程式。</summary>
      <returns>可用來逐一查看集合的列舉程式。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsReadOnly">
      <summary>取得值，這個值表示集合是否為唯讀。</summary>
      <returns>如果集合是唯讀的，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsValid">
      <summary>取得值，這個值表示模型狀態字典的這個執行個體是否有效。</summary>
      <returns>如果這個執行個體有效，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.IsValidField(System.String)">
      <summary>判斷是否有任何 <see cref="T:System.Web.Mvc.ModelError" /> 物件與指定的索引鍵相關聯或是以指定的索引鍵做為前置字元。</summary>
      <returns>如果模型狀態字典包含與指定之索引鍵相關聯的值，則為 true，否則為 false。</returns>
      <param name="key">索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Item(System.String)">
      <summary>取得或設定與指定之索引鍵相關聯的值。</summary>
      <returns>模型狀態項目。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Keys">
      <summary>取得包含字典中的索引鍵之集合。</summary>
      <returns>包含模型狀態字典的索引鍵之集合。</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Merge(System.Web.Mvc.ModelStateDictionary)">
      <summary>從指定的 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件將值複製到這個字典，而如果索引鍵相同則覆寫現有的值。</summary>
      <param name="dictionary">字典。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>從模型狀態字典中移除第一次出現的指定物件。</summary>
      <returns>如果已順利從模型狀態字典中移除 <paramref name="item" />，則為 true，否則為 false。如果在模型狀態字典中找不到 <paramref name="item" />，這個方法也會傳回 false。</returns>
      <param name="item">要從模型狀態字典移除的物件。</param>
      <exception cref="T:System.NotSupportedException">模型狀態字典為唯讀。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.String)">
      <summary>從模型狀態字典移除具有指定之索引鍵的項目。</summary>
      <returns>如果成功移除項目，則為 true，否則為 false。如果在模型狀態字典中找不到 <paramref name="key" />，這個方法也會傳回 false。</returns>
      <param name="key">要移除之項目的索引鍵。</param>
      <exception cref="T:System.NotSupportedException">模型狀態字典為唯讀。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.SetModelValue(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>使用指定的值提供者字典，設定指定之索引鍵的值。</summary>
      <param name="key">索引鍵。</param>
      <param name="value">數值。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回可用來逐一查看集合的列舉程式。</summary>
      <returns>可用來逐一查看集合的列舉程式。</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.TryGetValue(System.String,System.Web.Mvc.ModelState@)">
      <summary>嘗試取得與指定之索引鍵相關聯的值。</summary>
      <returns>如果實作 <see cref="T:System.Collections.Generic.IDictionary`2" /> 之物件包含具有指定之索引鍵的項目，則為 true，否則為 false。</returns>
      <param name="key">要取得之值的索引鍵。</param>
      <param name="value">這個方法傳回時，如果找到索引鍵，則為與指定索引鍵關聯的值，否則為 <paramref name="value" /> 參數的型別預設值。傳遞此參數時不需設定初始值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Values">
      <summary>取得包含字典中的值之集合。</summary>
      <returns>包含模型狀態字典的值之集合。</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidationResult">
      <summary>提供驗證結果的容器。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidationResult.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ModelValidationResult" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.MemberName">
      <summary>取得或設定成員的名稱。</summary>
      <returns>成員的名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.Message">
      <summary>取得或設定驗證結果訊息。</summary>
      <returns>驗證結果訊息。</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidator">
      <summary>提供用於實作驗證邏輯的基底類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>從衍生類別的建構函式呼叫，以初始化 <see cref="T:System.Web.Mvc.ModelValidator" /> 類別。</summary>
      <param name="metadata">中繼資料。</param>
      <param name="controllerContext">控制器內容。</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.ControllerContext">
      <summary>取得控制器內容。</summary>
      <returns>控制器內容。</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetClientValidationRules">
      <summary>在衍生類別中實作時，傳回用戶端驗證的中繼資料。</summary>
      <returns>用戶端驗證的中繼資料。</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetModelValidator(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>傳回模型的複合模型驗證程式。</summary>
      <returns>模型的複合模型驗證程式。</returns>
      <param name="metadata">中繼資料。</param>
      <param name="context">控制器內容。</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.IsRequired">
      <summary>取得或設定值，這個值表示是否需要模型屬性。</summary>
      <returns>如果需要模型屬性，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.Metadata">
      <summary>取得模型驗證程式的中繼資料。</summary>
      <returns>模型驗證程式的中繼資料。</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.Validate(System.Object)">
      <summary>在衍生類別中實作時，驗證物件。</summary>
      <returns>驗證結果的清單。</returns>
      <param name="container">容器。</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProvider">
      <summary>提供模型的驗證程式清單。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.#ctor">
      <summary>在衍生類別中實作時，初始化 <see cref="T:System.Web.Mvc.ModelValidatorProvider" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>取得驗證程式清單。</summary>
      <returns>驗證程式清單。</returns>
      <param name="metadata">中繼資料。</param>
      <param name="context">內容。</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviderCollection">
      <summary>表示模型驗證程式提供者的集合。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ModelValidatorProvider})">
      <summary>使用模型驗證提供者清單，初始化 <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" /> 類別的新執行個體。</summary>
      <param name="list">模型驗證提供者的清單。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.ClearItems">
      <summary>從集合移除所有元素。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>傳回模型驗證程式的清單。</summary>
      <returns>模型驗證程式的清單。</returns>
      <param name="metadata">模型中繼資料。</param>
      <param name="context">控制器內容。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.InsertItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>將模型驗證程式提供者插入集合中。</summary>
      <param name="index">應該插入 item 之以零起始的索引。</param>
      <param name="item">要插入的模型驗證程式提供者物件。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.RemoveItem(System.Int32)">
      <summary>移除集合的指定索引處的項目。</summary>
      <param name="index">要移除的項目之以零起始的索引。</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.SetItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>取代位於指定之索引處的模型驗證程式提供者項目。</summary>
      <param name="index">要取代的模型驗證程式提供者項目之以零起始的索引。</param>
      <param name="item">模型驗證程式提供者項目的新值。</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviders">
      <summary>提供目前驗證提供者的容器。</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidatorProviders.Providers">
      <summary>取得模型驗證程式提供者集合。</summary>
      <returns>模型驗證程式提供者集合。</returns>
    </member>
    <member name="T:System.Web.Mvc.MultiSelectList">
      <summary>表示使用者可以從中選取多個項目的項目清單。</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable)">
      <summary>使用要包含在清單中的指定項目，初始化 <see cref="T:System.Web.Mvc.MultiSelectList" /> 類別的新執行個體。</summary>
      <param name="items">項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>使用要包含在清單中的指定項目和選取的值，初始化 <see cref="T:System.Web.Mvc.MultiSelectList" /> 類別的新執行個體。</summary>
      <param name="items">項目。</param>
      <param name="selectedValues">選取的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>使用要包含在清單中的項目、已選取的值及已停用的值，來初始化 MultiSelectList 類別的新執行個體。</summary>
      <param name="items">用來建置清單之每一個 <see cref="T:System.Web.Mvc.SelectListItem" /> 的項目。</param>
      <param name="selectedValues">已選取的值欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已選取屬性。</param>
      <param name="disabledValues">已停用的值。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已停用屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>使用要包含在清單中的項目、資料值欄位和資料文字欄位，初始化 <see cref="T:System.Web.Mvc.MultiSelectList" /> 類別的新執行個體。</summary>
      <param name="items">項目。</param>
      <param name="dataValueField">資料值欄位。</param>
      <param name="dataTextField">資料文字欄位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable)">
      <summary>使用要包含在清單中的項目、資料值欄位、資料文字欄位和選取的值，初始化 <see cref="T:System.Web.Mvc.MultiSelectList" /> 類別的新執行個體。</summary>
      <param name="items">項目。</param>
      <param name="dataValueField">資料值欄位。</param>
      <param name="dataTextField">資料文字欄位。</param>
      <param name="selectedValues">選取的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>使用要包含在清單中的項目、資料值欄位、資料文字欄位、已選取的值及已停用的值，來初始化 MultiSelectList 類別的新執行個體。</summary>
      <param name="items">用來建置清單之每一個 <see cref="T:System.Web.Mvc.SelectListItem" /> 的項目。</param>
      <param name="dataValueField">資料值欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的值屬性。</param>
      <param name="dataTextField">資料文字欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的文字屬性。</param>
      <param name="selectedValues">已選取的值欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已選取屬性。</param>
      <param name="disabledValues">已停用的值。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已停用屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String)">
      <summary>使用要包含在清單中的項目、資料值欄位、資料文字欄位及資料群組欄位，來初始化 MultiSelectList 類別的新執行個體。</summary>
      <param name="items">用來建置清單之每一個 <see cref="T:System.Web.Mvc.SelectListItem" /> 的項目。</param>
      <param name="dataValueField">資料值欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的值屬性。</param>
      <param name="dataTextField">資料文字欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的文字屬性。</param>
      <param name="dataGroupField">資料群組欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的群組屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable)">
      <summary>使用要包含在清單中的項目、資料值欄位、資料文字欄位、資料群組欄位及已選取的值，來初始化 MultiSelectList 類別的新執行個體。</summary>
      <param name="items">用來建置清單之每一個 <see cref="T:System.Web.Mvc.SelectListItem" /> 的項目。</param>
      <param name="dataValueField">資料值欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的值屬性。</param>
      <param name="dataTextField">資料文字欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的文字屬性。</param>
      <param name="dataGroupField">資料群組欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的群組屬性。</param>
      <param name="selectedValues">已選取的值欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已選取屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>使用要包含在清單中的項目、資料值欄位、資料文字欄位、資料群組欄位、已選取的值及已停用的值，來初始化 MultiSelectList 類別的新執行個體。</summary>
      <param name="items">用來建置清單之每一個 <see cref="T:System.Web.Mvc.SelectListItem" /> 的項目。</param>
      <param name="dataValueField">資料值欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的值屬性。</param>
      <param name="dataTextField">資料文字欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的文字屬性。</param>
      <param name="dataGroupField">資料群組欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的群組屬性。</param>
      <param name="selectedValues">已選取的值欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已選取屬性。</param>
      <param name="disabledValues">已停用的值。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已停用屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>使用要包含在清單中的項目、資料值欄位、資料文字欄位、資料群組欄位、已選取的值、已停用的值及已停用的群組，來初始化 MultiSelectList 類別的新執行個體。</summary>
      <param name="items">用來建置清單之每一個 <see cref="T:System.Web.Mvc.SelectListItem" /> 的項目。</param>
      <param name="dataValueField">資料值欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的值屬性。</param>
      <param name="dataTextField">資料文字欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的文字屬性。</param>
      <param name="dataGroupField">資料群組欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的群組屬性。</param>
      <param name="selectedValues">已選取的值欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已選取屬性。</param>
      <param name="disabledValues">已停用的值。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已停用屬性。</param>
      <param name="disabledGroups">已停用的群組。用來符合對應 <see cref="T:System.Web.Mvc.SelectListGroup" /> 的已停用屬性。</param>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataGroupField">
      <summary>取得資料群組欄位。</summary>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataTextField">
      <summary>取得或設定資料文字欄位。</summary>
      <returns>資料文字欄位。</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataValueField">
      <summary>取得或設定資料值欄位。</summary>
      <returns>資料值欄位。</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DisabledGroups">
      <summary>取得已停用的群組。</summary>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DisabledValues">
      <summary>取得已停用的值。</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.GetEnumerator">
      <summary>傳回可用來逐一查看集合的列舉程式。</summary>
      <returns>可用來逐一查看集合的列舉程式。</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.Items">
      <summary>取得或設定清單中的項目。</summary>
      <returns>清單中的項目。</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.SelectedValues">
      <summary>取得或設定選取的值。</summary>
      <returns>選取的值。</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回可用來逐一查看集合的列舉程式。</summary>
      <returns>可用來逐一查看集合的列舉程式。</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcFilter">
      <summary>在衍生類別中實作時，提供中繼資料類別，這個類別包含對一個或多個篩選條件介面、篩選條件順序及範圍之實作的參考。</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.MvcFilter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor(System.Boolean,System.Int32)">
      <summary>初始化 <see cref="T:System.Web.Mvc.MvcFilter" /> 類別的新執行個體，並指定篩選條件順序和指定是否允許使用多個篩選條件。</summary>
      <param name="allowMultiple">true 表示指定允許使用多個相同類型的篩選條件，否則為 false。</param>
      <param name="order">篩選順序。</param>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.AllowMultiple">
      <summary>取得值，這個值表示是否可以指定多個篩選條件屬性執行個體。</summary>
      <returns>如果允許多個篩選條件屬性執行個體，則為 true，否則為 false。實作<see cref="P:System.Web.Mvc.IMvcFilter.AllowMultiple" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.Order">
      <summary>取得表示篩選條件套用順序的值。</summary>
      <returns>表示篩選條件套用順序的值。實作<see cref="P:System.Web.Mvc.IMvcFilter.Order" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcHandler">
      <summary>選取處理 HTTP 要求的控制器。</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.#ctor(System.Web.Routing.RequestContext)">
      <summary>初始化 <see cref="T:System.Web.Mvc.MvcHandler" /> 類別的新執行個體。</summary>
      <param name="requestContext">要求內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestContext" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.AddVersionHeader(System.Web.HttpContextBase)">
      <summary>使用指定的 HTTP 內容來加入版本標頭。</summary>
      <param name="httpContext">HTTP 內容。</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>由 ASP.NET 呼叫來開始進行非同步要求處理。</summary>
      <returns>非同步呼叫的狀態。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="callback">非同步的回呼方法。</param>
      <param name="state">非同步物件的狀態。</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>由 ASP.NET 呼叫，來使用基底 HTTP 內容開始進行非同步要求處理。</summary>
      <returns>非同步呼叫的狀態。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="callback">非同步的回呼方法。</param>
      <param name="state">非同步物件的狀態。</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.DisableMvcResponseHeader">
      <summary>取得或設定值，這個值表示 MVC 回應標頭是否已停用。</summary>
      <returns>如果 MVC 回應標頭已停用，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>非同步要求處理結束時由 ASP.NET 進行呼叫。</summary>
      <param name="asyncResult">非同步結果。</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.IsReusable">
      <summary>取得值，這個值表示另一個要求是否可以使用 <see cref="T:System.Web.IHttpHandler" /> 執行個體。</summary>
      <returns>如果 <see cref="T:System.Web.IHttpHandler" /> 執行個體可重複使用，則為 true，否則為 false。</returns>
    </member>
    <member name="F:System.Web.Mvc.MvcHandler.MvcVersionHeaderName">
      <summary>包含 ASP.NET MVC 版本的標頭名稱。</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>使用指定的 HTTP 要求內容來處理要求。</summary>
      <param name="httpContext">HTTP 內容。</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContextBase)">
      <summary>使用指定的基本 HTTP 要求內容來處理要求。</summary>
      <param name="httpContext">HTTP 內容。</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.RequestContext">
      <summary>取得要求內容。</summary>
      <returns>要求內容。</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>由 ASP.NET 呼叫，來使用基底 HTTP 內容開始進行非同步要求處理。</summary>
      <returns>非同步呼叫的狀態。</returns>
      <param name="context">HTTP 內容。</param>
      <param name="cb">非同步的回呼方法。</param>
      <param name="extraData">資料。</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>非同步要求處理結束時由 ASP.NET 進行呼叫。</summary>
      <param name="result">非同步結果。</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#IsReusable">
      <summary>取得值，這個值表示另一個要求是否可以使用 <see cref="T:System.Web.IHttpHandler" /> 執行個體。</summary>
      <returns>如果 <see cref="T:System.Web.IHttpHandler" /> 執行個體可重複使用，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>以實作 <see cref="T:System.Web.IHttpHandler" /> 介面的自訂 HTTP 處理常式，來啟用 HTTP Web 要求的處理。</summary>
      <param name="httpContext">
        <see cref="T:System.Web.HttpContext" /> 物件，對於用來服務 HTTP 要求的內建伺服器物件 (例如，Request、Response、Session 及 Server) 提供參考。</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHtmlString">
      <summary>表示不應該再次編碼的 HTML 編碼字串。</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Web.Mvc.MvcHtmlString" /> 類別的新執行個體。</summary>
      <param name="value">要建立的字串。如果未指派值，則會使用空字串值建立物件。</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.Create(System.String)">
      <summary>使用指定的文字值，建立 HTML 編碼的字串。</summary>
      <returns>HTML 編碼的字串。</returns>
      <param name="value">要建立的字串值。</param>
    </member>
    <member name="F:System.Web.Mvc.MvcHtmlString.Empty">
      <summary>包含空白 HTML 字串。</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.IsNullOrEmpty(System.Web.Mvc.MvcHtmlString)">
      <summary>判斷指定的字串包含內容，還是 null 或空白。</summary>
      <returns>如果字串是 null 或空白，則為 true，否則為 false。</returns>
      <param name="value">字串。</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHttpHandler">
      <summary>驗證並處理 HTTP 要求。</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.MvcHttpHandler" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>由 ASP.NET 呼叫來開始進行非同步要求處理。</summary>
      <returns>非同步呼叫的狀態。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="callback">非同步的回呼方法。</param>
      <param name="state">狀態。</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>由 ASP.NET 呼叫來開始進行非同步要求處理。</summary>
      <returns>非同步呼叫的狀態。</returns>
      <param name="httpContext">基底 HTTP 內容。</param>
      <param name="callback">非同步的回呼方法。</param>
      <param name="state">狀態。</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>非同步要求處理結束時由 ASP.NET 進行呼叫。</summary>
      <param name="asyncResult">非同步結果。</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>由 ASP.NET 呼叫來開始進行非同步要求處理。</summary>
      <returns>非同步呼叫的狀態。</returns>
      <param name="context">內容。</param>
      <param name="cb">非同步的回呼方法。</param>
      <param name="extraData">包含資料的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>非同步要求處理結束時由 ASP.NET 進行呼叫。</summary>
      <param name="result">非同步作業的狀態。</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.VerifyAndProcessRequest(System.Web.IHttpHandler,System.Web.HttpContextBase)">
      <summary>驗證並處理 HTTP 要求。</summary>
      <param name="httpHandler">HTTP 處理常式。</param>
      <param name="httpContext">HTTP 內容。</param>
    </member>
    <member name="T:System.Web.Mvc.MvcRouteHandler">
      <summary>建立會實作 IHttpHandler 介面的物件，並傳遞要求內容給它。</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.MvcRouteHandler" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor(System.Web.Mvc.IControllerFactory)">
      <summary>使用指定的 Factory 控制器物件，初始化 <see cref="T:System.Web.Mvc.MvcRouteHandler" /> 類別的新執行個體。</summary>
      <param name="controllerFactory">控制器 Factory。</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>使用指定的 HTTP 內容，傳回 HTTP 處理常式。</summary>
      <returns>HTTP 處理常式。</returns>
      <param name="requestContext">要求內容。</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetSessionStateBehavior(System.Web.Routing.RequestContext)">
      <summary>傳回工作階段行為。</summary>
      <returns>工作階段行為。</returns>
      <param name="requestContext">要求內容。</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>使用指定的要求內容，傳回 HTTP 處理常式。</summary>
      <returns>HTTP 處理常式。</returns>
      <param name="requestContext">要求內容。</param>
    </member>
    <member name="T:System.Web.Mvc.MvcWebRazorHostFactory">
      <summary>建立 <see cref="T:System.Web.Mvc.MvcWebPageRazorHost" /> 檔案的執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.MvcWebRazorHostFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.CreateHost(System.String,System.String)">
      <summary>建立 Razor 主機。</summary>
      <returns>Razor 主機。</returns>
      <param name="virtualPath">目標檔案的虛擬路徑。</param>
      <param name="physicalPath">目標檔案的實體路徑。</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionExtensions">
      <summary>擴充 NameValueCollection 物件，讓集合可以複製到指定的字典。</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>將指定的集合複製到指定的目的地。</summary>
      <param name="collection">集合。</param>
      <param name="destination">目的地。</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <summary>將指定的集合複製到指定的目的地，並選擇性地取代先前的項目。</summary>
      <param name="collection">集合。</param>
      <param name="destination">目的地。</param>
      <param name="replaceEntries">true 表示要取代先前的項目，否則為 false。</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionValueProvider">
      <summary>表示值提供者的基底類別，該值提供者的值來自 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 物件。</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>使用指定的未經驗證集合，初始化 <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" /> 類別的新執行個體。</summary>
      <param name="collection">集合，包含用來初始化提供者的值。</param>
      <param name="unvalidatedCollection">集合，包含用來初始化提供者的值。系統將不會驗證此集合。</param>
      <param name="culture">包含目標文化特性相關資訊的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo,System.Boolean)">
      <summary>初始化名稱值集合提供者。</summary>
      <param name="collection">來自要求的索引鍵值集合。</param>
      <param name="unvalidatedCollection">來自要求之未驗證的索引鍵值集合。</param>
      <param name="culture">值要與其搭配使用的文化。</param>
      <param name="jQueryToMvcRequestNormalizationRequired">將複雜 Javascript 物件傳送至伺服器時的 jQuery POST 不會以 MVC 可了解的方式來編碼。如果應將要求標準化為 MVC 表單，則應該設定這個旗標 - https://aspnetwebstack.codeplex.com/workitem/1564。</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>初始化 <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" /> 類別的新執行個體。</summary>
      <param name="collection">集合，包含用來初始化提供者的值。</param>
      <param name="culture">包含目標文化特性相關資訊的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.ContainsPrefix(System.String)">
      <summary>判斷集合是否包含指定的前置詞。</summary>
      <returns>如果此集合包含指定的前置詞，則為 true，否則為 false。</returns>
      <param name="prefix">要搜尋的前置字元。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetKeysFromPrefix(System.String)">
      <summary>使用指定的前置詞取得索引鍵。</summary>
      <returns>索引鍵。</returns>
      <param name="prefix">前置字元。</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String)">
      <summary>使用指定的索引鍵傳回值物件。</summary>
      <returns>指定之索引鍵的值物件。</returns>
      <param name="key">要擷取之值物件的索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String,System.Boolean)">
      <summary>使用指定的索引鍵和驗證指示詞，傳回值物件。</summary>
      <returns>指定之索引鍵的值物件。</returns>
      <param name="key">索引鍵。</param>
      <param name="skipValidation">如果應該略過驗證，則為 true，否則為 false。</param>
    </member>
    <member name="T:System.Web.Mvc.NoAsyncTimeoutAttribute">
      <summary>提供 <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" /> 屬性的便利包裝函式。</summary>
    </member>
    <member name="M:System.Web.Mvc.NoAsyncTimeoutAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.NoAsyncTimeoutAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Web.Mvc.NonActionAttribute">
      <summary>表示用來指出控制器方法不是動作方法的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.NonActionAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>判斷屬性是否會使用指定的控制器內容來標記不是動作方法的方法。</summary>
      <returns>如果屬性會標記有效的非動作方法，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="methodInfo">方法資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.OutputCacheAttribute">
      <summary>表示用來標示將會快取其輸出之動作方法的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.OutputCacheAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.CacheProfile">
      <summary>取得或設定快取設定檔名稱。</summary>
      <returns>快取設定檔名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.ChildActionCache">
      <summary>取得或設定子動作快取。</summary>
      <returns>子動作快取。</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Duration">
      <summary>取得或設定快取期間 (秒鐘)。</summary>
      <returns>快取期間。</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.IsChildActionCacheActive(System.Web.Mvc.ControllerContext)">
      <summary>傳回值，這個值表示子動作快取是否作用中。</summary>
      <returns>如果子動作快取作用中，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Location">
      <summary>取得或設定位置。</summary>
      <returns>位置。</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.NoStore">
      <summary>取得或設定值，這個值表示是否要儲存快取。</summary>
      <returns>如果應該儲存快取，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>這個方法是 <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" /> 的實作，並支援 ASP.NET MVC 基礎結構。它並不適合直接從您的程式碼使用。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>這個方法是 <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" /> 的實作，並支援 ASP.NET MVC 基礎結構。它並不適合直接從您的程式碼使用。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>這個方法是 <see cref="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)" /> 的實作，並支援 ASP.NET MVC 基礎結構。它並不適合直接從您的程式碼使用。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>這個方法是 <see cref="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> 的實作，並支援 ASP.NET MVC 基礎結構。它並不適合直接從您的程式碼使用。</summary>
      <param name="filterContext">篩選內容。</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>在動作結果執行之前呼叫。</summary>
      <param name="filterContext">篩選條件內容，這個內容封裝 <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 的使用資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filterContext" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.SqlDependency">
      <summary>取得或設定 SQL 相依性。</summary>
      <returns>SQL 相依性。</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByContentEncoding">
      <summary>取得或設定依內容區分的編碼方式。</summary>
      <returns>依內容區分的編碼方式。</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByCustom">
      <summary>取得或設定依自訂區分的值。</summary>
      <returns>依自訂區分的值。</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByHeader">
      <summary>取得或設定依標頭區分的值。</summary>
      <returns>依標頭區分的值。</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByParam">
      <summary>取得或設定依參數區分的值。</summary>
      <returns>依參數區分的值。</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideActionFiltersAttribute">
      <summary>表示與覆寫篩選條件相關聯的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideActionFiltersAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.OverrideActionFiltersAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideActionFiltersAttribute.FiltersToOverride">
      <summary>取得覆寫此執行個體的篩選條件。</summary>
      <returns>覆寫此執行個體的篩選條件。</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideAuthenticationAttribute">
      <summary>表示與驗證相關聯的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideAuthenticationAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.OverrideAuthenticationAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideAuthenticationAttribute.FiltersToOverride">
      <summary>取得覆寫此執行個體的篩選條件。</summary>
      <returns>覆寫此執行個體的篩選條件。</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideAuthorizationAttribute">
      <summary>表示與授權相關聯的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideAuthorizationAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.OverrideAuthorizationAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideAuthorizationAttribute.FiltersToOverride">
      <summary>取得覆寫此執行個體的篩選條件。</summary>
      <returns>覆寫此執行個體的篩選條件。</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideExceptionFiltersAttribute">
      <summary>表示與例外狀況篩選條件相關聯的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideExceptionFiltersAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.OverrideExceptionFiltersAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideExceptionFiltersAttribute.FiltersToOverride">
      <summary>取得覆寫此執行個體的篩選條件。</summary>
      <returns>覆寫此執行個體的篩選條件。</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideResultFiltersAttribute">
      <summary>表示與結果篩選條件相關聯的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideResultFiltersAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.OverrideResultFiltersAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideResultFiltersAttribute.FiltersToOverride">
      <summary>取得覆寫此執行個體的篩選條件。</summary>
      <returns>覆寫此執行個體的篩選條件。</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterBindingInfo">
      <summary>封裝將動作方法參數繫結至資料模型的資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterBindingInfo.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ParameterBindingInfo" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Binder">
      <summary>取得模型繫結器。</summary>
      <returns>模型繫結器。</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Exclude">
      <summary>取得已停用繫結之屬性名稱的清單 (以逗號分隔)。</summary>
      <returns>排除清單。</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Include">
      <summary>取得已啟用繫結之屬性名稱的清單 (以逗號分隔)。</summary>
      <returns>包含清單。</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Prefix">
      <summary>取得當 MVC 架構將值繫結至動作參數或繫結至模型屬性時所要使用的前置字元。</summary>
      <returns>前置字元。</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterDescriptor">
      <summary>包含描述參數的資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ParameterDescriptor" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ActionDescriptor">
      <summary>取得動作描述元。</summary>
      <returns>動作描述元。</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.BindingInfo">
      <summary>取得繫結資訊。</summary>
      <returns>繫結資訊。</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.DefaultValue">
      <summary>取得參數的預設值。</summary>
      <returns>參數的預設值。</returns>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性陣列，但不包括具名屬性。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.TypeLoadException">無法載入自訂屬性型別。</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">針對此成員定義了一個以上的型別 <paramref name="attributeType" /> 屬性。</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性陣列，並依型別識別。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.TypeLoadException">無法載入自訂屬性型別。</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">針對此成員定義了一個以上的型別 <paramref name="attributeType" /> 屬性。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeType" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>指出是否已為此成員定義自訂屬性型別的一個或多個執行個體。</summary>
      <returns>如果已定義此成員的自訂屬性型別，則為 true，否則為 false。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeType" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterName">
      <summary>取得參數的名稱。</summary>
      <returns>參數名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterType">
      <summary>取得參數的型別。</summary>
      <returns>參數的型別。</returns>
    </member>
    <member name="T:System.Web.Mvc.PartialViewResult">
      <summary>表示用來將部分檢視傳送至回應的基底類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.PartialViewResult" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>傳回用來呈現檢視的 <see cref="T:System.Web.Mvc.ViewEngineResult" /> 物件。</summary>
      <returns>檢視引擎結果。</returns>
      <param name="context">控制器內容。</param>
      <exception cref="T:System.InvalidOperationException">方法嘗試尋找檢視時發生錯誤。</exception>
    </member>
    <member name="T:System.Web.Mvc.PreApplicationStartCode">
      <summary>提供 ASP.NET Razor 應用程式啟動前程式碼的註冊點。</summary>
    </member>
    <member name="M:System.Web.Mvc.PreApplicationStartCode.Start">
      <summary>註冊 Razor 應用程式啟動前程式碼。</summary>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProvider">
      <summary>表示 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 物件中所含查詢字串的值提供者。</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>初始化 <see cref="T:System.Web.Mvc.QueryStringValueProvider" /> 類別的新執行個體。</summary>
      <param name="controllerContext">物件，會封裝目前 HTTP 要求之相關資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProviderFactory">
      <summary>表示負責建立查詢字串值提供者物件之新執行個體的類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.QueryStringValueProviderFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>針對指定的控制器內容傳回值提供者物件。</summary>
      <returns>查詢字串值提供者物件。</returns>
      <param name="controllerContext">物件，會封裝目前 HTTP 要求之相關資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.RangeAttributeAdapter">
      <summary>提供 <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> 屬性的介面卡。</summary>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RangeAttribute)">
      <summary>初始化 <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> 類別的新執行個體。</summary>
      <param name="metadata">模型中繼資料。</param>
      <param name="context">控制器內容。</param>
      <param name="attribute">範圍屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.GetClientValidationRules">
      <summary>取得用於進行範圍檢查的用戶端驗證規則清單。</summary>
      <returns>用於進行範圍檢查的用戶端驗證規則清單。</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorView">
      <summary>表示用來建立具有 Razor 語法之檢視的類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化 <see cref="T:System.Web.Mvc.RazorView" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="viewPath">檢視路徑。</param>
      <param name="layoutPath">版面配置頁或主版頁面。</param>
      <param name="runViewStartPages">表示是否應該在檢視之前執行檢視啟動檔案的值。</param>
      <param name="viewStartFileExtensions">查詢檢視啟動檔案時將用到的副檔名集。</param>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Web.Mvc.IViewPageActivator)">
      <summary>使用檢視頁面啟動項，初始化 <see cref="T:System.Web.Mvc.RazorView" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="viewPath">檢視路徑。</param>
      <param name="layoutPath">版面配置頁或主版頁面。</param>
      <param name="runViewStartPages">表示是否應該在檢視之前執行檢視啟動檔案的值。</param>
      <param name="viewStartFileExtensions">查詢檢視啟動檔案時將用到的副檔名集。</param>
      <param name="viewPageActivator">檢視頁面啟動項。</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.LayoutPath">
      <summary>取得版面配置頁或主版頁面。</summary>
      <returns>版面配置頁或主版頁面。</returns>
    </member>
    <member name="M:System.Web.Mvc.RazorView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>使用指定的寫入器和 <see cref="T:System.Web.Mvc.WebViewPage" /> 執行個體來呈現指定的檢視內容。</summary>
      <param name="viewContext">檢視內容。</param>
      <param name="writer">用來將檢視呈現至回應的寫入器。</param>
      <param name="instance">
        <see cref="T:System.Web.Mvc.WebViewPage" /> 執行個體。</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.RunViewStartPages">
      <summary>取得值，這個值表示是否應該在檢視之前執行檢視啟動檔案。</summary>
      <returns>表示是否應該在檢視之前執行檢視啟動檔案的值。</returns>
    </member>
    <member name="P:System.Web.Mvc.RazorView.ViewStartFileExtensions">
      <summary>取得或設定查詢檢視啟動檔案時將用到的副檔名組。</summary>
      <returns>查詢檢視啟動檔案時將用到的副檔名組。</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorViewEngine">
      <summary>表示檢視引擎，用來呈現使用 ASP.NET Razor 語法的 Web 網頁。</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.RazorViewEngine" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>使用檢視頁面啟動項，初始化 <see cref="T:System.Web.Mvc.RazorViewEngine" /> 類別的新執行個體。</summary>
      <param name="viewPageActivator">檢視頁面啟動項。</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>使用指定的控制器內容和部分路徑建立部分檢視。</summary>
      <returns>部分檢視。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="partialPath">部分檢視的路徑。</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>使用指定的控制器內容以及檢視和主版檢視的路徑建立檢視。</summary>
      <returns>檢視。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="viewPath">檢視的路徑。</param>
      <param name="masterPath">主版檢視的路徑。</param>
    </member>
    <member name="T:System.Web.Mvc.RedirectResult">
      <summary>透過重新導向至指定的 URI 來控制應用程式動作的處理方式。</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的新執行個體。</summary>
      <param name="url">目標 URL。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String,System.Boolean)">
      <summary>使用指定的 URL 和永久重新導向旗標，初始化 <see cref="T:System.Web.Mvc.RedirectResult" /> 類別的新執行個體。</summary>
      <param name="url">URL。</param>
      <param name="permanent">表示重新導向是否應為永久性的值。</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>以繼承自 <see cref="T:System.Web.Mvc.ActionResult" /> 類別的自訂型別，來處理動作方法的結果。</summary>
      <param name="context">執行結果時所在範圍的內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Permanent">
      <summary>取得值，這個值表示重新導向是否應為永久性。</summary>
      <returns>如果重新導向應為永久性，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Url">
      <summary>取得或設定目標 URL。</summary>
      <returns>目標 URL。</returns>
    </member>
    <member name="T:System.Web.Mvc.RedirectToRouteResult">
      <summary>表示使用指定的路徑值字典執行重新導向的結果。</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>使用指定的路徑名稱和路徑值，初始化 <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> 類別的新執行個體。</summary>
      <param name="routeName">路徑的名稱。</param>
      <param name="routeValues">路徑值。</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Boolean)">
      <summary>使用指定的路由名稱、路由值和永久重新導向旗標，初始化 <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> 類別的新執行個體。</summary>
      <param name="routeName">路徑的名稱。</param>
      <param name="routeValues">路徑值。</param>
      <param name="permanent">表示重新導向是否應為永久性的值。</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.Web.Routing.RouteValueDictionary)">
      <summary>使用指定的路徑值，初始化 <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> 類別的新執行個體。</summary>
      <param name="routeValues">路徑值。</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>以繼承自 <see cref="T:System.Web.Mvc.ActionResult" /> 類別的自訂型別，來處理動作方法的結果。</summary>
      <param name="context">執行結果時所在範圍的內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.Permanent">
      <summary>取得值，這個值表示重新導向是否應為永久性。</summary>
      <returns>如果重新導向應為永久性，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteName">
      <summary>取得或設定路徑的名稱。</summary>
      <returns>路徑的名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteValues">
      <summary>取得或設定路徑值。</summary>
      <returns>路徑值。</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedActionDescriptor">
      <summary>包含描述反映之動作方法的資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>初始化 <see cref="T:System.Web.Mvc.ReflectedActionDescriptor" /> 類別的新執行個體。</summary>
      <param name="methodInfo">動作方法資訊。</param>
      <param name="actionName">動作的名稱。</param>
      <param name="controllerDescriptor">控制器描述元。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="methodInfo" /> 或 <paramref name="controllerDescriptor" /> 參數為 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ActionName">
      <summary>取得動作的名稱。</summary>
      <returns>動作的名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ControllerDescriptor">
      <summary>取得控制器描述元。</summary>
      <returns>控制器描述元。</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的動作方法參數，執行指定的控制器內容。</summary>
      <returns>動作傳回值。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="parameters">參數。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parameters" /> 或 <paramref name="controllerContext" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性陣列，但不包括具名屬性。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.TypeLoadException">無法載入自訂屬性型別。</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">針對此成員定義了一個以上的型別 <paramref name="attributeType" /> 屬性。</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性陣列，並依型別識別。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.TypeLoadException">無法載入自訂屬性型別。</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">針對此成員定義了一個以上的型別 <paramref name="attributeType" /> 屬性。</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>取得篩選條件屬性。</summary>
      <returns>篩選條件屬性。</returns>
      <param name="useCache">true 表示使用快取，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetParameters">
      <summary>擷取動作方法的參數。</summary>
      <returns>動作方法的參數。</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetSelectors">
      <summary>擷取動作選取器。</summary>
      <returns>動作選取器。</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>指出是否已為此成員定義自訂屬性型別的一個或多個執行個體。</summary>
      <returns>如果已定義此成員的自訂屬性型別，則為 true，否則為 false。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.MethodInfo">
      <summary>取得或設定動作方法資訊。</summary>
      <returns>動作方法資訊。</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.UniqueId">
      <summary>使用延遲初始設定取得反映之動作描述元的唯一 ID。</summary>
      <returns>唯一 ID。</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedControllerDescriptor">
      <summary>包含描述反映之控制器的資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.Mvc.ReflectedControllerDescriptor" /> 類別的新執行個體。</summary>
      <param name="controllerType">控制器的型別。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerType" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedControllerDescriptor.ControllerType">
      <summary>取得控制器的型別。</summary>
      <returns>控制器的型別。</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>尋找指定的動作，以用於指定的控制器內容。</summary>
      <returns>動作的相關資訊。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionName">動作的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCanonicalActions">
      <summary>傳回控制器的動作清單。</summary>
      <returns>控制器的動作描述元清單。</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性陣列，但不包括具名屬性。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.TypeLoadException">無法載入自訂屬性型別。</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">針對此成員定義了一個以上的型別 <paramref name="attributeType" /> 屬性。</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性陣列，並依型別識別。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.TypeLoadException">無法載入自訂屬性型別。</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">針對此成員定義了一個以上的型別 <paramref name="attributeType" /> 屬性。</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>取得篩選條件屬性。</summary>
      <returns>篩選條件屬性。</returns>
      <param name="useCache">true 表示使用快取，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>傳回值，這個值表示是否已為此成員定義自訂屬性型別的一個或多個執行個體。</summary>
      <returns>如果已定義此成員的自訂屬性型別，則為 true，否則為 false。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
    </member>
    <member name="T:System.Web.Mvc.ReflectedParameterDescriptor">
      <summary>包含描述反映之動作方法參數的資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.#ctor(System.Reflection.ParameterInfo,System.Web.Mvc.ActionDescriptor)">
      <summary>初始化 <see cref="T:System.Web.Mvc.ReflectedParameterDescriptor" /> 類別的新執行個體。</summary>
      <param name="parameterInfo">參數資訊。</param>
      <param name="actionDescriptor">動作描述元。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parameterInfo" /> 或 <paramref name="actionDescriptor" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ActionDescriptor">
      <summary>取得動作描述元。</summary>
      <returns>動作描述元。</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.BindingInfo">
      <summary>取得繫結資訊。</summary>
      <returns>繫結資訊。</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.DefaultValue">
      <summary>取得反映參數的預設值。</summary>
      <returns>反映參數的預設值。</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性陣列，但不包括具名屬性。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.TypeLoadException">無法載入自訂屬性型別。</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">針對此成員定義了一個以上的型別 <paramref name="attributeType" /> 屬性。</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性陣列，並依型別識別。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
      <exception cref="T:System.TypeLoadException">無法載入自訂屬性型別。</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">針對此成員定義了一個以上的型別 <paramref name="attributeType" /> 屬性。</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>傳回值，這個值表示是否已為此成員定義自訂屬性型別的一個或多個執行個體。</summary>
      <returns>如果已定義此成員的自訂屬性型別，則為 true，否則為 false。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterInfo">
      <summary>取得或設定參數資訊。</summary>
      <returns>參數資訊。</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterName">
      <summary>取得參數的名稱。</summary>
      <returns>參數名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterType">
      <summary>取得參數的型別。</summary>
      <returns>參數的型別。</returns>
    </member>
    <member name="T:System.Web.Mvc.RegularExpressionAttributeAdapter">
      <summary>提供 <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> 屬性的介面卡。</summary>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RegularExpressionAttribute)">
      <summary>初始化 <see cref="T:System.Web.Mvc.RegularExpressionAttributeAdapter" /> 類別的新執行個體。</summary>
      <param name="metadata">模型中繼資料。</param>
      <param name="context">控制器內容。</param>
      <param name="attribute">規則運算式屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.GetClientValidationRules">
      <summary>取得規則運算式用戶端驗證規則清單。</summary>
      <returns>規則運算式用戶端驗證規則清單。</returns>
    </member>
    <member name="T:System.Web.Mvc.RemoteAttribute">
      <summary>提供屬性，這個屬性會使用 jQuery 驗證外掛程式遠端驗證程式。</summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.RemoteAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String)">
      <summary>使用指定的路由名稱，初始化 <see cref="T:System.Web.Mvc.RemoteAttribute" /> 類別的新執行個體。</summary>
      <param name="routeName">路徑名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String)">
      <summary>使用指定的動作方法名稱和控制器名稱，初始化 <see cref="T:System.Web.Mvc.RemoteAttribute" /> 類別的新執行個體。</summary>
      <param name="action">動作方法的名稱。</param>
      <param name="controller">控制器的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.String)">
      <summary>使用指定的動作方法名稱、控制器名稱和區域名稱，初始化 <see cref="T:System.Web.Mvc.RemoteAttribute" /> 類別的新執行個體。</summary>
      <param name="action">動作方法的名稱。</param>
      <param name="controller">控制器的名稱。</param>
      <param name="areaName">區域的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.Web.Mvc.AreaReference)">
      <summary>初始化 <see cref="T:System.Web.Mvc.RemoteAttribute" /> 類別的新執行個體。</summary>
      <param name="action">路徑名稱。</param>
      <param name="controller">控制器的名稱。</param>
      <param name="areaReference">若為 <see cref="F:System.Web.Mvc.AreaReference.UseRoot" />，請在根區域中尋找控制器。否則在目前區域中尋找。</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.AdditionalFields">
      <summary>取得或設定驗證所需的額外欄位。</summary>
      <returns>驗證所需的額外欄位。</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation(System.String)">
      <summary>傳回驗證欄位名稱的逗號分隔字串。</summary>
      <returns>驗證欄位名稱的逗號分隔字串。</returns>
      <param name="property">驗證屬性的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatErrorMessage(System.String)">
      <summary>格式化在驗證失敗時所顯示的錯誤訊息。</summary>
      <returns>格式化的錯誤訊息。</returns>
      <param name="name">要與錯誤訊息一起顯示的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>格式化用戶端驗證的屬性，方法是在前面加上星號 (*) 和點號。</summary>
      <returns>字串 "*."會加在屬性前面。</returns>
      <param name="property">屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>取得屬性的用戶端驗證規則清單。</summary>
      <returns>屬性的遠端用戶端驗證規則清單。</returns>
      <param name="metadata">模型中繼資料。</param>
      <param name="context">控制器內容。</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetUrl(System.Web.Mvc.ControllerContext)">
      <summary>取得遠端驗證呼叫的 URL。</summary>
      <returns>遠端驗證呼叫的 URL。</returns>
      <param name="controllerContext">控制器內容。</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.HttpMethod">
      <summary>取得或設定遠端驗證所使用的 HTTP 方法。</summary>
      <returns>遠端驗證所使用的 HTTP 方法。預設值為 "Get"。</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.IsValid(System.Object)">
      <summary>這個方法永遠傳回 true。</summary>
      <returns>true</returns>
      <param name="value">驗證目標。</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteData">
      <summary>取得路由資料字典。</summary>
      <returns>路由資料字典。</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteName">
      <summary>取得或設定路由名稱。</summary>
      <returns>路徑名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.Routes">
      <summary>取得來自路由表的路由集合。</summary>
      <returns>來自路由表的路由集合。</returns>
    </member>
    <member name="T:System.Web.Mvc.RequiredAttributeAdapter">
      <summary>提供 <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" /> 屬性的介面卡。</summary>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RequiredAttribute)">
      <summary>初始化 <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" /> 類別的新執行個體。</summary>
      <param name="metadata">模型中繼資料。</param>
      <param name="context">控制器內容。</param>
      <param name="attribute">必要的屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.GetClientValidationRules">
      <summary>取得必要值用戶端驗證規則清單。</summary>
      <returns>必要值用戶端驗證規則清單。</returns>
    </member>
    <member name="T:System.Web.Mvc.RequireHttpsAttribute">
      <summary>代表強制透過 HTTPS 重新傳送不安全 HTTP 要求的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.RequireHttpsAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>處理傳送至動作方法的不安全 HTTP 要求。</summary>
      <param name="filterContext">封裝使用 <see cref="T:System.Web.Mvc.RequireHttpsAttribute" /> 屬性所需資訊的物件。</param>
      <exception cref="T:System.InvalidOperationException">HTTP 要求包含無效的傳輸方法覆寫。所有 GET 要求都視為無效。</exception>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>判斷要求是否安全 (HTTPS)，如果不安全則呼叫 <see cref="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)" /> 方法。</summary>
      <param name="filterContext">封裝使用 <see cref="T:System.Web.Mvc.RequireHttpsAttribute" /> 屬性所需資訊的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filterContext" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutedContext">
      <summary>提供 <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> 類別之 <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> 方法的內容。</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ResultExecutedContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult,System.Boolean,System.Exception)">
      <summary>初始化 <see cref="T:System.Web.Mvc.ResultExecutedContext" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="result">結果物件。</param>
      <param name="canceled">true 表示要取消執行，否則為 false。</param>
      <param name="exception">例外狀況物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Canceled">
      <summary>取得或設定值，這個值表示此 <see cref="T:System.Web.Mvc.ResultExecutedContext" /> 執行個體是否已取消。</summary>
      <returns>如果執行個體已取消，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Exception">
      <summary>取得或設定例外狀況物件。</summary>
      <returns>例外狀況物件。</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.ExceptionHandled">
      <summary>取得或設定值，這個值表示是否已處理例外狀況。</summary>
      <returns>如果已處理例外狀況，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Result">
      <summary>取得或設定動作結果。</summary>
      <returns>動作結果。</returns>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutingContext">
      <summary>提供 <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> 類別之 <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" /> 方法的內容。</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ResultExecutingContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>使用指定的控制器內容和動作結果，初始化 <see cref="T:System.Web.Mvc.ResultExecutingContext" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="result">動作結果。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Cancel">
      <summary>取得或設定值，這個值表示此 <see cref="T:System.Web.Mvc.ResultExecutingContext" /> 值是否為 "cancel"。</summary>
      <returns>如果值為 "cancel"，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Result">
      <summary>取得或設定動作結果。</summary>
      <returns>動作結果。</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteAreaAttribute">
      <summary>定義一區域，以設定此控制器中定義的所有路由。</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAreaAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.RouteAreaAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAreaAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Web.Mvc.RouteAreaAttribute" /> 類別的新執行個體。</summary>
      <param name="areaName">區域的名稱。若值為 Null，會嘗試推斷目標控制器命名空間的區域名稱。</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAreaAttribute.AreaName">
      <summary>取得區域名稱，以設定此控制器中定義的所有路由。若值為 Null，會嘗試推斷目標控制器命名空間的區域名稱。</summary>
      <returns>設定此控制器中定義的所有路由的區域名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.RouteAreaAttribute.AreaPrefix">
      <summary>取得 URL 前置字元以套用至此區域的路由。此區域名稱的預設值。</summary>
      <returns>套用至此區域的路由 URL 前置字元。</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteAttribute">
      <summary>放置控制器或動作以直接透過路由公開。放置控制器時，會套用至沒有 System.Web.Mvc.RouteAttribute’s 的動作。</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.RouteAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.#ctor(System.String)">
      <summary>利用指定的範本，初始化 <see cref="T:System.Web.Mvc.RouteAttribute" /> 類別的新執行個體。</summary>
      <param name="template">要符合之路由的模式。</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Name">
      <summary>取得或設定路徑的名稱。</summary>
      <returns>路由的名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Order">
      <summary>取得路由的套用順序。</summary>
      <returns>路由的套用順序。</returns>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.System#Web#Mvc#Routing#IDirectRouteFactory#CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>建立直接路由項目。</summary>
      <returns>直接路由項目。</returns>
      <param name="context">用於建立路由的內容。</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Template">
      <summary>取得要符合之路由的模式。</summary>
      <returns>要符合的模式。</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions">
      <summary>提供路由集合屬性的路由擴充方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection)">
      <summary>對應應用程式的屬性定義路徑。</summary>
      <param name="routes">路徑的集合。</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IDirectRouteProvider)">
      <summary>對應應用程式的屬性定義路徑。</summary>
      <param name="directRouteProvider">要用於對應路由的 <see cref="T:System.Web.Mvc.Routing.IDirectRouteProvider" />。</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>對應應用程式的屬性定義路徑。</summary>
      <param name="routes">路徑的集合。</param>
      <param name="constraintResolver">要用來解析路由範本條件約束內的 <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" />。</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver,System.Web.Mvc.Routing.IDirectRouteProvider)">
      <summary>對應應用程式的屬性定義路徑。</summary>
      <param name="constraintResolver">要用來解析路由範本條件約束內的 <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" />。</param>
      <param name="directRouteProvider">要用於對應路由的 <see cref="T:System.Web.Mvc.Routing.IDirectRouteProvider" />。</param>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionExtensions">
      <summary>擴充 MVC 路由的 <see cref="T:System.Web.Routing.RouteCollection" /> 物件。</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>傳回包含路由及虛擬路徑相關資訊的物件，而路由與虛擬路徑是在目前的區域中產生 URL 的結果。</summary>
      <returns>物件，包含路由和虛擬路徑的相關資訊，該路由與虛擬路徑是在目前區域中產生 URL 的結果。</returns>
      <param name="routes">包含應用程式之路由的物件。</param>
      <param name="requestContext">封裝要求路徑相關資訊的物件。</param>
      <param name="name">擷取 URL 路徑相關資訊時使用的路由名稱。</param>
      <param name="values">包含路徑參數的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>傳回包含路由及虛擬路徑相關資訊的物件，而路由與虛擬路徑是在目前的區域中產生 URL 的結果。</summary>
      <returns>物件，包含路由和虛擬路徑的相關資訊，該路由與虛擬路徑是在目前區域中產生 URL 的結果。</returns>
      <param name="routes">包含應用程式之路由的物件。</param>
      <param name="requestContext">封裝要求路徑相關資訊的物件。</param>
      <param name="values">包含路徑參數的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String)">
      <summary>針對指定的可用路由清單，忽略指定的 URL 路由。</summary>
      <param name="routes">應用程式的路由集合。</param>
      <param name="url">要忽略之路由的 URL 模式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 或 <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String,System.Object)">
      <summary>針對指定的可用路由清單和條件約束清單，忽略指定的 URL 路由。</summary>
      <param name="routes">應用程式的路由集合。</param>
      <param name="url">要忽略之路由的 URL 模式。</param>
      <param name="constraints">為 <paramref name="url" /> 參數指定值的一組運算式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 或 <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String)">
      <summary>對應指定的 URL 路徑。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="routes">應用程式的路由集合。</param>
      <param name="name">要對應之路由的名稱。</param>
      <param name="url">路徑的 URL 模式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 或 <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)">
      <summary>對應指定的 URL 路由並設定預設路由值。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="routes">應用程式的路由集合。</param>
      <param name="name">要對應之路由的名稱。</param>
      <param name="url">路徑的 URL 模式。</param>
      <param name="defaults">包含預設路由值的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 或 <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>對應指定的 URL 路由並設定預設路由值和條件約束。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="routes">應用程式的路由集合。</param>
      <param name="name">要對應之路由的名稱。</param>
      <param name="url">路徑的 URL 模式。</param>
      <param name="defaults">包含預設路由值的物件。</param>
      <param name="constraints">為 <paramref name="url" /> 參數指定值的一組運算式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 或 <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>對應指定的 URL 路由並設定預設路由值、條件約束和命名空間。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="routes">應用程式的路由集合。</param>
      <param name="name">要對應之路由的名稱。</param>
      <param name="url">路徑的 URL 模式。</param>
      <param name="defaults">包含預設路由值的物件。</param>
      <param name="constraints">為 <paramref name="url" /> 參數指定值的一組運算式。</param>
      <param name="namespaces">應用程式的命名空間集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 或 <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.String[])">
      <summary>對應指定的 URL 路由並設定預設路由值和命名空間。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="routes">應用程式的路由集合。</param>
      <param name="name">要對應之路由的名稱。</param>
      <param name="url">路徑的 URL 模式。</param>
      <param name="defaults">包含預設路由值的物件。</param>
      <param name="namespaces">應用程式的命名空間集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 或 <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.String[])">
      <summary>對應指定的 URL 路由並設定命名空間。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="routes">應用程式的路由集合。</param>
      <param name="name">要對應之路由的名稱。</param>
      <param name="url">路徑的 URL 模式。</param>
      <param name="namespaces">應用程式的命名空間集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 或 <paramref name="url" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProvider">
      <summary>表示路由資料的值提供者，該路由資料包含在實作 <see cref="T:System.Collections.Generic.IDictionary`2" /> 介面的物件內。</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>初始化 <see cref="T:System.Web.Mvc.RouteDataValueProvider" /> 類別的新執行個體。</summary>
      <param name="controllerContext">包含 HTTP 要求相關資訊的物件。</param>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProviderFactory">
      <summary>表示用以建立路由資料值提供者物件的 Factory。</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.RouteDataValueProviderFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>針對指定的控制器內容傳回值提供者物件。</summary>
      <returns>值提供者物件。</returns>
      <param name="controllerContext">物件，會封裝目前 HTTP 要求之相關資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.RoutePrefixAttribute">
      <summary>以套用到控制器中所有動作的路由前置字元來標註控制器。</summary>
    </member>
    <member name="M:System.Web.Mvc.RoutePrefixAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.RoutePrefixAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.RoutePrefixAttribute.#ctor(System.String)">
      <summary>利用指定的前置詞，初始化 <see cref="T:System.Web.Mvc.RoutePrefixAttribute" /> 類別的新執行個體。</summary>
      <param name="prefix">控制器的路由前置字元。</param>
    </member>
    <member name="P:System.Web.Mvc.RoutePrefixAttribute.Prefix">
      <summary>取得路由前置字元。</summary>
      <returns>路由前置字元。</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectList">
      <summary>表示可讓使用者選取一個項目的清單。</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable)">
      <summary>使用清單的指定項目，初始化 <see cref="T:System.Web.Mvc.SelectList" /> 類別的新執行個體。</summary>
      <param name="items">項目。</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object)">
      <summary>使用清單的指定項目和選取的值，初始化 <see cref="T:System.Web.Mvc.SelectList" /> 類別的新執行個體。</summary>
      <param name="items">項目。</param>
      <param name="selectedValue">選取的值。</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object,System.Collections.IEnumerable)">
      <summary>使用清單的指定項目、已選取的值及已停用的值，來初始化 SelectList 類別的新執行個體。</summary>
      <param name="items">用來建置清單之每一個 <see cref="T:System.Web.Mvc.SelectListItem" /> 的項目。</param>
      <param name="selectedValue">選取的值。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已選取屬性。</param>
      <param name="disabledValues">已停用的值。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已停用屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>使用清單的指定項目、資料值欄位和資料文字欄位，初始化 <see cref="T:System.Web.Mvc.SelectList" /> 類別的新執行個體。</summary>
      <param name="items">項目。</param>
      <param name="dataValueField">資料值欄位。</param>
      <param name="dataTextField">資料文字欄位。</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object)">
      <summary>使用清單的指定項目、資料值欄位、資料文字欄位和選取的值，初始化 <see cref="T:System.Web.Mvc.SelectList" /> 類別的新執行個體。</summary>
      <param name="items">項目。</param>
      <param name="dataValueField">資料值欄位。</param>
      <param name="dataTextField">資料文字欄位。</param>
      <param name="selectedValue">選取的值。</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object,System.Collections.IEnumerable)">
      <summary>使用清單的指定項目、資料值欄位、資料文字欄位、已選取的值及已停用的值，來初始化 SelectList 類別的新執行個體。</summary>
      <param name="items">用來建置清單之每一個 <see cref="T:System.Web.Mvc.SelectListItem" /> 的項目。</param>
      <param name="dataValueField">資料值欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的值屬性。</param>
      <param name="dataTextField">資料文字欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的文字屬性。</param>
      <param name="selectedValue">選取的值。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已選取屬性。</param>
      <param name="disabledValues">已停用的值。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已停用屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object)">
      <summary>使用清單的指定項目、資料值欄位、資料文字欄位、資料群組欄位及已選取的值，來初始化 SelectList 類別的新執行個體。</summary>
      <param name="items">用來建置清單之每一個 <see cref="T:System.Web.Mvc.SelectListItem" /> 的項目。</param>
      <param name="dataValueField">資料值欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的值屬性。</param>
      <param name="dataTextField">資料文字欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的文字屬性。</param>
      <param name="dataGroupField">資料群組欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的群組屬性。</param>
      <param name="selectedValue">選取的值。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已選取屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object,System.Collections.IEnumerable)">
      <summary>使用清單的指定項目、資料值欄位、資料文字欄位、資料群組欄位、已選取的值及已停用的值，來初始化 SelectList 類別的新執行個體。</summary>
      <param name="items">用來建置清單之每一個 <see cref="T:System.Web.Mvc.SelectListItem" /> 的項目。</param>
      <param name="dataValueField">資料值欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的值屬性。</param>
      <param name="dataTextField">資料文字欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的文字屬性。</param>
      <param name="dataGroupField">資料群組欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的群組屬性。</param>
      <param name="selectedValue">選取的值。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已選取屬性。</param>
      <param name="disabledValues">已停用的值。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已停用屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>使用清單的指定項目、資料值欄位、資料文字欄位、資料群組欄位，來初始化 SelectList 類別的新執行個體。已選取的值、已停用的值及已停用的群組。</summary>
      <param name="items">用來建置清單之每一個 <see cref="T:System.Web.Mvc.SelectListItem" /> 的項目。</param>
      <param name="dataValueField">資料值欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的值屬性。</param>
      <param name="dataTextField">資料文字欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的文字屬性。</param>
      <param name="dataGroupField">資料群組欄位。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的群組屬性。</param>
      <param name="selectedValue">選取的值。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已選取屬性。</param>
      <param name="disabledValues">已停用的值。用來符合對應 <see cref="T:System.Web.Mvc.SelectListItem" /> 的已停用屬性。</param>
      <param name="disabledGroups">已停用的群組。用來符合對應 <see cref="T:System.Web.Mvc.SelectListGroup" /> 的已停用屬性。</param>
    </member>
    <member name="P:System.Web.Mvc.SelectList.SelectedValue">
      <summary>取得使用者所選取的清單值。</summary>
      <returns>選取的值。</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectListGroup">
      <summary>表示 optgroup HTML 項目及其屬性。在選取清單中，支援多個具有相同名稱的群組。它們會利用參照等式來進行比較。</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListGroup.#ctor"></member>
    <member name="P:System.Web.Mvc.SelectListGroup.Disabled">
      <summary>取得或設定值，這個值表示此 <see cref="T:System.Web.Mvc.SelectListGroup" /> 是否已停用。</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListGroup.Name">
      <summary>表示 optgroup 標籤的值。</summary>
    </member>
    <member name="T:System.Web.Mvc.SelectListItem">
      <summary>表示在 <see cref="T:System.Web.Mvc.SelectList" /> 類別的執行個體中選取的項目。</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListItem.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.SelectListItem" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Disabled">
      <summary>取得或設定值，這個值表示此 <see cref="T:System.Web.Mvc.SelectListItem" /> 是否已停用。</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Group">
      <summary>表示此項目要包裝至其中的 optgroup HTML 項目。在選取清單中，支援多個具有相同名稱的群組。它們會利用參照等式來進行比較。</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Selected">
      <summary>取得或設定值，這個值表示是否已選取此 <see cref="T:System.Web.Mvc.SelectListItem" />。</summary>
      <returns>如果項目已選取，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Text">
      <summary>取得或設定選取之項目的文字。</summary>
      <returns>文字。</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Value">
      <summary>取得或設定選取之項目的值。</summary>
      <returns>數值。</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateAttribute">
      <summary>指定控制器的工作階段狀態。</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateAttribute.#ctor(System.Web.SessionState.SessionStateBehavior)">
      <summary>初始化 <see cref="T:System.Web.Mvc.SessionStateAttribute" /> 類別的新執行個體</summary>
      <param name="behavior">工作階段狀態的型別。</param>
    </member>
    <member name="P:System.Web.Mvc.SessionStateAttribute.Behavior">
      <summary>取得控制器的工作階段狀態行為。</summary>
      <returns>控制器的工作階段狀態行為。</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateTempDataProvider">
      <summary>將工作階段狀態資料提供給目前的 <see cref="T:System.Web.Mvc.TempDataDictionary" /> 物件。</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.SessionStateTempDataProvider" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>使用指定的控制器內容載入暫存資料。</summary>
      <returns>暫存資料。</returns>
      <param name="controllerContext">控制器內容。</param>
      <exception cref="T:System.InvalidOperationException">擷取工作階段內容時發生錯誤。</exception>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的控制器內容，將指定的值儲存在暫存資料字典中。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="values">值。</param>
      <exception cref="T:System.InvalidOperationException">擷取工作階段內容時發生錯誤。</exception>
    </member>
    <member name="T:System.Web.Mvc.StringLengthAttributeAdapter">
      <summary>提供 <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" /> 屬性的介面卡。</summary>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.StringLengthAttribute)">
      <summary>初始化 <see cref="T:System.Web.Mvc.StringLengthAttributeAdapter" /> 類別的新執行個體。</summary>
      <param name="metadata">模型中繼資料。</param>
      <param name="context">控制器內容。</param>
      <param name="attribute">字串長度屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.GetClientValidationRules">
      <summary>取得字串長度用戶端驗證規則清單。</summary>
      <returns>字串長度用戶端驗證規則清單。</returns>
    </member>
    <member name="T:System.Web.Mvc.TempDataDictionary">
      <summary>表示只會從某個要求保存到下一個要求的一組資料。</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.TempDataDictionary" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Add(System.String,System.Object)">
      <summary>將具有指定索引鍵和值的項目加入至 <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件。</summary>
      <param name="key">要加入的元素的索引鍵。</param>
      <param name="value">要加入的元素值。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件為唯讀。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">具有相同索引鍵的項目已經存在於 <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件中。</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Clear">
      <summary>從 <see cref="T:System.Collections.Generic.ICollection`1" /> 執行個體移除所有項目。</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 物件為唯讀。</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsKey(System.String)">
      <summary>判斷 <see cref="T:System.Collections.Generic.IDictionary`2" /> 執行個體是否包含具有指定索引鍵的項目。</summary>
      <returns>如果 <see cref="T:System.Collections.Generic.IDictionary`2" /> 執行個體包含具有指定之索引鍵的項目，則為 true，否則為 false。</returns>
      <param name="key">要在 <see cref="T:System.Collections.Generic.IDictionary`2" /> 執行個體中尋找的索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsValue(System.Object)">
      <summary>判斷字典是否包含指定的值。</summary>
      <returns>如果字典包含指定的值，則為 true，否則為 false。</returns>
      <param name="value">數值。</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Count">
      <summary>取得 <see cref="T:System.Collections.Generic.ICollection`1" /> 物件中的項目數。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" /> 物件中的項目數目。</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.GetEnumerator">
      <summary>取得列舉程式。</summary>
      <returns>列舉程式。</returns>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Item(System.String)">
      <summary>取得或設定有指定之索引鍵的物件。</summary>
      <returns>具有指定之索引鍵的物件。</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep">
      <summary>將字典中的所有索引鍵都標記為保留。</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep(System.String)">
      <summary>將字典中指定的索引鍵標記為保留。</summary>
      <param name="key">字典中要保留的索引鍵。</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Keys">
      <summary>取得包含 <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件中項目之索引鍵的 <see cref="T:System.Collections.Generic.ICollection`1" /> 物件。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件中項目的索引鍵。</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Load(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>使用指定的資料提供者，載入指定的控制器內容。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="tempDataProvider">暫存資料提供者。</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Peek(System.String)">
      <summary>傳回包含與指定之索引鍵相關聯的項目的物件，而不會將索引鍵標記為待刪除。</summary>
      <returns>物件，包含與指定之索引鍵相關聯的項目。</returns>
      <param name="key">要傳回的項目索引鍵。</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Remove(System.String)">
      <summary>從 <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件移除具有指定索引鍵的項目。</summary>
      <returns>如果成功移除項目，則為 true，否則為 false。如果在 <see cref="T:System.Collections.Generic.IDictionary`2" /> 中找不到 <paramref name="key" />，這個方法也會傳回 false。產生衝突。</returns>
      <param name="key">要移除之項目的索引鍵。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件為唯讀。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Save(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>使用指定的資料提供者，儲存指定的控制器內容。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="tempDataProvider">暫存資料提供者。</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>將指定的索引鍵/值組加入字典中。</summary>
      <param name="keyValuePair">索引鍵/值組。</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>使用預設的相等比較子 (Comparer) 來判斷序列是否包含指定的項目。</summary>
      <returns>如果字典包含指定的索引鍵/值組，則為 true，否則為 false。</returns>
      <param name="keyValuePair">要搜尋的索引鍵/值組。</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>將索引鍵/值組複製到指定之陣列中的指定索引處。</summary>
      <param name="array">目標陣列。</param>
      <param name="index">索引。</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>取得值，這個值表示字典是否為唯讀。</summary>
      <returns>如果字典是唯讀的，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>從字典刪除指定的索引鍵/值組。</summary>
      <returns>如果成功移除索引鍵/值組，則為 true，否則為 false。</returns>
      <param name="keyValuePair">索引鍵/值組。</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回可用來逐一查看集合的列舉程式。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 物件，可用於逐一查看集合。</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>取得具有指定索引鍵之項目的值。</summary>
      <returns>如果實作 <see cref="T:System.Collections.Generic.IDictionary`2" /> 之物件包含具有指定之索引鍵的項目，則為 true，否則為 false。</returns>
      <param name="key">要取得之值的索引鍵。</param>
      <param name="value">這個方法傳回時，如果有找到指定的索引鍵，則為與該索引鍵關聯的值，否則為 <paramref name="value" /> 參數的型別預設值。傳遞此參數時不需設定初始值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Values">
      <summary>取得包含 <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件中之值的 <see cref="T:System.Collections.Generic.ICollection`1" /> 物件。</summary>
      <returns>實作 <see cref="T:System.Collections.Generic.IDictionary`2" /> 之物件中項目的值。</returns>
    </member>
    <member name="T:System.Web.Mvc.TemplateInfo">
      <summary>封裝目前範本內容的相關資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.TemplateInfo" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.FormattedModelValue">
      <summary>取得或設定格式化的模型值。</summary>
      <returns>格式化的模型值。</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldId(System.String)">
      <summary>使用指定的 HTML name 屬性，擷取欄位的完整 DOM ID。</summary>
      <returns>完整 DOM ID。</returns>
      <param name="partialFieldName">HTML name 屬性的值。</param>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldName(System.String)">
      <summary>使用指定的 HTML name 屬性，擷取欄位的完整限定名稱 (包括前置詞)。</summary>
      <returns>欄位的前置名稱。</returns>
      <param name="partialFieldName">HTML name 屬性的值。</param>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.HtmlFieldPrefix">
      <summary>取得或設定 HTML 欄位前置詞。</summary>
      <returns>HTML 欄位前置詞。</returns>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.TemplateDepth">
      <summary>包含使用者已瀏覽的物件數目。</summary>
      <returns>物件數目。</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.Visited(System.Web.Mvc.ModelMetadata)">
      <summary>判斷使用者是否已瀏覽過範本。</summary>
      <returns>如果使用者已瀏覽過範本，則為 true，否則為 false。</returns>
      <param name="metadata">封裝模型相關資訊的物件。</param>
    </member>
    <member name="T:System.Web.Mvc.UrlHelper">
      <summary>包含方法，這些方法可在應用程式內建置 ASP.NET MVC 的 URL。</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.UrlHelper" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext)">
      <summary>使用指定的要求內容來初始化 <see cref="T:System.Web.Mvc.UrlHelper" /> 類別的新執行個體。</summary>
      <param name="requestContext">物件，包含關於目前要求及其相符路徑的資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection)">
      <summary>使用指定的要求內容和路徑集合，初始化 <see cref="T:System.Web.Mvc.UrlHelper" /> 類別的新執行個體。</summary>
      <param name="requestContext">物件，包含關於目前要求及其相符路徑的資訊。</param>
      <param name="routeCollection">路徑的集合。</param>
      <exception cref="ArgumentNullException">
        <paramref name="requestContext" /> 或 <paramref name="routeCollection" /> 參數為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action">
      <summary>產生動作方法的完整 URL 的字串。</summary>
      <returns>動作方法的完整 URL 的字串。</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String)">
      <summary>使用指定的動作名稱，產生動作方法的完整 URL。</summary>
      <returns>動作方法的完整 URL。</returns>
      <param name="actionName">動作方法的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Object)">
      <summary>使用指定的動作名稱和路徑值，產生動作方法的完整 URL。</summary>
      <returns>動作方法的完整 URL。</returns>
      <param name="actionName">動作方法的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String)">
      <summary>使用指定的動作名稱和控制器名稱，產生動作方法的完整 URL。</summary>
      <returns>動作方法的完整 URL。</returns>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object)">
      <summary>使用指定的動作名稱、控制器名稱和路徑值，產生動作方法的完整 URL。</summary>
      <returns>動作方法的完整 URL。</returns>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object,System.String)">
      <summary>使用指定的動作名稱、控制器名稱、路徑值以及要使用的通訊協定，產生動作方法的完整 URL。</summary>
      <returns>動作方法的完整 URL。</returns>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="protocol">URL 的通訊協定，例如 "http" 或 "https"。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>使用指定的動作名稱、控制器名稱和路徑值，產生動作方法的完整 URL。</summary>
      <returns>動作方法的完整 URL。</returns>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String)">
      <summary>使用指定的動作名稱、控制器名稱、路徑值以及要使用的通訊協定，產生動作方法的完整 URL。</summary>
      <returns>動作方法的完整 URL。</returns>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="protocol">URL 的通訊協定，例如 "http" 或 "https"。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>使用指定的動作名稱、控制器名稱、路徑值、要使用的通訊協定以及主機名稱，產生動作方法的完整 URL。</summary>
      <returns>動作方法的完整 URL。</returns>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="protocol">URL 的通訊協定，例如 "http" 或 "https"。</param>
      <param name="hostName">URL 的主機名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>針對指定的動作名稱和路徑值，產生動作方法的完整 URL。</summary>
      <returns>動作方法的完整 URL。</returns>
      <param name="actionName">動作方法的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Content(System.String)">
      <summary>將虛擬 (相對) 路徑轉換成應用程式絕對路徑。</summary>
      <returns>應用程式絕對路徑。</returns>
      <param name="contentPath">內容的虛擬路徑。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Encode(System.String)">
      <summary>將 URL 字串中的特殊字元編碼為對等的字元實體。</summary>
      <returns>編碼的 URL 字串。</returns>
      <param name="url">要編碼的文字。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateContentUrl(System.String,System.Web.HttpContextBase)">
      <summary>傳回包含內容 URL 的字串。</summary>
      <returns>包含內容 URL 的字串。</returns>
      <param name="contentPath">內容路徑。</param>
      <param name="httpContext">HTTP 內容。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>傳回包含 URL 的字串。</summary>
      <returns>包含 URL 的字串。</returns>
      <param name="routeName">路徑名稱。</param>
      <param name="actionName">動作名稱。</param>
      <param name="controllerName">控制器名稱。</param>
      <param name="protocol">HTTP 通訊協定。</param>
      <param name="hostName">主機名稱。</param>
      <param name="fragment">片段。</param>
      <param name="routeValues">路徑值。</param>
      <param name="routeCollection">路徑集合。</param>
      <param name="requestContext">要求內容。</param>
      <param name="includeImplicitMvcValues">true 表示包含隱含 MVC 值，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>傳回包含 URL 的字串。</summary>
      <returns>包含 URL 的字串。</returns>
      <param name="routeName">路徑名稱。</param>
      <param name="actionName">動作名稱。</param>
      <param name="controllerName">控制器名稱。</param>
      <param name="routeValues">路徑值。</param>
      <param name="routeCollection">路徑集合。</param>
      <param name="requestContext">要求內容。</param>
      <param name="includeImplicitMvcValues">true 表示包含隱含 MVC 值，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.HttpRouteUrl(System.String,System.Object)">
      <summary>產生指定之路徑值的完整 URL。</summary>
      <returns>指定之路徑值的完整 URL。</returns>
      <param name="routeName">路徑名稱。</param>
      <param name="routeValues">路徑值。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.HttpRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>產生指定之路徑值的完整 URL。</summary>
      <returns>指定之路徑值的完整 URL。</returns>
      <param name="routeName">路徑名稱。</param>
      <param name="routeValues">路徑值。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.IsLocalUrl(System.String)">
      <summary>傳回值，這個值表示 URL 是否為本機。</summary>
      <returns>如果 URL 為本機，則為 true，否則為 false。</returns>
      <param name="url">URL。</param>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RequestContext">
      <summary>取得符合所定義路徑之 HTTP 要求的相關資訊。</summary>
      <returns>要求內容。</returns>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RouteCollection">
      <summary>取得集合，其中包含為應用程式註冊的路徑。</summary>
      <returns>路徑集合。</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Object)">
      <summary>產生指定之路徑值的完整 URL。</summary>
      <returns>完整的 URL。</returns>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String)">
      <summary>產生指定之路徑名稱的完整 URL。</summary>
      <returns>完整的 URL。</returns>
      <param name="routeName">用來產生 URL 之路徑的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object)">
      <summary>使用路徑名稱，產生指定之路徑值的完整 URL。</summary>
      <returns>完整的 URL。</returns>
      <param name="routeName">用來產生 URL 之路徑的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object,System.String)">
      <summary>使用路徑名稱以及要使用的通訊協定，產生指定之路徑值的完整 URL。</summary>
      <returns>完整的 URL。</returns>
      <param name="routeName">用來產生 URL 之路徑的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="protocol">URL 的通訊協定，例如 "http" 或 "https"。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>使用路徑名稱，產生指定之路徑值的完整 URL。</summary>
      <returns>完整的 URL。</returns>
      <param name="routeName">用來產生 URL 之路徑的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>使用指定的路徑名稱、要使用的通訊協定以及主機名稱，產生指定之路徑值的完整 URL。</summary>
      <returns>完整的 URL。</returns>
      <param name="routeName">用來產生 URL 之路徑的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="protocol">URL 的通訊協定，例如 "http" 或 "https"。</param>
      <param name="hostName">URL 的主機名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Web.Routing.RouteValueDictionary)">
      <summary>產生指定之路徑值的完整 URL。</summary>
      <returns>完整的 URL。</returns>
      <param name="routeValues">包含路徑參數的物件。</param>
    </member>
    <member name="T:System.Web.Mvc.UrlParameter">
      <summary>表示 <see cref="T:System.Web.Mvc.MvcHandler" /> 類別在路由期間使用的選擇性參數。</summary>
    </member>
    <member name="F:System.Web.Mvc.UrlParameter.Optional">
      <summary>包含選擇性參數的唯讀值。</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlParameter.ToString">
      <summary>傳回空字串。這個方法支援 ASP.NET MVC 基礎結構，但不建議直接在程式碼中使用。</summary>
      <returns>空字串。</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidatableObjectAdapter">
      <summary>提供可接受驗證的物件配接器。</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>初始化 <see cref="T:System.Web.Mvc.ValidatableObjectAdapter" /> 類別的新執行個體。</summary>
      <param name="metadata">模型中繼資料。</param>
      <param name="context">控制器內容。</param>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.Validate(System.Object)">
      <summary>驗證指定的物件。</summary>
      <returns>驗證結果的清單。</returns>
      <param name="container">容器。</param>
    </member>
    <member name="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute">
      <summary>表示用於防範偽造要求的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>在需要授權時呼叫。</summary>
      <param name="filterContext">篩選內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filterContext" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.Salt">
      <summary>取得或設定 salt 字串。</summary>
      <returns>salt 字串。</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidateInputAttribute">
      <summary>表示用來標示必須驗證其輸入之動作方法的屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:System.Web.Mvc.ValidateInputAttribute" /> 類別的新執行個體。</summary>
      <param name="enableValidation">true 表示要啟用驗證。</param>
    </member>
    <member name="P:System.Web.Mvc.ValidateInputAttribute.EnableValidation">
      <summary>取得或設定值，這個值表示是否要啟用驗證。</summary>
      <returns>如果啟用驗證，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>在需要授權時呼叫。</summary>
      <param name="filterContext">篩選內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filterContext" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderCollection">
      <summary>表示應用程式之值提供者物件的集合。</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ValueProviderCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IValueProvider})">
      <summary>初始化 <see cref="T:System.Web.Mvc.ValueProviderCollection" /> 類別的新執行個體，並註冊指定的值提供者。</summary>
      <param name="list">要註冊的值提供者清單。</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.ContainsPrefix(System.String)">
      <summary>判斷集合是否包含指定的前置詞。</summary>
      <returns>如果此集合包含指定的前置詞，則為 true，否則為 false。</returns>
      <param name="prefix">要搜尋的前置字元。</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetKeysFromPrefix(System.String)">
      <summary>使用指定的前置詞取得索引鍵。</summary>
      <returns>索引鍵。</returns>
      <param name="prefix">前置字元。</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String)">
      <summary>使用指定的索引鍵傳回值物件。</summary>
      <returns>指定之索引鍵的值物件。</returns>
      <param name="key">要擷取之值物件的索引鍵。</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String,System.Boolean)">
      <summary>使用指定的索引鍵和略過驗證參數，傳回值物件。</summary>
      <returns>指定之索引鍵的值物件。</returns>
      <param name="key">要擷取之值物件的索引鍵。</param>
      <param name="skipValidation">true 表示指定應該略過驗證，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>將指定的值提供者物件插入位於指定索引位置的集合。</summary>
      <param name="index">以零起始的索引位置，在此處將值提供者插入至集合中。</param>
      <param name="item">要插入的值提供者物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.SetItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>以新的值提供者取代位於指定索引位置處的值提供者。</summary>
      <param name="index">要取代的項目之以零起始的索引。</param>
      <param name="item">指定之索引處的項目新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderDictionary">
      <summary>注意事項：這個 API 現在已經過時。表示應用程式之值提供者的字典。</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>初始化 <see cref="T:System.Web.Mvc.ValueProviderDictionary" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>將指定的項目加入至值提供者的集合。</summary>
      <param name="item">要加入至 <see cref="T:System.Collections.Generic.ICollection`1" /> 物件中的物件。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 物件為唯讀。</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Object)">
      <summary>將具有指定索引鍵和值的項目加入至值提供者的集合。</summary>
      <param name="key">要加入的元素的索引鍵。</param>
      <param name="value">要加入的元素值。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件為唯讀。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">具有指定索引鍵的項目已經存在於 <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件中。</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>將具有指定索引鍵和值的項目加入至值提供者的集合。</summary>
      <param name="key">要加入的元素的索引鍵。</param>
      <param name="value">要加入的元素值。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件為唯讀。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">具有指定索引鍵的項目已經存在於 <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件中。</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Clear">
      <summary>從值提供者的集合移除所有項目。</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 物件為唯讀。</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>判斷值提供者的集合是否包含指定的項目。</summary>
      <returns>如果在值提供者的集合中找到 <paramref name="item" />，則為 true，否則為 false。</returns>
      <param name="item">要在 <see cref="T:System.Collections.Generic.ICollection`1" /> 執行個體中尋找的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.ContainsKey(System.String)">
      <summary>判斷值提供者的集合是否包含具有指定索引鍵的項目。</summary>
      <returns>如果值提供者的集合包含具有索引鍵的項目，則為 true，否則為 false。</returns>
      <param name="key">要在 <see cref="T:System.Collections.Generic.IDictionary`2" /> 執行個體中尋找之項目的索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.ControllerContext">
      <summary>取得或設定控制器內容。</summary>
      <returns>控制器內容。</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult}[],System.Int32)">
      <summary>將集合的項目複製至以指定的索引為起始點的陣列。</summary>
      <param name="array">一維陣列，是從 <see cref="T:System.Collections.Generic.ICollection`1" /> 物件所複製的項目之目的端。陣列必須有以零起始的索引。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 中以零起始的索引，位於複製開始的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> 小於 0。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 為多維。-或-<paramref name="arrayIndex" /> 等於或大於 <paramref name="array" /> 的長度。-或-來源集合中的項目數大於從 <paramref name="arrayIndex" /> 到目的 <paramref name="array" /> 末端的可用空間。-或-型別 <paramref name="T" /> 不能自動轉換為目的陣列的型別。</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Count">
      <summary>取得集合中的元素數目。</summary>
      <returns>集合中的元素數目。</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.GetEnumerator">
      <summary>傳回可用來逐一查看集合的列舉程式。</summary>
      <returns>可用來逐一查看集合的列舉程式。</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.IsReadOnly">
      <summary>取得值，這個值表示集合是否為唯讀。</summary>
      <returns>如果集合是唯讀的，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Item(System.String)">
      <summary>取得或設定有指定之索引鍵的 <see cref="T:System.Web.Mvc.ValueProviderResult" /> 物件。</summary>
      <returns>
        <see cref="T:System.Web.Mvc.ValueProviderResult" /> 物件。</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Keys">
      <summary>取得包含 <see cref="T:System.Collections.Generic.IDictionary`2" /> 執行個體之索引鍵的集合。</summary>
      <returns>集合，其中包含實作 <see cref="T:System.Collections.Generic.IDictionary`2" /> 介面之物件的索引鍵。</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>從值提供者的集合移除指定之項目的第一個符合項目。</summary>
      <returns>如果已成功從集合中移除 <paramref name="item" />，則為 true，否則為 false。如果在集合中找不到 <paramref name="item" />，這個方法也會傳回 false。</returns>
      <param name="item">要從 <see cref="T:System.Collections.Generic.ICollection`1" /> 執行個體中移除的物件。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 物件為唯讀。</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.String)">
      <summary>從值提供者的集合中移除具有指定索引鍵的項目。</summary>
      <returns>如果成功移除項目，則為 true，否則為 false。如果在集合中找不到 <paramref name="key" />，這個方法也會傳回 false。</returns>
      <param name="key">要移除之項目的索引鍵。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件為唯讀。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回可用來逐一查看集合的列舉程式。</summary>
      <returns>可用來逐一查看集合的列舉程式。</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>判斷集合是否包含指定的前置詞。</summary>
      <returns>如果此集合包含指定的前置詞，則為 true，否則為 false。</returns>
      <param name="prefix">要搜尋的前置字元。</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>使用指定的索引鍵傳回值物件。</summary>
      <returns>指定之索引鍵的值物件。</returns>
      <param name="key">要傳回之值物件的索引鍵。</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.TryGetValue(System.String,System.Web.Mvc.ValueProviderResult@)">
      <summary>取得具有指定索引鍵之項目的值。</summary>
      <returns>如果實作 <see cref="T:System.Collections.Generic.IDictionary`2" /> 之物件包含具有指定之索引鍵的項目，則為 true，否則為 false。</returns>
      <param name="key">要取得的元素索引鍵。</param>
      <param name="value">這個方法傳回時，如果有找到指定的索引鍵，則為與該索引鍵關聯的值，否則為 <paramref name="value" /> 參數的型別預設值。傳遞此參數時不需設定初始值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Values">
      <summary>取得集合，其中包含 <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件中的值。</summary>
      <returns>實作 <see cref="T:System.Collections.Generic.IDictionary`2" /> 介面之物件中的值集合。</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactories">
      <summary>表示值提供者 Factory 物件的容器。</summary>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderFactories.Factories">
      <summary>取得應用程式之值提供者 Factory 的集合。</summary>
      <returns>值提供者 Factory 物件的集合。</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactory">
      <summary>表示用以建立值提供者物件的 Factory。</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ValueProviderFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>針對指定的控制器內容傳回值提供者物件。</summary>
      <returns>值提供者物件。</returns>
      <param name="controllerContext">物件，會封裝目前 HTTP 要求之相關資訊。</param>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactoryCollection">
      <summary>表示應用程式之值提供者 Factory 的集合。</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ValueProviderFactory})">
      <summary>使用指定的值提供者 Factory 清單，初始化 <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" /> 類別的新執行個體。</summary>
      <param name="list">要用來初始化集合的值提供者 Factory 清單。</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.ClearItems">
      <summary>從集合移除所有元素。</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>針對指定的控制器內容傳回值提供者 Factory。</summary>
      <returns>指定之控制器內容的值提供者 Factory 物件。</returns>
      <param name="controllerContext">物件，會封裝目前 HTTP 要求之相關資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.InsertItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>將指定的值提供者 Factory 物件插入指定的索引位置。</summary>
      <param name="index">以零起始的索引位置，在此處將值提供者插入至集合中。</param>
      <param name="item">要插入的值提供者 Factory 物件。</param>
      <exception cref="[ArgumentNullException]">
        <paramref name="item" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.RemoveItem(System.Int32)">
      <summary>移除 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的指定索引處的項目。</summary>
      <param name="index">要移除的項目之以零起始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="Index" /> 小於零。-或-<paramref name="Index" /> 等於或大於<see cref="T:System.Collections.ObjectModel.Collection`1.Count" /></exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.SetItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>在指定的索引位置設定指定的值提供者 Factory 物件。</summary>
      <param name="index">以零起始的索引位置，在此處將值提供者插入至集合中。</param>
      <param name="item">要設定的值提供者 Factory 物件。</param>
      <exception cref="[ArgumentNullException]">
        <paramref name="item" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderResult">
      <summary>表示將值 (例如從表單張貼或查詢字串) 繫結至動作方法引數屬性或繫結至引數本身的結果。</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ValueProviderResult" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>使用指定之未經處理的值、已嘗試的值以及文化特性資訊，初始化 <see cref="T:System.Web.Mvc.ValueProviderResult" /> 類別的新執行個體。</summary>
      <param name="rawValue">未經處理的值。</param>
      <param name="attemptedValue">已嘗試的值。</param>
      <param name="culture">文化特性。</param>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.AttemptedValue">
      <summary>取得或設定轉換為顯示字串之未經處理的值。</summary>
      <returns>未經處理的值。</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type)">
      <summary>將此結果封裝的值轉換為指定的型別。</summary>
      <returns>轉換的值。</returns>
      <param name="type">目標型別。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>使用指定的文化特性資訊，將此結果封裝的值轉換為指定的型別。</summary>
      <returns>轉換的值。</returns>
      <param name="type">目標型別。</param>
      <param name="culture">用於轉換中的文化特性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.Culture">
      <summary>取得或設定文化特性。</summary>
      <returns>文化特性。</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.RawValue">
      <summary>取得或設定值提供者所提供之未經處理的值。</summary>
      <returns>未經處理的值。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewContext">
      <summary>封裝呈現檢視的相關資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView,System.Web.Mvc.ViewDataDictionary,System.Web.Mvc.TempDataDictionary,System.IO.TextWriter)">
      <summary>使用指定的控制器內容、檢視、檢視資料字典、暫存資料字典和文字寫入器，初始化 <see cref="T:System.Web.Mvc.ViewContext" /> 類別的新執行個體。</summary>
      <param name="controllerContext">封裝關於 HTTP 要求的資訊。</param>
      <param name="view">要呈現的檢視。</param>
      <param name="viewData">字典，包含呈現檢視所需的資料。</param>
      <param name="tempData">包含檢視暫存資料的字典。</param>
      <param name="writer">用來寫入 HTML 輸出的文字寫入器物件。</param>
      <exception cref="T:System.ArgumentNullException">其中一個參數為 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ClientValidationEnabled">
      <summary>取得或設定一個值，這個值表示用戶端驗證是否啟用。</summary>
      <returns>如果啟用用戶端驗證，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.FormContext">
      <summary>取得或設定物件，這個物件封裝資訊，在驗證和處理 HTML 表單的輸入資料時需要此資訊。</summary>
      <returns>封裝驗證和處理 HTML 表單的輸入資料時所需資訊之物件。</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.OutputClientValidation">
      <summary>將用戶端驗證資訊寫入至 HTTP 回應。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.TempData">
      <summary>取得與這個要求相關聯而且只能用於一個要求的資料。</summary>
      <returns>暫存資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.UnobtrusiveJavaScriptEnabled">
      <summary>取得或設定值，這個值表示不顯眼的 JavaScript 是否啟用。</summary>
      <returns>如果啟用不顯眼的 JavaScript，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ValidationMessageElement">
      <summary>用來包裝 <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" /> 所產生之頂層訊息以及其他多載的項目名稱。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ValidationSummaryMessageElement">
      <summary>用來包裝 <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" /> 所產生之頂層訊息以及其他多載的項目名稱。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.View">
      <summary>取得會實作 <see cref="T:System.Web.Mvc.IView" /> 介面以在瀏覽器中呈現的物件。</summary>
      <returns>檢視。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewBag">
      <summary>取得動態檢視資料字典。</summary>
      <returns>動態檢視資料字典。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewData">
      <summary>取得傳遞至檢視的檢視資料。</summary>
      <returns>檢視資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.Writer">
      <summary>取得或設定用來寫入 HTML 輸出的文字寫入器物件。</summary>
      <returns>用來寫入 HTML 輸出的物件。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary">
      <summary>表示用來在控制器和檢視之間傳遞資料的容器。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Object)">
      <summary>使用指定的模型來初始化 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 類別的新執行個體。</summary>
      <param name="model">模型。</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>使用指定的字典，初始化 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 類別的新執行個體。</summary>
      <param name="dictionary">字典。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>將指定的項目加入至集合。</summary>
      <param name="item">要加入集合中的物件。</param>
      <exception cref="T:System.NotSupportedException">集合是唯讀的。</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.String,System.Object)">
      <summary>使用指定的索引鍵和值，將項目加入至集合。</summary>
      <param name="key">要加入的元素的索引鍵。</param>
      <param name="value">要加入的元素值。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件為唯讀。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">具有相同索引鍵的項目已經存在於 <see cref="T:System.Collections.Generic.IDictionary`2" /> 物件中。</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Clear">
      <summary>從集合移除所有項目。</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 物件為唯讀。</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>判斷集合是否包含指定的項目。</summary>
      <returns>如果在集合中找到 <paramref name="item" />，則為 true，否則為 false。</returns>
      <param name="item">要放置在集合中的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.ContainsKey(System.String)">
      <summary>判斷集合是否包含具有指定索引鍵的項目。</summary>
      <returns>如果集合中包含有指定之索引鍵的項目，則為 true，否則為 false。</returns>
      <param name="key">要在集合中尋找之項目的索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>從特定的索引開始，將集合的項目複製到陣列中。</summary>
      <param name="array">從集合複製項目之目的端一維陣列。陣列必須有以零起始的索引。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 中以零起始的索引，是複製開始的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> 小於 0。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 為多維。-或-<paramref name="arrayIndex" /> 等於或大於 <paramref name="array" /> 的長度。-或-來源集合中的項目數大於從 <paramref name="arrayIndex" /> 到目的 <paramref name="array" /> 末端的可用空間。-或-型別 <paramref name="T" /> 不能自動轉換為目的 <paramref name="array" /> 的型別。</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Count">
      <summary>取得集合中的元素數目。</summary>
      <returns>集合中的元素數目。</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String)">
      <summary>評估指定的運算式。</summary>
      <returns>評估的結果。</returns>
      <param name="expression">運算式。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="expression" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String,System.String)">
      <summary>使用指定的格式，評估指定的運算式。</summary>
      <returns>評估的結果。</returns>
      <param name="expression">運算式。</param>
      <param name="format">格式。</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetEnumerator">
      <summary>傳回可用來逐一查看集合的列舉程式。</summary>
      <returns>可用來逐一查看集合的列舉程式。</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetViewDataInfo(System.String)">
      <summary>傳回 <paramref name="expression" /> 參數所定義之檢視資料的相關資訊。</summary>
      <returns>物件，包含 <paramref name="expression" /> 參數所定義的檢視資料資訊。</returns>
      <param name="expression">定義要傳回之檢視資料資訊的索引鍵/值組集。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="expression" /> 參數為 null 或空白。</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.IsReadOnly">
      <summary>取得值，這個值表示集合是否為唯讀。</summary>
      <returns>如果集合是唯讀的，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Item(System.String)">
      <summary>取得或設定與指定之索引鍵相關聯的項目。</summary>
      <returns>選取之項目的值。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Keys">
      <summary>取得包含此字典的索引鍵之集合。</summary>
      <returns>集合，其中包含實作 <see cref="T:System.Collections.Generic.IDictionary`2" /> 之物件的索引鍵。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Model">
      <summary>取得或設定與檢視資料相關聯的模型。</summary>
      <returns>與檢視資料相關聯的模型。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelMetadata">
      <summary>取得或設定模型的相關資訊。</summary>
      <returns>模型的相關資訊。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelState">
      <summary>取得模型的狀態。</summary>
      <returns>模型的狀態。</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>從集合中移除指定物件的第一個符合項目。</summary>
      <returns>如果已成功從集合中移除 <paramref name="item" />，則為 true，否則為 false。如果在集合中找不到 <paramref name="item" />，這個方法也會傳回 false。</returns>
      <param name="item">要從集合移除的物件。</param>
      <exception cref="T:System.NotSupportedException">集合是唯讀的。</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.String)">
      <summary>使用指定索引鍵從集合中移除項目。</summary>
      <returns>如果成功移除項目，則為 true，否則為 false。如果在原始的集合中找不到 <paramref name="key" />，則這個方法也會傳回 false。</returns>
      <param name="key">要移除之項目的索引鍵。</param>
      <exception cref="T:System.NotSupportedException">集合是唯讀的。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.SetModel(System.Object)">
      <summary>設定要用於檢視的資料模型。</summary>
      <param name="value">用於檢視的資料模型。</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回可用來逐一查看集合的列舉程式。</summary>
      <returns>可用來逐一查看集合的列舉程式。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.TemplateInfo">
      <summary>取得或設定物件，這個物件封裝目前範本內容的相關資訊。</summary>
      <returns>物件，包含目前範本的相關資訊。</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>嘗試擷取與指定之索引鍵相關聯的值。</summary>
      <returns>如果集合包含具有指定之索引鍵的項目，則為 true，否則為 false。</returns>
      <param name="key">要取得之值的索引鍵。</param>
      <param name="value">這個方法傳回時，如果有找到指定的索引鍵，則為與該索引鍵關聯的值，否則為 <paramref name="value" /> 參數的型別預設值。傳遞此參數時不需設定初始值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Values">
      <summary>取得包含此字典中的值之集合。</summary>
      <returns>集合，其中包含實作 <see cref="T:System.Collections.Generic.IDictionary`2" /> 之物件的值。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary`1">
      <summary>表示用來在控制器和檢視之間傳遞強型別資料的容器。</summary>
      <typeparam name="TModel">模型的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>使用指定的檢視資料字典，初始化 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 類別的新執行個體。</summary>
      <param name="viewDataDictionary">要複製到這個執行個體的現有檢視資料字典。</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(`0)">
      <summary>使用指定的模型來初始化 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 類別的新執行個體。</summary>
      <param name="model">用於檢視的資料模型。</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.Model">
      <summary>取得或設定模型。</summary>
      <returns>資料模型的參考。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.ModelMetadata">
      <summary>取得或設定模型的相關資訊。</summary>
      <returns>模型的相關資訊。</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.SetModel(System.Object)">
      <summary>設定要用於檢視的資料模型。</summary>
      <param name="value">用於檢視的資料模型。</param>
      <exception cref="T:System.InvalidOperationException">設定模型時發生錯誤。</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewDataInfo">
      <summary>封裝用於開發範本之目前範本內容的相關資訊，以及與範本互動之 HTML Helper 的相關資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewDataInfo" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor(System.Func{System.Object})">
      <summary>初始化 T:System.Web.Mvc.ViewDataInfo 類別的新執行個體，並關聯委派以存取檢視資料資訊。</summary>
      <param name="valueAccessor">定義如何存取檢視資料資訊的委派。</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Container">
      <summary>取得或設定物件，這個物件包含要由範本顯示的值。</summary>
      <returns>物件，包含要由範本顯示的值。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.PropertyDescriptor">
      <summary>取得或設定要由範本顯示之屬性的描述。</summary>
      <returns>要由範本顯示之屬性的描述。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Value">
      <summary>取得或設定要由範本顯示的目前值。</summary>
      <returns>要由範本顯示的目前值。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineCollection">
      <summary>表示應用程式可用的檢視引擎集合。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewEngineCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IViewEngine})">
      <summary>使用指定的檢視引擎清單，初始化 <see cref="T:System.Web.Mvc.ViewEngineCollection" /> 類別的新執行個體。</summary>
      <param name="list">由新的集合所包裝的清單。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> 為 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.ClearItems">
      <summary>從 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 移除所有元素。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindPartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>使用指定的控制器內容，尋找指定的部分檢視。</summary>
      <returns>部分檢視。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="partialViewName">部分檢視的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partialViewName" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>使用指定的控制器內容和主版檢視，尋找指定的檢視。</summary>
      <returns>檢視。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="viewName">檢視的名稱。</param>
      <param name="masterName">主版檢視的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partialViewName" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.InsertItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>將元素插入至集合中的指定索引處。</summary>
      <param name="index">應該插入 item 之以零起始的索引。</param>
      <param name="item">要插入的物件。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。-或-<paramref name="index" /> 大於集合中的項目數。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.RemoveItem(System.Int32)">
      <summary>移除 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的指定索引處的項目。</summary>
      <param name="index">要移除的項目之以零起始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。-或-<paramref name="index" /> 等於或大於<see cref="T:System.Collections.ObjectModel.Collection`1.Count" /></exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.SetItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>取代指定之索引處的項目。</summary>
      <param name="index">要取代的項目之以零起始的索引。</param>
      <param name="item">指定之索引處的項目新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。-或-<paramref name="index" /> 大於集合中的項目數。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineResult">
      <summary>表示尋找檢視引擎的結果。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>使用指定搜尋位置，初始化 <see cref="T:System.Web.Mvc.ViewEngineResult" /> 類別的新執行個體。</summary>
      <param name="searchedLocations">已搜尋的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchedLocations" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Web.Mvc.IView,System.Web.Mvc.IViewEngine)">
      <summary>使用指定的檢視和檢視引擎，初始化 <see cref="T:System.Web.Mvc.ViewEngineResult" /> 類別的新執行個體。</summary>
      <param name="view">檢視。</param>
      <param name="viewEngine">檢視引擎。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="view " /> 或 <paramref name="viewEngine" /> 參數是 null。</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.SearchedLocations">
      <summary>取得或設定已搜尋的位置。</summary>
      <returns>已搜尋的位置。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.View">
      <summary>取得或設定檢視。</summary>
      <returns>檢視。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.ViewEngine">
      <summary>取得或設定檢視引擎。</summary>
      <returns>檢視引擎。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngines">
      <summary>表示應用程式可用的檢視引擎集合。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewEngines.Engines">
      <summary>取得檢視引擎。</summary>
      <returns>檢視引擎。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage">
      <summary>表示建置主版檢視頁面所需的資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewMasterPage" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Ajax">
      <summary>取得主版頁面的 AJAX 指令碼。</summary>
      <returns>主版頁面的 AJAX 指令碼。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Html">
      <summary>取得主版頁面的 HTML。</summary>
      <returns>主版頁面的 HTML。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Model">
      <summary>取得模型。</summary>
      <returns>模型。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.TempData">
      <summary>取得暫存資料。</summary>
      <returns>暫存資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Url">
      <summary>取得 URL。</summary>
      <returns>URL。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewBag">
      <summary>取得動態檢視包字典。</summary>
      <returns>動態檢視包字典。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewContext">
      <summary>取得檢視內容。</summary>
      <returns>檢視內容。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewData">
      <summary>取得檢視資料。</summary>
      <returns>檢視資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Writer">
      <summary>取得用來呈現主版頁面的寫入器。</summary>
      <returns>用來呈現主版頁面的寫入器。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage`1">
      <summary>表示建置強型別主版檢視頁面所需的資訊。</summary>
      <typeparam name="TModel">模型的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage`1.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewMasterPage`1" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Ajax">
      <summary>取得主版頁面的 AJAX 指令碼。</summary>
      <returns>主版頁面的 AJAX 指令碼。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Html">
      <summary>取得主版頁面的 HTML。</summary>
      <returns>主版頁面的 HTML。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Model">
      <summary>取得模型。</summary>
      <returns>資料模型的參考。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.ViewData">
      <summary>取得檢視資料。</summary>
      <returns>檢視資料。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage">
      <summary>表示將檢視呈現為 Web Form 網頁所需的屬性和方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewPage" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Ajax">
      <summary>取得或設定 <see cref="T:System.Web.Mvc.AjaxHelper" /> 物件，這個物件用於在 Ajax 案例中呈現 HTML。</summary>
      <returns>與檢視相關聯的 Ajax Helper 物件。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Html">
      <summary>取得或設定 <see cref="T:System.Web.Mvc.HtmlHelper" /> 物件，這個物件用於呈現 HTML 項目。</summary>
      <returns>與檢視相關聯的 HTML Helper 物件。</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.InitHelpers">
      <summary>初始化 <see cref="P:System.Web.Mvc.ViewPage.Ajax" />、<see cref="P:System.Web.Mvc.ViewPage.Html" /> 和 <see cref="P:System.Web.Mvc.ViewPage.Url" /> 屬性。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.MasterLocation">
      <summary>取得或設定主版檢視的路徑。</summary>
      <returns>主版檢視的路徑。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Model">
      <summary>取得關聯 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件的 Model 屬性。</summary>
      <returns>關聯 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件的 Model 屬性。</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.OnPreInit(System.EventArgs)">
      <summary>在頁面初始化的開始處引發 <see cref="E:System.Web.UI.Page.PreInit" /> 事件。</summary>
      <param name="e">事件資料。</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.ProcessRequest(System.Web.HttpContext)">
      <summary>讓 ASP.NET MVC Framework 可以處理指定的 HTTP 要求。</summary>
      <param name="context">物件，會封裝目前 HTTP 要求的 HTTP 特定資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.Render(System.Web.UI.HtmlTextWriter)">
      <summary>初始化 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件，這個物件接收要呈現的網頁內容。</summary>
      <param name="writer">接收網頁內容的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.RenderView(System.Web.Mvc.ViewContext)">
      <summary>使用指定的檢視內容，將檢視網頁呈現至回應。</summary>
      <param name="viewContext">封裝呈現檢視所需資訊的物件，包括關聯檢視的控制器內容、表單內容、暫存資料和檢視資料。</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetTextWriter(System.IO.TextWriter)">
      <summary>注意事項：這個 API 現在已經過時。設定用於將檢視呈現至回應的文字寫入器。</summary>
      <param name="textWriter">用來將檢視呈現至回應的寫入器。</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>設定關聯檢視的檢視資料字典。</summary>
      <param name="viewData">要傳遞至檢視的資料字典。</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.TempData">
      <summary>取得要傳遞至檢視的暫存資料。</summary>
      <returns>要傳遞至檢視的暫存資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Url">
      <summary>取得或設定呈現之網頁的 URL。</summary>
      <returns>呈現之網頁的 URL。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewBag">
      <summary>取得檢視包。</summary>
      <returns>檢視包。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewContext">
      <summary>取得或設定用來呈現檢視的資訊。</summary>
      <returns>用於呈現檢視的資訊，包括關聯檢視的表單內容、暫存資料和檢視資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewData">
      <summary>取得或設定字典，這個字典包含要在控制器和檢視之間傳遞的資料。</summary>
      <returns>字典，包含要在控制器和檢視之間傳遞的資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Writer">
      <summary>取得用於將檢視呈現至回應的文字寫入器。</summary>
      <returns>用於將檢視呈現至回應的文字寫入器。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage`1">
      <summary>表示將強型別檢視呈現為 Web Form 網頁所需的資訊。</summary>
      <typeparam name="TModel">模型的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewPage`1" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Ajax">
      <summary>取得或設定支援在 Ajax 情節中呈現 HTML 的 <see cref="T:System.Web.Mvc.AjaxHelper`1" /> 物件。</summary>
      <returns>與檢視相關聯的 Ajax Helper 物件。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Html">
      <summary>取得或設定提供呈現項目支援的 <see cref="T:System.Web.Mvc.HtmlHelper" /> 物件。</summary>
      <returns>與檢視相關聯的 HTML Helper 物件。</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.InitHelpers">
      <summary>執行個體化並初始化 <see cref="P:System.Web.Mvc.ViewPage`1.Ajax" /> 和 <see cref="P:System.Web.Mvc.ViewPage`1.Html" /> 屬性。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Model">
      <summary>取得關聯 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 物件的 <see cref="P:System.Web.Mvc.ViewDataDictionary`1.Model" /> 屬性。</summary>
      <returns>資料模型的參考。</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>設定關聯檢視的檢視資料字典。</summary>
      <param name="viewData">要傳遞至檢視的資料字典。</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.ViewData">
      <summary>取得或設定字典，這個字典包含要在控制器和檢視之間傳遞的資料。</summary>
      <returns>字典，包含要在控制器和檢視之間傳遞的資料。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResult">
      <summary>表示類別，用於利用 <see cref="T:System.Web.Mvc.IViewEngine" /> 物件傳回的 <see cref="T:System.Web.Mvc.IView" /> 執行個體來呈現檢視。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewResult" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>搜尋已註冊的檢視引擎，並傳回用來呈現檢視的物件。</summary>
      <returns>用來呈現檢視的物件。</returns>
      <param name="context">控制器內容。</param>
      <exception cref="T:System.InvalidOperationException">方法在搜尋檢視時發生錯誤。</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewResult.MasterName">
      <summary>取得呈現檢視時所使用之主版檢視 (例如主版頁面或範本) 的名稱。</summary>
      <returns>主版檢視的名稱。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResultBase">
      <summary>表示用來提供模型給檢視然後再將檢視呈現至回應的基底類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewResultBase" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>當由動作啟動程式呼叫時，將檢視呈現至回應。</summary>
      <param name="context">執行結果所在的內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.FindView(System.Web.Mvc.ControllerContext)">
      <summary>傳回用來呈現檢視的 <see cref="T:System.Web.Mvc.ViewEngineResult" /> 物件。</summary>
      <returns>檢視引擎。</returns>
      <param name="context">內容。</param>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.Model">
      <summary>取得檢視資料模型。</summary>
      <returns>檢視資料模型。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.TempData">
      <summary>取得或設定這個結果的 <see cref="T:System.Web.Mvc.TempDataDictionary" /> 物件。</summary>
      <returns>暫存資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.View">
      <summary>取得或設定呈現至回應的 <see cref="T:System.Web.Mvc.IView" /> 物件。</summary>
      <returns>檢視。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewBag">
      <summary>取得檢視包。</summary>
      <returns>檢視包。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewData">
      <summary>取得或設定這個結果的檢視資料 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件。</summary>
      <returns>檢視資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewEngineCollection">
      <summary>取得或設定與這個結果相關聯的檢視引擎集合。</summary>
      <returns>檢視引擎的集合。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewName">
      <summary>取得或設定要呈現的檢視名稱。</summary>
      <returns>檢視的名稱。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewStartPage">
      <summary>提供可用來實作檢視起始 (主版) 頁面的抽象類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewStartPage.#ctor">
      <summary>在衍生類別中實作時，初始化 <see cref="T:System.Web.Mvc.ViewStartPage" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Html">
      <summary>在衍生類別中實作時，取得檢視起始頁的 HTML 標記。</summary>
      <returns>檢視起始頁的 HTML 標記。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Url">
      <summary>在衍生類別中實作時，取得檢視起始頁的 URL。</summary>
      <returns>檢視起始頁的 URL。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.ViewContext">
      <summary>在衍生類別中實作時，取得檢視起始頁的檢視內容。</summary>
      <returns>檢視起始頁的檢視內容。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl">
      <summary>提供 <see cref="T:System.Web.Mvc.TemplateInfo" /> 物件的容器。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewTemplateUserControl" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl`1">
      <summary>提供 <see cref="T:System.Web.Mvc.TemplateInfo" /> 物件的容器。</summary>
      <typeparam name="TModel">模型的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl`1.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewTemplateUserControl`1" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewTemplateUserControl`1.FormattedModelValue">
      <summary>取得格式化的值。</summary>
      <returns>已格式化的值。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewType">
      <summary>表示檢視的類型。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewType.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewType" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewType.TypeName">
      <summary>取得或設定型別的名稱。</summary>
      <returns>型別的名稱。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl">
      <summary>表示建置使用者控制項所需的資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewUserControl" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Ajax">
      <summary>取得檢視的 AJAX 指令碼。</summary>
      <returns>檢視的 AJAX 指令碼。</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.EnsureViewData">
      <summary>確定檢視資料 (如果存在的話) 已加入至使用者控制項的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Html">
      <summary>取得檢視的 HTML。</summary>
      <returns>檢視的 HTML。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Model">
      <summary>取得模型。</summary>
      <returns>模型。</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.RenderView(System.Web.Mvc.ViewContext)">
      <summary>使用指定的檢視內容來呈現檢視。</summary>
      <param name="viewContext">檢視內容。</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetTextWriter(System.IO.TextWriter)">
      <summary>設定用於將檢視呈現至回應的文字寫入器。</summary>
      <param name="textWriter">用來將檢視呈現至回應的寫入器。</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>使用指定的檢視資料，設定檢視資料字典。</summary>
      <param name="viewData">檢視資料。</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.TempData">
      <summary>取得暫存資料字典。</summary>
      <returns>暫存資料字典。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Url">
      <summary>取得檢視的 URL。</summary>
      <returns>檢視的 URL。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewBag">
      <summary>取得檢視包。</summary>
      <returns>檢視包。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewContext">
      <summary>取得或設定檢視內容。</summary>
      <returns>檢視內容。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewData">
      <summary>取得或設定檢視資料字典。</summary>
      <returns>檢視資料字典。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewDataKey">
      <summary>取得或設定檢視資料索引鍵。</summary>
      <returns>檢視資料索引鍵。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Writer">
      <summary>取得用來將檢視呈現至回應的寫入器。</summary>
      <returns>用來將檢視呈現至回應的寫入器。</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl`1">
      <summary>表示建置強型別使用者控制項所需的資訊。</summary>
      <typeparam name="TModel">模型的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.ViewUserControl`1" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Ajax">
      <summary>取得檢視的 AJAX 指令碼。</summary>
      <returns>檢視的 AJAX 指令碼。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Html">
      <summary>取得檢視的 HTML。</summary>
      <returns>檢視的 HTML。</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Model">
      <summary>取得模型。</summary>
      <returns>資料模型的參考。</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>設定檢視的檢視資料。</summary>
      <param name="viewData">檢視資料。</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.ViewData">
      <summary>取得或設定檢視資料。</summary>
      <returns>檢視資料。</returns>
    </member>
    <member name="T:System.Web.Mvc.VirtualPathProviderViewEngine">
      <summary>表示 <see cref="T:System.Web.Mvc.IViewEngine" /> 介面的抽象基底類別實作。</summary>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.VirtualPathProviderViewEngine" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaMasterLocationFormats">
      <summary>取得或設定已啟用區域的主要位置格式。</summary>
      <returns>已啟用區域的主要位置格式。</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaPartialViewLocationFormats">
      <summary>取得或設定已啟用區域的部分檢視位置格式。</summary>
      <returns>已啟用區域的部分檢視位置格式。</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaViewLocationFormats">
      <summary>取得或設定已啟用區域的檢視位置格式。</summary>
      <returns>已啟用區域的檢視位置格式。</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>使用指定的控制器內容，建立指定的部分檢視。</summary>
      <returns>對部分檢視的參考。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="partialPath">新部分檢視的部分路徑。</param>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>使用控制器內容、檢視的路徑以及主版檢視的路徑，建立指定的檢視。</summary>
      <returns>對檢視的參考。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="viewPath">檢視的路徑。</param>
      <param name="masterPath">主版檢視的路徑。</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.DisplayModeProvider">
      <summary>取得或設定顯示模式提供者。</summary>
      <returns>顯示模式提供者。</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>傳回值，這個值會使用指定的控制器內容，指出檔案是否位於指定的路徑。</summary>
      <returns>如果檔案位於指定的路徑，則為 true，否則為 false。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="virtualPath">虛擬路徑。</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.FileExtensions">
      <summary>取得或設定用來尋找檢視的副檔名。</summary>
      <returns>用來尋找檢視的副檔名。</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>使用指定的控制器內容，尋找指定的部分檢視。</summary>
      <returns>部分檢視。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="partialViewName">部分檢視的名稱。</param>
      <param name="useCache">true 表示要使用快取的部分檢視。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 參數為 null (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partialViewName" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>使用指定的控制器內容和主版檢視名稱，尋找指定的檢視。</summary>
      <returns>頁面檢視。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="viewName">檢視的名稱。</param>
      <param name="masterName">主版檢視的名稱。</param>
      <param name="useCache">true 表示要使用快取的檢視。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 參數為 null (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewName" /> 參數是 null 或空白。</exception>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.MasterLocationFormats">
      <summary>取得或設定主要位置格式。</summary>
      <returns>主要位置格式。</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.PartialViewLocationFormats">
      <summary>取得或設定部分檢視位置格式。</summary>
      <returns>部分檢視位置格式。</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>使用指定的控制器內容，釋放指定的檢視。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="view">要釋放的檢視。</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationCache">
      <summary>取得或設定檢視位置快取。</summary>
      <returns>檢視位置快取。</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationFormats">
      <summary>取得或設定檢視位置格式。</summary>
      <returns>檢視位置格式。</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.VirtualPathProvider">
      <summary>取得或設定虛擬路徑提供者。</summary>
      <returns>虛擬路徑提供者。</returns>
    </member>
    <member name="T:System.Web.Mvc.WebFormView">
      <summary>表示在 ASP.NET MVC 中建置 Web Form 頁面所需的資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>使用控制器內容和檢視路徑，初始化 <see cref="T:System.Web.Mvc.WebFormView" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="viewPath">檢視路徑。</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>使用控制器內容、檢視路徑和主版頁面路徑，初始化 <see cref="T:System.Web.Mvc.WebFormView" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="viewPath">檢視路徑。</param>
      <param name="masterPath">主版頁面的路徑。</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>使用控制器內容、檢視路徑、主版頁面路徑和 <see cref="T:System.Web.Mvc.IViewPageActivator" /> 執行個體，初始化 <see cref="T:System.Web.Mvc.WebFormView" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="viewPath">檢視路徑。</param>
      <param name="masterPath">主版頁面的路徑。</param>
      <param name="viewPageActivator">檢視頁面啟動項介面的執行個體。</param>
    </member>
    <member name="P:System.Web.Mvc.WebFormView.MasterPath">
      <summary>取得或設定主版檢視路徑。</summary>
      <returns>主版檢視路徑。</returns>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>將檢視呈現至回應。</summary>
      <param name="viewContext">封裝呈現檢視所需資訊的物件，包括關聯檢視的控制器內容、表單內容、暫存資料和檢視資料。</param>
      <param name="writer">用來寫入 HTML 輸出的文字寫入器物件。</param>
      <param name="instance">檢視頁面執行個體。</param>
    </member>
    <member name="T:System.Web.Mvc.WebFormViewEngine">
      <summary>表示用來將 Web Form 頁面呈現至回應的檢視引擎。</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.WebFormViewEngine" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>使用指定的檢視頁面啟動項，初始化 <see cref="T:System.Web.Mvc.WebFormViewEngine" /> 類別的新執行個體。</summary>
      <param name="viewPageActivator">實作 <see cref="T:System.Web.Mvc.IViewPageActivator" /> 介面之類別的執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>使用指定的控制器內容，建立指定的部分檢視。</summary>
      <returns>部分檢視。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="partialPath">部分路徑。</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>使用指定的控制器內容以及檢視和主版檢視的路徑，建立指定的檢視。</summary>
      <returns>檢視。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="viewPath">檢視路徑。</param>
      <param name="masterPath">主版檢視路徑。</param>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage">
      <summary>表示為了呈現使用 ASP.NET Razor 語法的檢視而必須使用的屬性和方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.WebViewPage" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Ajax">
      <summary>取得或設定 <see cref="T:System.Web.Mvc.AjaxHelper" /> 物件，這個物件用來以 Ajax 呈現 HTML。</summary>
      <returns>用來以 Ajax 呈現 HTML 的 <see cref="T:System.Web.Mvc.AjaxHelper" /> 物件。</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>設定頁面的檢視內容和檢視資料。</summary>
      <param name="parentPage">父頁面。</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Context">
      <summary>取得與頁面相關聯的 <see cref="T:System.Web.HttpContext" /> 物件。</summary>
      <returns>與頁面相關聯的 <see cref="T:System.Web.HttpContext" /> 物件。</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ExecutePageHierarchy">
      <summary>執行 ASP.NET Razor 執行管線的頁面階層。</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Html">
      <summary>取得或設定 <see cref="T:System.Web.Mvc.HtmlHelper" /> 物件，這個物件用於呈現 HTML 項目。</summary>
      <returns>用來呈現 HTML 項目的 <see cref="T:System.Web.Mvc.HtmlHelper" /> 物件。</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.InitHelpers">
      <summary>初始化 <see cref="T:System.Web.Mvc.AjaxHelper" />、<see cref="T:System.Web.Mvc.HtmlHelper" /> 和 <see cref="T:System.Web.Mvc.UrlHelper" /> 類別。</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Model">
      <summary>取得關聯 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件的 Model 屬性。</summary>
      <returns>關聯 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件的 Model 屬性。</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>設定檢視資料。</summary>
      <param name="viewData">檢視資料。</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.TempData">
      <summary>取得要傳遞至檢視的暫存資料。</summary>
      <returns>要傳遞至檢視的暫存資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Url">
      <summary>取得或設定呈現之網頁的 URL。</summary>
      <returns>呈現之網頁的 URL。</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewBag">
      <summary>取得檢視包。</summary>
      <returns>檢視包。</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewContext">
      <summary>取得或設定用來呈現檢視的資訊。</summary>
      <returns>用於呈現檢視的資訊，包括關聯檢視的表單內容、暫存資料和檢視資料。</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewData">
      <summary>取得或設定字典，這個字典包含要在控制器和檢視之間傳遞的資料。</summary>
      <returns>字典，包含要在控制器和檢視之間傳遞的資料。</returns>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage`1">
      <summary>表示為了呈現使用 ASP.NET Razor 語法的檢視而必須使用的屬性和方法。</summary>
      <typeparam name="TModel">檢視資料模型的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.WebViewPage`1" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Ajax">
      <summary>取得或設定 <see cref="T:System.Web.Mvc.AjaxHelper" /> 物件，這個物件用來以 Ajax 呈現 HTML 標記。</summary>
      <returns>用來以 Ajax 呈現 HTML 標記的 <see cref="T:System.Web.Mvc.AjaxHelper" /> 物件。</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Html">
      <summary>取得或設定 <see cref="T:System.Web.Mvc.HtmlHelper" /> 物件，這個物件用於呈現 HTML 項目。</summary>
      <returns>用來呈現 HTML 項目的 <see cref="T:System.Web.Mvc.HtmlHelper" /> 物件。</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.InitHelpers">
      <summary>初始化 <see cref="T:System.Web.Mvc.AjaxHelper" />、<see cref="T:System.Web.Mvc.HtmlHelper" /> 和 <see cref="T:System.Web.Mvc.UrlHelper" /> 類別。</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Model">
      <summary>取得關聯 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件的 Model 屬性。</summary>
      <returns>關聯 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件的 Model 屬性。</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>設定檢視資料。</summary>
      <param name="viewData">檢視資料。</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.ViewData">
      <summary>取得或設定字典，這個字典包含要在控制器和檢視之間傳遞的資料。</summary>
      <returns>字典，包含要在控制器和檢視之間傳遞的資料。</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxExtensions">
      <summary>表示 ASP.NET MVC 應用程式內對 ASP.NET AJAX 的支援。</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>傳回錨定項目，其中包含指定之動作方法的 URL；按一下動作連結時，系統便會使用 JavaScript 以非同步方式叫用該動作方法。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>傳回錨定項目，其中包含指定之動作方法的 URL；按一下動作連結時，系統便會使用 JavaScript 以非同步方式叫用該動作方法。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>傳回錨定項目，其中包含指定之動作方法的 URL；按一下動作連結時，系統便會使用 JavaScript 以非同步方式叫用該動作方法。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>傳回錨定項目，其中包含指定之動作方法的 URL；按一下動作連結時，系統便會使用 JavaScript 以非同步方式叫用該動作方法。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>傳回錨定項目，其中包含指定之動作方法的 URL；按一下動作連結時，系統便會使用 JavaScript 以非同步方式叫用該動作方法。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="protocol">URL 的通訊協定，例如 "http" 或 "https"。</param>
      <param name="hostName">URL 的主機名稱。</param>
      <param name="fragment">URL 片段名稱 (錨定名稱)。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回錨定項目，其中包含指定之動作方法的 URL；按一下動作連結時，系統便會使用 JavaScript 以非同步方式叫用該動作方法。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="protocol">URL 的通訊協定，例如 "http" 或 "https"。</param>
      <param name="hostName">URL 的主機名稱。</param>
      <param name="fragment">URL 片段名稱 (錨定名稱)。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>傳回錨定項目，其中包含指定之動作方法的 URL；按一下動作連結時，系統便會使用 JavaScript 以非同步方式叫用該動作方法。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>傳回錨定項目，其中包含指定之動作方法的 URL；按一下動作連結時，系統便會使用 JavaScript 以非同步方式叫用該動作方法。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回錨定項目，其中包含指定之動作方法的 URL；按一下動作連結時，系統便會使用 JavaScript 以非同步方式叫用該動作方法。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>傳回錨定項目，其中包含指定之動作方法的 URL；按一下動作連結時，系統便會使用 JavaScript 以非同步方式叫用該動作方法。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>傳回錨定項目，其中包含指定之動作方法的 URL；按一下動作連結時，系統便會使用 JavaScript 以非同步方式叫用該動作方法。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回錨定項目，其中包含指定之動作方法的 URL；按一下動作連結時，系統便會使用 JavaScript 以非同步方式叫用該動作方法。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="actionName">處理要求之動作方法的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="actionName">處理要求之動作方法的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="actionName">處理要求之動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="actionName">處理要求之動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="actionName">處理要求之動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="actionName">處理要求之動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="actionName">處理要求之動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="actionName">處理要求之動作方法的名稱。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="actionName">處理要求之動作方法的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="actionName">處理要求之動作方法的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">一項物件，該物件包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>使用指定的路由資訊，將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="routeName">用來取得表單張貼 URL 之路徑的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>使用指定的路由資訊，將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="routeName">用來取得表單張貼 URL 之路徑的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>使用指定的路由資訊，將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="routeName">用來取得表單張貼 URL 之路徑的名稱。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>使用指定的路由資訊，將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="routeName">用來取得表單張貼 URL 之路徑的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的路由資訊，將開頭的 &lt;form&gt; 標記寫入至回應。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="routeName">用來取得表單張貼 URL 之路徑的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper)">
      <summary>傳回 HTML script 項目，其中包含定義文化特性資訊的全球化指令碼參考。</summary>
      <returns>其 src 屬性設為全球化指令碼的 script 項目，如下列程式碼範例所示：&lt;script type="text/javascript"     src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">此方法擴充的 AJAX Helper 物件。</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper,System.Globalization.CultureInfo)">
      <summary>傳回 HTML script 項目，其中包含定義指定之文化特性資訊的全球化指令碼參考。</summary>
      <returns>其 src 屬性設為全球化指令碼的 HTML script 項目，如下列程式碼範例所示：&lt;script type="text/javascript"    src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">此方法擴充的 AJAX Helper 物件。</param>
      <param name="cultureInfo">封裝目標文化特性的相關資訊，例如日期格式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureInfo" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>傳回錨定項目，其中包含指定之路徑值的虛擬路徑；按一下連結時，系統便會使用 JavaScript 以非同步方式對該虛擬路徑提出要求。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>傳回錨定項目，其中包含指定之路徑值的虛擬路徑；按一下連結時，系統便會使用 JavaScript 以非同步方式對該虛擬路徑提出要求。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>傳回錨定項目，其中包含指定之路徑值的虛擬路徑；按一下連結時，系統便會使用 JavaScript 以非同步方式對該虛擬路徑提出要求。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來取得表單張貼 URL 之路徑的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>傳回錨定項目，其中包含指定之路徑值的虛擬路徑；按一下連結時，系統便會使用 JavaScript 以非同步方式對該虛擬路徑提出要求。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來取得表單張貼 URL 之路徑的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回錨定項目，其中包含指定之路徑值的虛擬路徑；按一下連結時，系統便會使用 JavaScript 以非同步方式對該虛擬路徑提出要求。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來取得表單張貼 URL 之路徑的名稱。</param>
      <param name="protocol">URL 的通訊協定，例如 "http" 或 "https"。</param>
      <param name="hostName">URL 的主機名稱。</param>
      <param name="fragment">URL 片段名稱 (錨定名稱)。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>傳回錨定項目，其中包含指定之路徑值的虛擬路徑；按一下連結時，系統便會使用 JavaScript 以非同步方式對該虛擬路徑提出要求。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來取得表單張貼 URL 之路徑的名稱。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回錨定項目，其中包含指定之路徑值的虛擬路徑；按一下連結時，系統便會使用 JavaScript 以非同步方式對該虛擬路徑提出要求。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來取得表單張貼 URL 之路徑的名稱。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>傳回錨定項目，其中包含指定之路徑值的虛擬路徑；按一下連結時，系統便會使用 JavaScript 以非同步方式對該虛擬路徑提出要求。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來取得表單張貼 URL 之路徑的名稱。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>傳回錨定項目，其中包含指定之路徑值的虛擬路徑；按一下連結時，系統便會使用 JavaScript 以非同步方式對該虛擬路徑提出要求。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來取得表單張貼 URL 之路徑的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回錨定項目，其中包含指定之路徑值的虛擬路徑；按一下連結時，系統便會使用 JavaScript 以非同步方式對該虛擬路徑提出要求。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來取得表單張貼 URL 之路徑的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>傳回錨定項目，其中包含指定之路徑值的虛擬路徑；按一下連結時，系統便會使用 JavaScript 以非同步方式對該虛擬路徑提出要求。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回錨定項目，其中包含指定之路徑值的虛擬路徑；按一下連結時，系統便會使用 JavaScript 以非同步方式對該虛擬路徑提出要求。</summary>
      <returns>錨定項目。</returns>
      <param name="ajaxHelper">AJAX Helper。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="ajaxOptions">物件，提供非同步要求的選項。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxOptions">
      <summary>表示在 ASP.NET MVC 應用程式中執行 Ajax 指令碼的選項設定。</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Ajax.AjaxOptions" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.AllowCache"></member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Confirm">
      <summary>取得或設定在送出要求之前，要在確認視窗中顯示的訊息。</summary>
      <returns>要在確認視窗中顯示的訊息。</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.HttpMethod">
      <summary>取得或設定 HTTP 要求方法 ("Get" 或 "Post")。</summary>
      <returns>HTTP 要求方法。預設值為 "Post"。</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.InsertionMode">
      <summary>取得或設定模式，這個模式會指定如何將回應插入至目標 DOM 項目中。</summary>
      <returns>插入模式 ("InsertAfter"、"InsertBefore" 或 "Replace")。預設值為 "Replace"。</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementDuration">
      <summary>取得或設定值 (以毫秒為單位)，在顯示或隱藏正載入的項目時，這個值會控制動畫的持續時間。</summary>
      <returns>值 (以毫秒為單位)，在顯示或隱藏正載入的項目時，這個值會控制動畫的持續時間。</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementId">
      <summary>取得或設定載入 Ajax 函式時所顯示之 HTML 項目的 id 屬性。</summary>
      <returns>載入 Ajax 函式時所顯示之項目的 ID。</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnBegin">
      <summary>取得或設定更新頁面之前所要立即呼叫之 JavaScript 函式的名稱。</summary>
      <returns>更新頁面之前所要立即呼叫之 JavaScript 函式的名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnComplete">
      <summary>取得或設定在已執行個體化回應資料但尚未更新頁面之前所要呼叫的 JavaScript 函式。</summary>
      <returns>已執行個體化回應資料時所要呼叫的 JavaScript 函式。</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnFailure">
      <summary>取得或設定頁面更新失敗時所要呼叫的 JavaScript 函式。</summary>
      <returns>頁面更新失敗時所要呼叫的 JavaScript 函式。</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnSuccess">
      <summary>取得或設定成功更新頁面之後所要呼叫的 JavaScript 函式。</summary>
      <returns>成功更新頁面之後所要呼叫的 JavaScript 函式。</returns>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.ToUnobtrusiveHtmlAttributes">
      <summary>以 HTML 屬性集合形式傳回 Ajax 選項以支援非干擾性的 JavaScript。</summary>
      <returns>Ajax 選項，其形式為 HTML 屬性集合以支援不顯眼的 JavaScript。</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.UpdateTargetId">
      <summary>使用來自伺服器的回應取得或設定要更新之 DOM 項目的 ID。</summary>
      <returns>要更新之 DOM 項目的 ID。</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Url">
      <summary>取得或設定要對其提出要求的 URL。</summary>
      <returns>要對其提出要求的 URL。</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.InsertionMode">
      <summary>列舉 AJAX 指令碼插入模式。</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertAfter">
      <summary>在項目之後插入。</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertBefore">
      <summary>在項目之前插入。</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.Replace">
      <summary>取代項目。</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.ReplaceWith">
      <summary>取代整個項目。</summary>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncActionDescriptor">
      <summary>提供非同步動作方法的相關資訊，例如其名稱、控制器、參數、屬性和篩選條件。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Async.AsyncActionDescriptor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>使用指定的參數和控制器內容，叫用非同步動作方法。</summary>
      <returns>包含非同步呼叫結果的物件。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="parameters">動作方法的參數。</param>
      <param name="callback">回呼方法。</param>
      <param name="state">物件，包含回呼方法所使用的資訊。這個參數可以是 null。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>傳回非同步作業的結果。</summary>
      <returns>非同步作業的結果。</returns>
      <param name="asyncResult">物件，表示非同步作業的狀態。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的參數和控制器內容，執行非同步動作方法。</summary>
      <returns>執行非同步動作方法的結果。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="parameters">動作方法的參數。</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncControllerActionInvoker">
      <summary>表示負責叫用非同步控制器之動作方法的類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Async.AsyncControllerActionInvoker" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>使用指定的控制器內容、動作名稱、回呼方法和狀態，叫用非同步動作方法。</summary>
      <returns>包含非同步作業結果的物件。實作<see cref="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)" /></returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionName">動作的名稱。</param>
      <param name="callback">回呼方法。</param>
      <param name="state">物件，包含回呼方法所使用的資訊。這個參數可以是 null。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>使用指定的控制器內容、動作描述元、參數、回呼方法和狀態，叫用非同步動作方法。</summary>
      <returns>包含非同步作業結果的物件。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">動作描述元。</param>
      <param name="parameters">非同步動作方法的參數。</param>
      <param name="callback">回呼方法。</param>
      <param name="state">物件，包含回呼方法所使用的資訊。這個參數可以是 null。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>使用指定的控制器內容、篩選條件、動作描述元、參數、回呼方法和狀態，叫用非同步動作方法。</summary>
      <returns>包含非同步作業結果的物件。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="filters">篩選條件。</param>
      <param name="actionDescriptor">動作描述元。</param>
      <param name="parameters">非同步動作方法的參數。</param>
      <param name="callback">回呼方法。</param>
      <param name="state">物件，包含回呼方法所使用的資訊。這個參數可以是 null。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>取消動作。</summary>
      <returns>如果取消動作，則為 true，否則為 false。</returns>
      <param name="asyncResult">使用者定義的物件，其符合或包含非同步作業的資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(System.IAsyncResult)">
      <summary>取消動作。</summary>
      <returns>如果取消動作，則為 true，否則為 false。</returns>
      <param name="asyncResult">使用者定義的物件，其符合或包含非同步作業的資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(System.IAsyncResult)">
      <summary>取消動作。</summary>
      <returns>如果取消動作，則為 true，否則為 false。</returns>
      <param name="asyncResult">使用者定義的物件，其符合或包含非同步作業的資訊。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>傳回控制器描述元。</summary>
      <returns>控制器描述元。</returns>
      <param name="controllerContext">控制器內容。</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncManager">
      <summary>提供 <see cref="T:System.Web.Mvc.AsyncController" /> 類別的非同步作業。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Async.AsyncManager" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor(System.Threading.SynchronizationContext)">
      <summary>使用同步處理內容，初始化 <see cref="T:System.Web.Mvc.Async.AsyncManager" /> 類別的新執行個體。</summary>
      <param name="syncContext">同步處理內容。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Finish">
      <summary>通知 ASP.NET 所有非同步作業已完成。</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.AsyncManager.Finished">
      <summary>會在呼叫 <see cref="M:System.Web.Mvc.Async.AsyncManager.Finish" /> 方法時發生。</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.OutstandingOperations">
      <summary>取得未處理作業的數目。</summary>
      <returns>未處理作業的數目。</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Parameters">
      <summary>取得傳遞至非同步完成方法的參數。</summary>
      <returns>傳遞至非同步完成方法的參數。</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Sync(System.Action)">
      <summary>在目前同步處理內容中執行回呼。</summary>
      <param name="action">非同步動作。</param>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Timeout">
      <summary>取得或設定非同步逾時值 (以毫秒為單位)。</summary>
      <returns>非同步逾時值 (以毫秒為單位)。</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvoker">
      <summary>定義動作啟動程式的介面，用於叫用非同步動作以回應 HTTP 要求。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>叫用指定的動作。</summary>
      <returns>非同步結果的狀態。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionName">非同步動作的名稱。</param>
      <param name="callback">回呼方法。</param>
      <param name="state">狀態。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>取消非同步動作。</summary>
      <returns>如果可以取消非同步方法，則為 true，否則為 false。</returns>
      <param name="asyncResult">非同步結果。</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvokerFactory">
      <summary>用來建立目前要求的 <see cref="T:System.Web.Mvc.Async.IAsyncActionInvoker" /> 執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvokerFactory.CreateInstance">
      <summary>建立目前要求之非同步動作啟動程式的執行個體。</summary>
      <returns>建立的 <see cref="T:System.Web.Mvc.Async.IAsyncActionInvoker" />。</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncController">
      <summary>定義非同步控制器所需的方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>執行指定的要求內容。</summary>
      <returns>非同步作業的狀態。</returns>
      <param name="requestContext">要求內容。</param>
      <param name="callback">非同步的回呼方法。</param>
      <param name="state">狀態。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.EndExecute(System.IAsyncResult)">
      <summary>結束非同步作業。</summary>
      <param name="asyncResult">非同步結果。</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncManagerContainer">
      <summary>提供非同步管理員物件的容器。</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.IAsyncManagerContainer.AsyncManager">
      <summary>取得非同步管理員物件。</summary>
      <returns>非同步管理員物件。</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.OperationCounter">
      <summary>提供維護暫止非同步作業計數的控制器。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Async.OperationCounter" /> 類別的新執行個體。</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.OperationCounter.Completed">
      <summary>在非同步方法完成時發生。</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.OperationCounter.Count">
      <summary>取得作業計數。</summary>
      <returns>作業計數。</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement">
      <summary>將作業計數減少 1。</summary>
      <returns>更新的作業計數。</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement(System.Int32)">
      <summary>按指定值減少作業數。</summary>
      <returns>更新的作業計數。</returns>
      <param name="value">減少計數所依據的作業數。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment">
      <summary>將作業計數遞增一。</summary>
      <returns>更新的作業計數。</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment(System.Int32)">
      <summary>按指定值遞增作業數。</summary>
      <returns>更新的作業計數。</returns>
      <param name="value">遞增計數所依據的作業數。</param>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor">
      <summary>提供非同步動作方法的相關資訊，例如其名稱、控制器、參數、屬性和篩選條件。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>初始化 <see cref="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor" /> 類別的新執行個體。</summary>
      <param name="asyncMethodInfo">物件，包含開始非同步作業之方法的相關資訊 (方法的名稱以「非同步」結尾)。</param>
      <param name="completedMethodInfo">含有完成方法相關資訊的物件 (方法的名稱以「已完成」結尾)。</param>
      <param name="actionName">動作的名稱。</param>
      <param name="controllerDescriptor">控制器描述元。</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ActionName">
      <summary>取得動作方法的名稱。</summary>
      <returns>動作方法的名稱。</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.AsyncMethodInfo">
      <summary>取得非同步動作方法的方法資訊。</summary>
      <returns>非同步動作方法的方法資訊。</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>使用指定的參數和控制器內容，開始執行非同步動作方法。</summary>
      <returns>包含非同步呼叫結果的物件。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="parameters">動作方法的參數。</param>
      <param name="callback">回呼方法。</param>
      <param name="state">物件，包含回呼方法所使用的資訊。這個參數可以是 null。</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.CompletedMethodInfo">
      <summary>取得非同步完成方法的方法資訊。</summary>
      <returns>非同步完成方法的方法資訊。</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ControllerDescriptor">
      <summary>取得非同步動作方法的控制器描述元。</summary>
      <returns>非同步動作方法的控制器描述元。</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>傳回非同步作業的結果。</summary>
      <returns>非同步作業的結果。</returns>
      <param name="asyncResult">物件，表示非同步作業的狀態。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性陣列，但不包括具名屬性。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性陣列，並依型別識別。</summary>
      <returns>自訂屬性的陣列，如果指定之型別的自訂屬性不存在則為空陣列。</returns>
      <param name="attributeType">待傳回自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>取得篩選條件屬性。</summary>
      <returns>篩選條件屬性。</returns>
      <param name="useCache">使用快取旗標。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetParameters">
      <summary>傳回動作方法的參數。</summary>
      <returns>動作方法的參數。</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetSelectors">
      <summary>傳回動作方法選取器。</summary>
      <returns>動作方法選取器。</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>判斷是否已為該動作成員定義指定之屬性型別的一個或多個執行個體。</summary>
      <returns>如果已定義此成員之 <paramref name="attributeType" /> 所表示型別的屬性，則為 true，否則為 false。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.MethodInfo"></member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.UniqueId">
      <summary>取得此類別之執行個體的延遲初始化唯一 ID。</summary>
      <returns>此類別之執行個體的延遲初始化唯一 ID。</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor">
      <summary>封裝描述非同步控制項的資訊，例如其名稱、型別和動作。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor" /> 類別的新執行個體。</summary>
      <param name="controllerType">控制器的型別。</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.ControllerType">
      <summary>取得控制器的型別。</summary>
      <returns>控制器的型別。</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>使用指定的名稱和控制器內容，尋找動作方法。</summary>
      <returns>動作方法的相關資訊。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionName">動作的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCanonicalActions">
      <summary>傳回控制器中的動作方法描述元清單。</summary>
      <returns>控制器中的動作方法描述元清單。</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性，但不包括具名屬性。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>傳回針對此成員定義之指定型別的自訂屬性，但不包括具名屬性。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>取得篩選條件屬性。</summary>
      <returns>篩選條件屬性。</returns>
      <param name="useCache">true 表示使用快取，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>傳回值，這個值表示是否已為此成員定義指定之自訂屬性的一個或多個執行個體。</summary>
      <returns>如果已定義此成員之 <paramref name="attributeType" /> 所表示型別的屬性，則為 true，否則為 false。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
    </member>
    <member name="T:System.Web.Mvc.Async.SynchronousOperationException">
      <summary>表示在 ASP.NET MVC 應用程式中同步處理 HTTP 要求期間發生的例外狀況。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor">
      <summary>使用系統提供的訊息，初始化 <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String)">
      <summary>使用指定的訊息，初始化 <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況的訊息。這個建構函式的呼叫端必須確保這個字串已針對目前系統的文化特性，執行過當地語系化。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和造成這個例外狀況的內部例外狀況參考，初始化 <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況的訊息。這個建構函式的呼叫端必須確保這個字串已針對目前系統的文化特性，執行過當地語系化。</param>
      <param name="innerException">導致目前例外狀況的例外狀況。如果 <paramref name="innerException" /> 參數不是 null，則目前的例外狀況會在處理內部例外狀況的 catch 區塊中引發。</param>
    </member>
    <member name="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor">
      <summary>當動作方法傳回 Task 或 Task&lt;T&gt; 時，<see cref="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor" /> 會提供動作相關資訊。</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>初始化 <see cref="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor" /> 類別的新執行個體。</summary>
      <param name="taskMethodInfo">工作方法資訊。</param>
      <param name="actionName">動作名稱。</param>
      <param name="controllerDescriptor">控制器描述元。</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.ActionName">
      <summary>取得動作方法的名稱。</summary>
      <returns>動作方法的名稱。</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>使用指定的參數、控制器內容回呼和狀態，叫用非同步動作方法。</summary>
      <returns>包含非同步呼叫結果的物件。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="parameters">動作方法的參數。</param>
      <param name="callback">選用回呼方法。</param>
      <param name="state">物件，包含回呼方法所使用的資訊。這個參數可以是 null。</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.ControllerDescriptor">
      <summary>取得控制器描述元。</summary>
      <returns>控制器描述元。</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>結束非同步作業。</summary>
      <returns>非同步作業的結果。</returns>
      <param name="asyncResult">物件，表示非同步作業的狀態。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>執行非同步動作方法</summary>
      <returns>執行非同步動作方法的結果。</returns>
      <param name="controllerContext">控制器內容。</param>
      <param name="parameters">動作方法的參數。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性陣列，但不包括具名屬性。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>傳回針對此成員定義的自訂屬性陣列，並依型別識別。</summary>
      <returns>自訂屬性的陣列，如果自訂屬性不存在則為空陣列。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>傳回套用到此成員的所有自訂屬性陣列。</summary>
      <returns>含有所有套用到此成員之自訂屬性的陣列，或是不含任何項目的陣列 (如果未定義屬性的話)。</returns>
      <param name="useCache">true 表示要搜尋此成員的繼承鏈結以尋找屬性，否則為 false。</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetParameters">
      <summary>傳回非同步動作方法的參數。</summary>
      <returns>非同步動作方法的參數。</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetSelectors">
      <summary>傳回非同步動作方法選取器。</summary>
      <returns>非同步動作方法選取器。</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>傳回值，這個值表示是否已為此成員定義指定之自訂屬性的一個或多個執行個體。</summary>
      <returns>表示是否已為此成員定義指定之自訂屬性的一個或多個執行個體的值。</returns>
      <param name="attributeType">自訂屬性的型別。</param>
      <param name="inherit">true 表示要查詢繼承自訂屬性的階層鏈結，否則為 false。</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.MethodInfo"></member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.TaskMethodInfo">
      <summary>取得非同步工作的資訊。</summary>
      <returns>非同步工作的資訊。</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.UniqueId">
      <summary>取得工作的唯一 ID。</summary>
      <returns>工作的唯一 ID。</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.AuthenticationChallengeContext">
      <summary>代表包含執行驗證挑戰資訊的驗證挑戰內容。</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationChallengeContext.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Filters.AuthenticationChallengeContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationChallengeContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Web.Mvc.ActionResult)">
      <summary>初始化 <see cref="T:System.Web.Mvc.Filters.AuthenticationChallengeContext" /> 類別的新執行個體。</summary>
      <param name="controllerContext">控制器內容。</param>
      <param name="actionDescriptor">與挑戰相關聯的動作方法。</param>
      <param name="result">挑戰回應。</param>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationChallengeContext.ActionDescriptor">
      <summary>取得或設定動作描述元。</summary>
      <returns>與挑戰相關聯的動作描述元。</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationChallengeContext.Result">
      <summary>取得或設定要執行的動作結果。</summary>
      <returns>挑戰回應。</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.AuthenticationContext">
      <summary>代表包含執行驗證資訊的驗證內容。</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationContext.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Filters.AuthenticationContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Security.Principal.IPrincipal)"></member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.ActionDescriptor">
      <summary>取得或設定動作描述元。</summary>
      <returns>與驗證相關聯的動作方法。</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.Principal">
      <summary>取得或設定目前驗證的主體。</summary>
      <returns>驗證的安全性認證。</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.Result">
      <summary>取得或設定錯誤結果，其指出已嘗試驗證並失敗。</summary>
      <returns>驗證結果。</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.IAuthenticationFilter">
      <summary>定義執行驗證的篩選。</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>驗證要求。</summary>
      <param name="filterContext">要用於驗證的內容。</param>
    </member>
    <member name="M:System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>將驗證挑戰新增至目前的 <see cref="T:System.Web.Mvc.ActionResult" /> 中。</summary>
      <param name="filterContext">要用於驗證挑戰的內容。</param>
    </member>
    <member name="T:System.Web.Mvc.Filters.IOverrideFilter">
      <summary>定義覆寫其他篩選條件的篩選條件。</summary>
    </member>
    <member name="P:System.Web.Mvc.Filters.IOverrideFilter.FiltersToOverride">
      <summary>取得要覆寫的篩選條件類型。</summary>
      <returns>要覆寫的篩選條件。</returns>
    </member>
    <member name="T:System.Web.Mvc.Html.ChildActionExtensions">
      <summary>代表支援呼叫子系動作方法並支援呈現內嵌於父檢視中的結果。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>叫用指定的子系動作方法並以 HTML 字串形式傳回結果。</summary>
      <returns>HTML 字串形式的子系動作結果。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">要叫用的動作方法名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException">找不到必要的虛擬路徑資料。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>使用指定的參數叫用指定的子系動作方法，並以 HTML 字串形式傳回結果。</summary>
      <returns>HTML 字串形式的子系動作結果。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">要叫用的動作方法名稱。</param>
      <param name="routeValues">包含路徑參數的物件。您可以使用 <paramref name="routeValues" /> 來提供繫結至動作方法參數的參數。<paramref name="routeValues" /> 參數會與原始路由值合併，並覆寫這些值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException">找不到必要的虛擬路徑資料。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>使用指定的控制器名稱叫用指定的子系動作方法，並以 HTML 字串形式傳回結果。</summary>
      <returns>HTML 字串形式的子系動作結果。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">要叫用的動作方法名稱。</param>
      <param name="controllerName">包含動作方法的控制器名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException">找不到必要的虛擬路徑資料。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>使用指定的參數和控制器名稱叫用指定的子系動作方法，並以 HTML 字串形式傳回結果。</summary>
      <returns>HTML 字串形式的子系動作結果。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">要叫用的動作方法名稱。</param>
      <param name="controllerName">包含動作方法的控制器名稱。</param>
      <param name="routeValues">包含路徑參數的物件。您可以使用 <paramref name="routeValues" /> 來提供繫結至動作方法參數的參數。<paramref name="routeValues" /> 參數會與原始路由值合併，並覆寫這些值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException">找不到必要的虛擬路徑資料。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>使用指定的參數和控制器名稱叫用指定的子系動作方法，並以 HTML 字串形式傳回結果。</summary>
      <returns>HTML 字串形式的子系動作結果。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">要叫用的動作方法名稱。</param>
      <param name="controllerName">包含動作方法的控制器名稱。</param>
      <param name="routeValues">字典，其中包含路由的參數。您可以使用 <paramref name="routeValues" /> 來提供繫結至動作方法參數的參數。<paramref name="routeValues" /> 參數會與原始路由值合併，並覆寫這些值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException">找不到必要的虛擬路徑資料。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>使用指定的參數叫用指定的子系動作方法，並以 HTML 字串形式傳回結果。</summary>
      <returns>HTML 字串形式的子系動作結果。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">要叫用的動作方法名稱。</param>
      <param name="routeValues">字典，其中包含路由的參數。您可以使用 <paramref name="routeValues" /> 來提供繫結至動作方法參數的參數。<paramref name="routeValues" /> 參數會與原始路由值合併，並覆寫這些值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException">找不到必要的虛擬路徑資料。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>叫用指定的子系動作方法，並呈現內嵌於父檢視內的結果。</summary>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">要叫用的子系動作方法名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException">找不到必要的虛擬路徑資料。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>使用指定的參數叫用指定的子系動作方法，並呈現內嵌於父檢視內的結果。</summary>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">要叫用的子系動作方法名稱。</param>
      <param name="routeValues">包含路徑參數的物件。您可以使用 <paramref name="routeValues" /> 來提供繫結至動作方法參數的參數。<paramref name="routeValues" /> 參數會與原始路由值合併，並覆寫這些值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException">找不到必要的虛擬路徑資料。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>使用指定的控制器名稱叫用指定的子系動作方法，並呈現內嵌於父檢視內的結果。</summary>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">要叫用的子系動作方法名稱。</param>
      <param name="controllerName">包含動作方法的控制器名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException">找不到必要的虛擬路徑資料。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>使用指定的參數和控制器名稱叫用指定的子系動作方法，並呈現內嵌於父檢視內的結果。</summary>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">要叫用的子系動作方法名稱。</param>
      <param name="controllerName">包含動作方法的控制器名稱。</param>
      <param name="routeValues">包含路徑參數的物件。您可以使用 <paramref name="routeValues" /> 來提供繫結至動作方法參數的參數。<paramref name="routeValues" /> 參數會與原始路由值合併，並覆寫這些值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException">找不到必要的虛擬路徑資料。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>使用指定的參數和控制器名稱叫用指定的子系動作方法，並呈現內嵌於父檢視內的結果。</summary>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">要叫用的子系動作方法名稱。</param>
      <param name="controllerName">包含動作方法的控制器名稱。</param>
      <param name="routeValues">字典，其中包含路由的參數。您可以使用 <paramref name="routeValues" /> 來提供繫結至動作方法參數的參數。<paramref name="routeValues" /> 參數會與原始路由值合併，並覆寫這些值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException">找不到必要的虛擬路徑資料。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>使用指定的參數叫用指定的子系動作方法，並呈現內嵌於父檢視內的結果。</summary>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">要叫用的子系動作方法名稱。</param>
      <param name="routeValues">字典，其中包含路由的參數。您可以使用 <paramref name="routeValues" /> 來提供繫結至動作方法參數的參數。<paramref name="routeValues" /> 參數會與原始路由值合併，並覆寫這些值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 參數是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException">找不到必要的虛擬路徑資料。</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayExtensions">
      <summary>表示支援以 HTML 呈現物件值。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>傳回字串運算式所表示之物件中每一個屬性的 HTML 標記。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>使用其他檢視資料，傳回字串運算式所表示之物件中每一個屬性的 HTML 標記。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>使用指定的範本，傳回運算式表示的物件中每一個屬性的 HTML 標記。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>使用指定的範本和其他檢視資料，傳回運算式所表示之物件中每一個屬性的 HTML 標記。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>使用指定的範本和 HTML 欄位 ID，傳回運算式所表示之物件中每一個屬性的 HTML 標記。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="htmlFieldName">用來使 HTML input 項目之名稱意義清楚的字串，對於名稱相同的屬性，便會呈現這些項目。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>使用指定的範本、HTML 欄位 ID 和其他檢視資料，傳回運算式所表示之物件中每一個屬性的 HTML 標記。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="htmlFieldName">用來使 HTML input 項目之名稱意義清楚的字串，對於名稱相同的屬性，便會呈現這些項目。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>傳回 <see cref="T:System.Linq.Expressions.Expression" /> 運算式所表示之物件中每一個屬性的 HTML 標記。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>使用其他檢視資料，傳回包含指定運算式所表示之物件中每一個屬性值的字串。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>使用指定的範本，傳回由 <see cref="T:System.Linq.Expressions.Expression" /> 表示之物件中包含各個屬性值的字串。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>使用指定的範本和其他檢視資料，傳回包含指定運算式所表示之物件中每一個屬性值的字串。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>使用指定的範本和 HTML 欄位 ID，傳回 <see cref="T:System.Linq.Expressions.Expression" /> 所表示之物件中每一個屬性的 HTML 標記。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="htmlFieldName">用來使 HTML input 項目之名稱意義清楚的字串，對於名稱相同的屬性，便會呈現這些項目。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>使用範本、HTML 欄位 ID 和其他檢視資料，傳回指定運算式所表示之物件中每一個屬性的 HTML 標記。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="htmlFieldName">用來使 HTML input 項目之名稱意義清楚的字串，對於名稱相同的屬性，便會呈現這些項目。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper)">
      <summary>傳回模型中每一個屬性的 HTML 標記。</summary>
      <returns>模型中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>使用其他檢視資料，傳回模型中每一個屬性的 HTML 標記。</summary>
      <returns>模型中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>使用指定的範本，傳回模型中每一個屬性的 HTML 標記。</summary>
      <returns>模型中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>使用指定的範本和其他檢視資料，傳回模型中每一個屬性的 HTML 標記。</summary>
      <returns>模型中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>使用指定的範本和 HTML 欄位 ID，傳回模型中每一個屬性的 HTML 標記。</summary>
      <returns>模型中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="htmlFieldName">用來使 HTML input 項目之名稱意義清楚的字串，對於名稱相同的屬性，便會呈現這些項目。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>使用指定的範本、HTML 欄位 ID 和其他檢視資料，傳回模型中每一個屬性的 HTML 標記。</summary>
      <returns>模型中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="htmlFieldName">用來使 HTML input 項目之名稱意義清楚的字串，對於名稱相同的屬性，便會呈現這些項目。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayNameExtensions">
      <summary>提供用來取得顯示名稱的機制。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayName(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>取得顯示名稱。</summary>
      <returns>顯示名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含顯示名稱的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>取得模型的顯示名稱。</summary>
      <returns>模型的顯示名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含顯示名稱的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>取得模型的顯示名稱。</summary>
      <returns>模型的顯示名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含顯示名稱的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameForModel(System.Web.Mvc.HtmlHelper)">
      <summary>取得模型的顯示名稱。</summary>
      <returns>模型的顯示名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayTextExtensions">
      <summary>提供將物件值呈現為 HTML 的方式。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayText(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>傳回指定運算式所表示之物件中每一個屬性的 HTML 標記。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">運算式，可識別包含要顯示之屬性的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayTextFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>傳回指定運算式所表示之物件中每一個屬性的 HTML 標記。</summary>
      <returns>每一個屬性的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TResult">結果的型別。</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.EditorExtensions">
      <summary>表示應用程式中的 HTML input 項目支援。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>傳回運算式所表示之物件中每一個屬性的 HTML input 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>使用其他檢視資料，傳回運算式所表示之物件中每一個屬性的 HTML input 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>使用指定的範本，傳回運算式所表示之物件中每一個屬性的 HTML input 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>使用指定的範本和其他檢視資料，傳回運算式所表示之物件中每一個屬性的 HTML input 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>使用指定的範本和 HTML 欄位名稱，傳回運算式所表示之物件中每一個屬性的 HTML input 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="htmlFieldName">用來使 HTML input 項目之名稱意義清楚的字串，對於名稱相同的屬性，便會呈現這些項目。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>使用指定的範本、HTML 欄位名稱和其他檢視資料，傳回運算式所表示之物件中每一個屬性的 HTML input 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="htmlFieldName">用來使 HTML input 項目之名稱意義清楚的字串，對於名稱相同的屬性，便會呈現這些項目。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>傳回 <see cref="T:System.Linq.Expressions.Expression" /> 運算式所表示之物件中每一個屬性的 HTML input 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>使用其他檢視資料，傳回運算式所表示之物件中每一個屬性的 HTML input 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>使用指定的範本，傳回 <see cref="T:System.Linq.Expressions.Expression" /> 運算式所表示之物件中每一個屬性的 HTML input 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>使用指定的範本和其他檢視資料，傳回運算式所表示之物件中每一個屬性的 HTML input 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>使用指定的範本和 HTML 欄位名稱，傳回 <see cref="T:System.Linq.Expressions.Expression" /> 運算式所表示之物件中每一個屬性的 HTML input 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="htmlFieldName">用來使 HTML input 項目之名稱意義清楚的字串，對於名稱相同的屬性，便會呈現這些項目。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>使用指定的範本、HTML 欄位名稱和其他檢視資料，傳回運算式所表示之物件中每一個屬性的 HTML input 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="htmlFieldName">用來使 HTML input 項目之名稱意義清楚的字串，對於名稱相同的屬性，便會呈現這些項目。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper)">
      <summary>針對模型中每一個屬性傳回 HTML input 項目。</summary>
      <returns>模型中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>使用其他檢視資料，傳回模型中每一個屬性的 HTML input 項目。</summary>
      <returns>模型中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>使用指定的範本，針對模型中的每一個屬性傳回 HTML input 項目。</summary>
      <returns>模型和指定範本中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>使用指定的範本和其他檢視資料，傳回模型中每一個屬性的 HTML input 項目。</summary>
      <returns>模型中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>使用指定的範本名稱和 HTML 欄位名稱，傳回模型中每一個屬性的 HTML input 項目。</summary>
      <returns>模型和具名範本中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="htmlFieldName">用來使 HTML input 項目之名稱意義清楚的字串，對於名稱相同的屬性，便會呈現這些項目。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>使用範本名稱、HTML 欄位名稱和其他檢視資料，傳回模型中每一個屬性的 HTML input 項目。</summary>
      <returns>模型中每一個屬性的 HTML input 項目。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="templateName">用來呈現物件之範本的名稱。</param>
      <param name="htmlFieldName">用來使 HTML input 項目之名稱意義清楚的字串，對於名稱相同的屬性，便會呈現這些項目。</param>
      <param name="additionalViewData">匿名物件，可包含額外的檢視資料，此檢視資料將合併到為範本所建立的 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 執行個體。</param>
    </member>
    <member name="T:System.Web.Mvc.Html.EnumHelper">
      <summary>提供使用列舉值和選取清單的方法。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)">
      <summary>取得以指定類型定義之列舉常數對應之 <see cref="T:System.Web.Mvc.SelectListItem" /> 物件清單。</summary>
      <returns>指定的 <paramref name="type" /> 之清單。</returns>
      <param name="type">要評估的類型。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type,System.Enum)">
      <summary>取得以指定類型定義之列舉常數對應之 <see cref="T:System.Web.Mvc.SelectListItem" /> 物件清單。同時確定如果不符合已定義的常數，也會 <paramref name="value" /> 進行往返並將已傳回清單中的一個元素的 Selected 屬性設為 true，以符合 <paramref name="value" />。</summary>
      <returns>指定 <paramref name="type" /> 的清單，可能會擴充為包含無法辨識的 <paramref name="value" />。</returns>
      <param name="type">要評估的類型。</param>
      <param name="value">要選取的類型值。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)">
      <summary>取得以指定中繼資料定義之列舉常數對應之 <see cref="T:System.Web.Mvc.SelectListItem" /> 物件清單。</summary>
      <returns>指定的中繼資料之清單。</returns>
      <param name="metadata">要評估的模型中繼資料。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata,System.Enum)">
      <summary>取得以指定中繼資料定義之列舉常數對應之 <see cref="T:System.Web.Mvc.SelectListItem" /> 物件清單。同時確定如果不符合已定義的常數，值也會進行往返並將已傳回清單中的一個元素的 Selected 屬性設為 true，以符合值。</summary>
      <returns>指定 <paramref name="metadata" /> 的清單，可能會擴充為包含無法辨識的 <paramref name="value" />。</returns>
      <param name="metadata">要評估的中繼資料。</param>
      <param name="value">要選取的中繼資料類型值。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.IsValidForEnumHelper(System.Type)">
      <summary>取得一值，指出指定的類型或此類型的運算式是否可用於 <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)" /> 和 <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> 呼叫中。</summary>
      <returns>如果 <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)" /> 在傳送指定類型時不會擲出，且 <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> 在傳送此類型的運算式時不會擲出則為 true，否則為 false。</returns>
      <param name="type">要檢查的類型。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.IsValidForEnumHelper(System.Web.Mvc.ModelMetadata)">
      <summary>取得一值，指出指定的中繼資料或相關的運算式是否可用於 <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)" /> 和 <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> 呼叫中。</summary>
      <returns>如果 <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)" /> 在傳送指定 <see cref="T:System.Web.Mvc.ModelMetadata" /> 時不會擲出，且 <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> 在傳送此類型的運算式時不會擲出則為 true，否則為 false。</returns>
      <param name="metadata">要檢查的中繼資料。</param>
    </member>
    <member name="T:System.Web.Mvc.Html.FormExtensions">
      <summary>表示應用程式中的 HTML 支援。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。此表單會使用 POST 方法，而且要求是由檢視的動作方法處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應，並在動作屬性中包含路由值。此表單會使用 POST 方法，而且要求是由檢視的動作方法處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應，並將動作標記設為指定的控制器及動作。此表單會使用 POST 方法。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應，並將動作標記設為指定的控制器、動作及路由值。此表單會使用 POST 方法。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應，並將動作標記設為指定的控制器、動作及路由值。此表單會使用指定的 HTTP 方法。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="method">用於處理此表單的 HTTP 方法。可以是 GET 或 POST。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應，並將動作標記設為指定的控制器、動作及路由值。此表單會使用指定的 HTTP 方法，並包含 HTML 屬性。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="method">用於處理此表單的 HTTP 方法。可以是 GET 或 POST。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應，並將動作標記設為指定的控制器及動作。此表單會使用指定的 HTTP 方法。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="method">用於處理此表單的 HTTP 方法。可以是 GET 或 POST。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應，並將動作標記設為指定的控制器及動作。此表單會使用指定的 HTTP 方法，並包含來自字典的 HTML 屬性。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="method">用於處理此表單的 HTTP 方法。可以是 GET 或 POST。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應，並將動作標記設為指定的控制器及動作。此表單會使用指定的 HTTP 方法，並包含 HTML 屬性。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="method">用於處理此表單的 HTTP 方法。可以是 GET 或 POST。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應，並將動作標記設為指定的控制器、動作，以及來自路由值字典的路由值。此表單會使用 POST 方法。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應，並將動作標記設為指定的控制器、動作，以及來自路由值字典的路由值。此表單會使用指定的 HTTP 方法。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="method">用於處理此表單的 HTTP 方法。可以是 GET 或 POST。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應，並將動作標記設為指定的控制器、動作，以及來自路由值字典的路由值。此表單會使用指定的 HTTP 方法，並包含來自字典的 HTML 屬性。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="actionName">動作方法的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="method">用於處理此表單的 HTTP 方法。可以是 GET 或 POST。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應，並在動作屬性中包含來自路由值字典的路由值。此表單會使用 POST 方法，而且要求是由檢視的動作方法處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。當使用者提交表單時，要求會由路由目標處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。當使用者提交表單時，要求會由路由目標處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="routeName">用來取得表單張貼 URL 之路由的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。當使用者提交表單時，要求會由路由目標處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="routeName">用來取得表單張貼 URL 之路由的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。當使用者提交表單時，要求會由路由目標處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="routeName">用來取得表單張貼 URL 之路由的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="method">用於處理此表單的 HTTP 方法。可以是 GET 或 POST。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。當使用者提交表單時，要求會由路由目標處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="routeName">用來取得表單張貼 URL 之路由的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="method">用於處理此表單的 HTTP 方法。可以是 GET 或 POST。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。當使用者提交表單時，要求會由路由目標處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="routeName">用來取得表單張貼 URL 之路由的名稱。</param>
      <param name="method">用於處理此表單的 HTTP 方法。可以是 GET 或 POST。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。當使用者提交表單時，要求會由路由目標處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="routeName">用來取得表單張貼 URL 之路由的名稱。</param>
      <param name="method">用於處理此表單的 HTTP 方法。可以是 GET 或 POST。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。當使用者提交表單時，要求會由路由目標處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="routeName">用來取得表單張貼 URL 之路由的名稱。</param>
      <param name="method">用於處理此表單的 HTTP 方法。可以是 GET 或 POST。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。當使用者提交表單時，要求會由路由目標處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="routeName">用來取得表單張貼 URL 之路由的名稱。</param>
      <param name="routeValues">包含路由參數的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。當使用者提交表單時，要求會由路由目標處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="routeName">用來取得表單張貼 URL 之路由的名稱。</param>
      <param name="routeValues">包含路由參數的物件。</param>
      <param name="method">用於處理此表單的 HTTP 方法。可以是 GET 或 POST。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。當使用者提交表單時，要求會由路由目標處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="routeName">用來取得表單張貼 URL 之路由的名稱。</param>
      <param name="routeValues">包含路由參數的物件。</param>
      <param name="method">用於處理此表單的 HTTP 方法。可以是 GET 或 POST。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>將開頭的 &lt;form&gt; 標記寫入至回應。當使用者提交表單時，要求會由路由目標處理。</summary>
      <returns>開頭的 &lt;form&gt; 標記。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="routeValues">包含路由參數的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.EndForm(System.Web.Mvc.HtmlHelper)">
      <summary>呈現回應的結尾 &lt;/form&gt; 標記。</summary>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
    </member>
    <member name="T:System.Web.Mvc.Html.InputExtensions">
      <summary>表示應用程式中的 HTML 輸入控制項支援。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>使用指定的 HTML Helper 和表單欄位名稱，傳回核取方塊 input 項目。</summary>
      <returns>其 type 屬性設定為 "checkbox" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)">
      <summary>使用指定的 HTML Helper、表單欄位名稱以及可表示是否已經選取核取方塊的值，來傳回核取方塊 input 項目。</summary>
      <returns>其 type 屬性設定為 "checkbox" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱。</param>
      <param name="isChecked">true 表示選取核取方塊，否則為 false。核取方塊的值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 checked 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML Helper、表單欄位名稱、可表示是否已經選取核取方塊的值以及 HTML 屬性，來傳回核取方塊 input 項目。</summary>
      <returns>其 type 屬性設定為 "checkbox" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱。</param>
      <param name="isChecked">true 表示選取核取方塊，否則為 false。核取方塊的值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 checked 屬性。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)">
      <summary>使用指定的 HTML Helper、表單欄位名稱、可表示是否已經選取核取方塊的值以及 HTML 屬性，來傳回核取方塊 input 項目。</summary>
      <returns>其 type 屬性設定為 "checkbox" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱。</param>
      <param name="isChecked">true 表示選取核取方塊，否則為 false。核取方塊的值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 checked 屬性。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML Helper、表單欄位名稱和 HTML 屬性，傳回核取方塊 input 項目。</summary>
      <returns>其 type 屬性設定為 "checkbox" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>使用指定的 HTML Helper、表單欄位名稱和 HTML 屬性，傳回核取方塊 input 項目。</summary>
      <returns>其 type 屬性設定為 "checkbox" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>傳回指定運算式所表示之物件中每一個屬性的核取方塊 input 項目。</summary>
      <returns>HTML input 項目，其 type 屬性 (Attribute) 會針對指定運算式所表示之物件中的每一個屬性 (Property) 設定為 "checkbox"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的核取方塊 input 項目。</summary>
      <returns>HTML input 項目，其 type 屬性 (Attribute) 使用指定的 HTML 屬性 (Attribute)，針對指定運算式所表示之物件中的每一個屬性 (Property) 設定為 "checkbox"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="htmlAttributes">字典，其中包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object)">
      <summary>使用指定的 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的核取方塊 input 項目。</summary>
      <returns>HTML input 項目，其 type 屬性 (Attribute) 使用指定的 HTML 屬性 (Attribute)，針對指定運算式所表示之物件中的每一個屬性 (Property) 設定為 "checkbox"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>使用指定的 HTML Helper 和表單欄位名稱，傳回隱藏的 input 項目。</summary>
      <returns>其 type 屬性設定為 "hidden" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>使用指定的 HTML Helper、表單欄位名稱和值，傳回隱藏的 input 項目。</summary>
      <returns>其 type 屬性設定為 "hidden" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">隱藏 input 項目的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML Helper、表單欄位名稱、值和 HTML 屬性，傳回隱藏的 input 項目。</summary>
      <returns>其 type 屬性設定為 "hidden" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">隱藏 input 項目的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>使用指定的 HTML Helper、表單欄位名稱、值和 HTML 屬性，傳回隱藏的 input 項目。</summary>
      <returns>其 type 屬性設定為 "hidden" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">隱藏 input 項目的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>傳回指定運算式所表示之物件中每一個屬性的 HTML 隱藏 input 項目。</summary>
      <returns>input 項目，其 type 屬性 (Attribute) 會針對運算式所表示之物件中的每一個屬性 (Property) 設定為 "hidden"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的 HTML 隱藏 input 項目。</summary>
      <returns>input 項目，其 type 屬性 (Attribute) 會針對運算式所表示之物件中的每一個屬性 (Property) 設定為 "hidden"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>使用指定的 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的 HTML 隱藏 input 項目。</summary>
      <returns>input 項目，其 type 屬性 (Attribute) 會針對運算式所表示之物件中的每一個屬性 (Property) 設定為 "hidden"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>使用指定的 HTML Helper 和表單欄位名稱，傳回密碼 input 項目。</summary>
      <returns>其 type 屬性設定為 "password" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>使用指定的 HTML Helper、表單欄位名稱和值，傳回密碼 input 項目。</summary>
      <returns>其 type 屬性設定為 "password" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">密碼 input 項目的值。如果未提供此參數的值，則會使用 html 屬性中的 value 屬性來擷取值。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML Helper、表單欄位名稱、值和 HTML 屬性，傳回密碼 input 項目。</summary>
      <returns>其 type 屬性設定為 "password" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">密碼 input 項目的值。如果未提供此參數的值，則會使用 html 屬性中的 value 屬性來擷取值。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>使用指定的 HTML Helper、表單欄位名稱、值和 HTML 屬性，傳回密碼 input 項目。</summary>
      <returns>其 type 屬性設定為 "password" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">密碼 input 項目的值。如果未提供此參數的值，則會使用 html 屬性中的 value 屬性來擷取值。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>傳回指定運算式所表示之物件中每一個屬性的密碼 input 項目。</summary>
      <returns>HTML input 項目，其 type 屬性 (Attribute) 會針對指定運算式所表示之物件中的每一個屬性 (Property) 設定為 "password"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的密碼 input 項目。</summary>
      <returns>HTML input 項目，其 type 屬性 (Attribute) 使用指定的 HTML 屬性 (Attribute)，針對指定運算式所表示之物件中的每一個屬性 (Property) 設定為 "password"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="htmlAttributes">字典，其中包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>使用指定的 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的密碼 input 項目。</summary>
      <returns>HTML input 項目，其 type 屬性 (Attribute) 使用指定的 HTML 屬性 (Attribute)，針對指定運算式所表示之物件中的每一個屬性 (Property) 設定為 "password"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>傳回用來顯示互斥選項的選項按鈕 input 項目。</summary>
      <returns>其 type 屬性設定為 "radio" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">選取之圓鈕的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean)">
      <summary>傳回用來顯示互斥選項的選項按鈕 input 項目。</summary>
      <returns>其 type 屬性設定為 "radio" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">選取之圓鈕的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <param name="isChecked">true 表示選取選項按鈕，否則為 false。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回用來顯示互斥選項的選項按鈕 input 項目。</summary>
      <returns>其 type 屬性設定為 "radio" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">選取之圓鈕的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <param name="isChecked">true 表示選取選項按鈕，否則為 false。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)">
      <summary>傳回用來顯示互斥選項的選項按鈕 input 項目。</summary>
      <returns>其 type 屬性設定為 "radio" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">選取之圓鈕的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <param name="isChecked">true 表示選取選項按鈕，否則為 false。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回用來顯示互斥選項的選項按鈕 input 項目。</summary>
      <returns>其 type 屬性設定為 "radio" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">選取之圓鈕的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>傳回用來顯示互斥選項的選項按鈕 input 項目。</summary>
      <returns>其 type 屬性設定為 "radio" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">選取之圓鈕的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>傳回指定運算式所表示之物件中每一個屬性的選項按鈕 input 項目。</summary>
      <returns>HTML input 項目，其 type 屬性 (Attribute) 會針對指定運算式所表示之物件中的每一個屬性 (Property) 設定為 "radio"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="value">選取之圓鈕的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的選項按鈕 input 項目。</summary>
      <returns>HTML input 項目，其 type 屬性 (Attribute) 使用指定的 HTML 屬性 (Attribute)，針對指定運算式所表示之物件中的每一個屬性 (Property) 設定為 "radio"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="value">選取之圓鈕的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <param name="htmlAttributes">字典，其中包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Object)">
      <summary>使用指定的 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的選項按鈕 input 項目。</summary>
      <returns>HTML input 項目，其 type 屬性 (Attribute) 使用指定的 HTML 屬性 (Attribute)，針對指定運算式所表示之物件中的每一個屬性 (Property) 設定為 "radio"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="value">選取之圓鈕的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>使用指定的 HTML Helper 和表單欄位名稱，傳回文字 input 項目。</summary>
      <returns>其 type 屬性設定為 "text" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>使用指定的 HTML Helper、表單欄位名稱和值，傳回文字 input 項目。</summary>
      <returns>其 type 屬性設定為 "text" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">文字 input 項目的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML Helper、表單欄位名稱、值和 HTML 屬性，傳回文字 input 項目。</summary>
      <returns>其 type 屬性設定為 "text" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">文字 input 項目的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>使用指定的 HTML Helper、表單欄位名稱、值和 HTML 屬性，傳回文字 input 項目。</summary>
      <returns>其 type 屬性設定為 "text" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">文字 input 項目的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)">
      <summary>傳回文字 input 項目。</summary>
      <returns>其 type 屬性設定為 "text" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱。</param>
      <param name="value">文字 input 項目的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <param name="format">用來格式化輸入的字串。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回文字 input 項目。</summary>
      <returns>其 type 屬性設定為 "text" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">文字 input 項目的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <param name="format">用來格式化輸入的字串。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Object)">
      <summary>傳回文字 input 項目。</summary>
      <returns>其 type 屬性設定為 "text" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">表單欄位名稱以及用來查詢值的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 索引鍵。</param>
      <param name="value">文字 input 項目的值。值是依此順序擷取 - <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件、此參數的值、<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件，最後為 html 屬性的 value 屬性。</param>
      <param name="format">用來格式化輸入的字串。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>傳回指定運算式所表示之物件中每一個屬性的文字 input 項目。</summary>
      <returns>HTML input 項目，其 type 屬性 (Attribute) 會針對運算式所表示之物件中的每一個屬性 (Property) 設定為 "text"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="expression" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的文字 input 項目。</summary>
      <returns>HTML input 項目，其 type 屬性 (Attribute) 會針對運算式所表示之物件中的每一個屬性 (Property) 設定為 "text"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="htmlAttributes">字典，其中包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="expression" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>使用指定的 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的文字 input 項目。</summary>
      <returns>HTML input 項目，其 type 屬性 (Attribute) 會針對運算式所表示之物件中的每一個屬性 (Property) 設定為 "text"。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="expression" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>傳回文字 input 項目。</summary>
      <returns>其 type 屬性設定為 "text" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="format">用來格式化輸入的字串。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回文字 input 項目。</summary>
      <returns>其 type 屬性設定為 "text" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="format">用來格式化輸入的字串。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>傳回文字 input 項目。</summary>
      <returns>其 type 屬性設定為 "text" 的 input 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="format">用來格式化輸入的字串。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.LabelExtensions">
      <summary>表示 ASP.NET MVC 檢視中的 HTML label 項目支援。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別要顯示的屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別要顯示的屬性。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別要顯示的屬性。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>使用標籤文字，傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別要顯示的屬性。</param>
      <param name="labelText">要顯示的標籤文字。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別要顯示的屬性。</param>
      <param name="labelText">標籤文字。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別要顯示的屬性。</param>
      <param name="labelText">標籤文字。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別要顯示的屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別要顯示的屬性。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別要顯示的屬性。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">數值。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>使用標籤文字，傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別要顯示的屬性。</param>
      <param name="labelText">要顯示的標籤文字。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別要顯示的屬性。</param>
      <param name="labelText">要顯示的標籤文字。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別要顯示的屬性。</param>
      <param name="labelText">標籤文字。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TValue">數值。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper)">
      <summary>傳回 HTML label 項目，以及由模型表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由模型表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>使用標籤文字，傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="labelText">要顯示的標籤文字。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="labelText">標籤文字。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>傳回 HTML label 項目，以及由指定運算式表示之屬性的屬性名稱。</summary>
      <returns>HTML label 項目以及由運算式表示之屬性的屬性名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="labelText">標籤文字。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="T:System.Web.Mvc.Html.LinkExtensions">
      <summary>表示應用程式中的 HTML 連結支援。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>傳回指定之連結文字及動作的錨定項目 (a 項目)。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作的名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>傳回指定之連結文字、動作及路由值的錨定項目 (a 項目)。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>傳回指定之連結文字、動作、路由值及 HTML 屬性的錨定項目 (a 項目)。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。這些屬性 (Attribute) 是藉由檢查物件之屬性 (Property)，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>傳回指定之連結文字、動作及控制器的錨定項目 (a 項目)。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>傳回指定之連結文字、動作、控制器、路由值及 HTML 屬性的錨定項目 (a 項目)。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>傳回指定之連結文字、動作、控制器、通訊協定、主機名稱、URL 片段、路由值及 HTML 屬性的錨定項目 (a 項目)。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="protocol">URL 的通訊協定，例如 "http" 或 "https"。</param>
      <param name="hostName">URL 的主機名稱。</param>
      <param name="fragment">URL 片段名稱 (錨定名稱)。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回指定之連結文字、動作、控制器、通訊協定、主機名稱、URL 片段、路由值 (作為路由值字典)，以及 HTML 屬性 (作為字典) 的錨定項目 (a 項目)。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="protocol">URL 的通訊協定，例如 "http" 或 "https"。</param>
      <param name="hostName">URL 的主機名稱。</param>
      <param name="fragment">URL 片段名稱 (錨定名稱)。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回指定之連結文字、動作、控制器、路由值 (作為路由值字典)，以及 HTML 屬性 (作為字典) 的錨定項目 (a 項目)。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作的名稱。</param>
      <param name="controllerName">控制器的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>傳回指定之連結文字、動作，以及路由值 (作為路由值字典) 的錨定項目 (a 項目)。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回指定之連結文字、動作、路由值 (作為路由值字典)，以及 HTML 屬性 (作為字典) 的錨定項目 (a 項目)。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="actionName">動作的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>傳回錨定項目 (a 項目)，這個項目包含指定之動作的虛擬路徑。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>傳回錨定項目 (a 項目)，這個項目包含指定之動作的虛擬路徑。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>傳回錨定項目 (a 項目)，這個項目包含指定之動作的虛擬路徑。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來傳回虛擬路徑之路由的名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>傳回錨定項目 (a 項目)，這個項目包含指定之動作的虛擬路徑。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來傳回虛擬路徑之路由的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>傳回錨定項目 (a 項目)，這個項目包含指定之動作的虛擬路徑。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來傳回虛擬路徑之路由的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>傳回錨定項目 (a 項目)，這個項目包含指定之動作的虛擬路徑。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來傳回虛擬路徑之路由的名稱。</param>
      <param name="protocol">URL 的通訊協定，例如 "http" 或 "https"。</param>
      <param name="hostName">URL 的主機名稱。</param>
      <param name="fragment">URL 片段名稱 (錨定名稱)。</param>
      <param name="routeValues">包含路徑參數的物件。這些參數是藉由檢查物件之屬性，透過反映所擷取而來。此物件通常是使用物件初始設定式語法來建立。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回錨定項目 (a 項目)，這個項目包含指定之動作的虛擬路徑。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來傳回虛擬路徑之路由的名稱。</param>
      <param name="protocol">URL 的通訊協定，例如 "http" 或 "https"。</param>
      <param name="hostName">URL 的主機名稱。</param>
      <param name="fragment">URL 片段名稱 (錨定名稱)。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>傳回錨定項目 (a 項目)，這個項目包含指定之動作的虛擬路徑。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來傳回虛擬路徑之路由的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回錨定項目 (a 項目)，這個項目包含指定之動作的虛擬路徑。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeName">用來傳回虛擬路徑之路由的名稱。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>傳回錨定項目 (a 項目)，這個項目包含指定之動作的虛擬路徑。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回錨定項目 (a 項目)，這個項目包含指定之動作的虛擬路徑。</summary>
      <returns>錨定項目 (a 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="linkText">錨定項目的內部文字。</param>
      <param name="routeValues">包含路徑參數的物件。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 參數是 null 或空白。</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.MvcForm">
      <summary>表示 MVC 檢視中的 HTML form 項目。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.HttpResponseBase)">
      <summary>使用指定的 HTTP 回應物件，初始化 <see cref="T:System.Web.Mvc.Html.MvcForm" /> 類別的新執行個體。</summary>
      <param name="httpResponse">HTTP 回應物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpResponse " /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.Mvc.ViewContext)">
      <summary>使用指定的檢視內容來初始化 <see cref="T:System.Web.Mvc.Html.MvcForm" /> 類別的新執行個體。</summary>
      <param name="viewContext">封裝呈現檢視所需資訊的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewContext" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose">
      <summary>將 <see cref="T:System.Web.Mvc.Html.MvcForm" /> 類別目前的執行個體所使用的資源全部釋出。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose(System.Boolean)">
      <summary>釋放 Unmanaged 資源，並選擇性地釋放由 <see cref="T:System.Web.Mvc.Html.MvcForm" /> 類別目前的執行個體使用之 Managed 資源。</summary>
      <param name="disposing">true 表示釋放 Managed 和 Unmanaged 資源；false 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.EndForm">
      <summary>中止表單，並處置所有的表單資源。</summary>
    </member>
    <member name="T:System.Web.Mvc.Html.NameExtensions">
      <summary>取得 <see cref="T:System.Web.Mvc.HtmlHelper" /> 字串的 HTML ID 和名稱屬性。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.Id(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>取得 <see cref="T:System.Web.Mvc.HtmlHelper" /> 字串的 ID。</summary>
      <returns>運算式所表示之物件的 HTML ID 屬性值。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">運算式，可識別包含 ID 的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.IdFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary> 取得 <see cref="T:System.Web.Mvc.HtmlHelper`1" /> 字串的 ID。</summary>
      <returns>運算式所表示之物件的 HTML ID 屬性值。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含 ID 的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.IdForModel(System.Web.Mvc.HtmlHelper)">
      <summary>取得 <see cref="T:System.Web.Mvc.HtmlHelper" /> 字串的 ID。</summary>
      <returns>運算式所表示之物件的 HTML ID 屬性值。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.Name(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>取得運算式所表示之物件的完整 HTML 欄位名稱。</summary>
      <returns>運算式所表示之物件的完整 HTML 欄位名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">運算式，可識別包含名稱的物件。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.NameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>取得運算式所表示之物件的完整 HTML 欄位名稱。</summary>
      <returns>運算式所表示之物件的完整 HTML 欄位名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含名稱的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.NameForModel(System.Web.Mvc.HtmlHelper)">
      <summary>取得運算式所表示之物件的完整 HTML 欄位名稱。</summary>
      <returns>運算式所表示之物件的完整 HTML 欄位名稱。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
    </member>
    <member name="T:System.Web.Mvc.Html.PartialExtensions">
      <summary>代表可以將部分檢視轉譯為 HTML 編碼字串的功能。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>將指定的部分檢視轉譯成 HTML 編碼字串。</summary>
      <returns>轉譯為 HTML 編碼字串的部分檢視。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="partialViewName">要轉譯的部分檢視名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>將指定的部分檢視轉譯成 HTML 編碼字串。</summary>
      <returns>轉譯為 HTML 編碼字串的部分檢視。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="partialViewName">要轉譯的部分檢視名稱。</param>
      <param name="model">部分檢視的模型。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>將指定的部分檢視轉譯成 HTML 編碼字串。</summary>
      <returns>轉譯為 HTML 編碼字串的部分檢視。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="partialViewName">部分檢視的名稱。</param>
      <param name="model">部分檢視的模型。</param>
      <param name="viewData">部分檢視的檢視資料字典。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>將指定的部分檢視轉譯成 HTML 編碼字串。</summary>
      <returns>轉譯為 HTML 編碼字串的部分檢視。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="partialViewName">要轉譯的部分檢視名稱。</param>
      <param name="viewData">部分檢視的檢視資料字典。</param>
    </member>
    <member name="T:System.Web.Mvc.Html.RenderPartialExtensions">
      <summary>提供呈現部分檢視的支援。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>使用指定的 HTML Helper 來呈現指定的部分檢視。</summary>
      <param name="htmlHelper">HTML Helper。</param>
      <param name="partialViewName">部分檢視的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>呈現指定的部分檢視並將目前的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件之複本傳送給它，但 Model 屬性必須設為指定的模型。</summary>
      <param name="htmlHelper">HTML Helper。</param>
      <param name="partialViewName">部分檢視的名稱。</param>
      <param name="model">模型。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>呈現指定的部分檢視並以指定的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件取代其 ViewData 屬性，然後將檢視資料的 Model 屬性設為指定的模型。</summary>
      <param name="htmlHelper">HTML Helper。</param>
      <param name="partialViewName">部分檢視的名稱。</param>
      <param name="model">部分檢視的模型。</param>
      <param name="viewData">部分檢視的檢視資料。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>呈現指定的部分檢視，並以指定的 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 物件取代部分檢視的 ViewData 屬性。</summary>
      <param name="htmlHelper">HTML Helper。</param>
      <param name="partialViewName">部分檢視的名稱。</param>
      <param name="viewData">檢視資料。</param>
    </member>
    <member name="T:System.Web.Mvc.Html.SelectExtensions">
      <summary>表示支援在清單中進行選取。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>使用指定的 HTML Helper 和表單欄位名稱，傳回單一選取 select 項目。</summary>
      <returns>HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>使用指定的 HTML Helper、表單欄位名稱和指定的清單項目，傳回單一選取 select 項目。</summary>
      <returns>HTML select 項目，其中針對清單內的每個項目包含一個 option 子項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML Helper、表單欄位名稱、指定的清單項目和指定的 HTML 屬性，傳回單一選取 select 項目。</summary>
      <returns>HTML select 項目，其中針對清單內的每個項目包含一個 option 子項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>使用指定的 HTML Helper、表單欄位名稱、指定的清單項目和指定的 HTML 屬性，傳回單一選取 select 項目。</summary>
      <returns>HTML select 項目，其中針對清單內的每個項目包含一個 option 子項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>使用指定的 HTML Helper、表單欄位名稱、指定的清單項目和選項標籤，傳回單一選取 select 項目。</summary>
      <returns>HTML select 項目，其中針對清單內的每個項目包含一個 option 子項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <param name="optionLabel">預設空白項目的文字。這個參數可以是 null。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML Helper、表單欄位名稱、指定的清單項目、選項標籤和指定的 HTML 屬性，傳回單一選取 select 項目。</summary>
      <returns>HTML select 項目，其中針對清單內的每個項目包含一個 option 子項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <param name="optionLabel">預設空白項目的文字。這個參數可以是 null。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>使用指定的 HTML Helper、表單欄位名稱、指定的清單項目、選項標籤和指定的 HTML 屬性，傳回單一選取 select 項目。</summary>
      <returns>HTML select 項目，其中針對清單內的每個項目包含一個 option 子項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <param name="optionLabel">預設空白項目的文字。這個參數可以是 null。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>使用指定的 HTML Helper、表單欄位名稱和選項標籤，傳回單一選取 select 項目。</summary>
      <returns>HTML select 項目，其中針對清單內的每個項目包含一個 option 子項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="optionLabel">預設空白項目的文字。這個參數可以是 null。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>使用指定的清單項目，傳回指定運算式所表示之物件中每一個屬性的 HTML select 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的清單項目和 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的 HTML select 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>使用指定的清單項目和 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的 HTML select 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>使用指定的清單項目和選項標籤，傳回指定運算式所表示之物件中每一個屬性的 HTML select 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <param name="optionLabel">預設空白項目的文字。這個參數可以是 null。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的清單項目、選項標籤和 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的 HTML select 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <param name="optionLabel">預設空白項目的文字。這個參數可以是 null。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>使用指定的清單項目、選項標籤和 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的 HTML select 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <param name="optionLabel">預設空白項目的文字。這個參數可以是 null。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>傳回指定運算式所表示之列舉中每一個值的 HTML select 項目。</summary>
      <returns>運算式所表示之列舉中每一個值的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之值的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TEnum">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回指定運算式所表示之列舉中每一個值的 HTML select 項目。</summary>
      <returns>運算式所表示之列舉中每一個值的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之值的物件。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TEnum">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>傳回指定運算式所表示之列舉中每一個值的 HTML select 項目。</summary>
      <returns>運算式所表示之列舉中每一個值的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之值的物件。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TEnum">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>傳回指定運算式所表示之列舉中每一個值的 HTML select 項目。</summary>
      <returns>運算式所表示之列舉中每一個值的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之值的物件。</param>
      <param name="optionLabel">預設空白項目的文字。這個參數可以是 null。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TEnum">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回指定運算式所表示之列舉中每一個值的 HTML select 項目。</summary>
      <returns>運算式所表示之列舉中每一個值的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之值的物件。</param>
      <param name="optionLabel">預設空白項目的文字。這個參數可以是 null。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TEnum">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>傳回指定運算式所表示之列舉中每一個值的 HTML select 項目。</summary>
      <returns>運算式所表示之列舉中每一個值的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之值的物件。</param>
      <param name="optionLabel">預設空白項目的文字。這個參數可以是 null。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TEnum">值的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>使用指定的 HTML Helper 和表單欄位名稱，傳回多重選取 select 項目。</summary>
      <returns>HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>使用指定的 HTML Helper、表單欄位名稱和指定的清單項目，傳回多重選取 select 項目。</summary>
      <returns>HTML select 項目，其中針對清單內的每個項目包含一個 option 子項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML Helper、表單欄位名稱、指定的清單項目和指定的 HTML 屬性，傳回多重選取 select 項目。</summary>
      <returns>HTML select 項目，其中針對清單內的每個項目包含一個 option 子項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>使用指定的 HTML Helper、表單欄位名稱和指定的清單項目，傳回多重選取 select 項目。</summary>
      <returns>HTML select 項目，其中針對清單內的每個項目包含一個 option 子項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是 null 或空白。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>使用指定的清單項目，傳回指定運算式所表示之物件中每一個屬性的 HTML select 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的清單項目和 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的 HTML select 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>使用指定的清單項目和 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的 HTML select 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML select 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要顯示之屬性的物件。</param>
      <param name="selectList">
        <see cref="T:System.Web.Mvc.SelectListItem" /> 物件的集合，這些物件是用來填入下拉式清單。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.TextAreaExtensions">
      <summary>表示對 HTML textarea 控制項的支援。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>使用指定的 HTML Helper 和表單欄位名稱，傳回指定的 textarea 項目。</summary>
      <returns>textarea 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML Helper、表單欄位名稱和指定的 HTML 屬性，傳回指定的 textarea 項目。</summary>
      <returns>textarea 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>使用指定的 HTML Helper 和 HTML 屬性，傳回指定的 textarea 項目。</summary>
      <returns>textarea 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>使用指定的 HTML Helper、表單欄位名稱和文字內容，傳回指定的 textarea 項目。</summary>
      <returns>textarea 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="value">文字內容。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML Helper、表單欄位名稱、文字內容和指定的 HTML 屬性，傳回指定的 textarea 項目。</summary>
      <returns>textarea 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="value">文字內容。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML Helper、表單欄位名稱、文字內容、資料列數和資料行數，以及指定的 HTML 屬性，傳回指定的 textarea 項目。</summary>
      <returns>textarea 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="value">文字內容。</param>
      <param name="rows">列的數目。</param>
      <param name="columns">行的數目。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>使用指定的 HTML Helper、表單欄位名稱、文字內容、資料列數和資料行數，以及指定的 HTML 屬性，傳回指定的 textarea 項目。</summary>
      <returns>textarea 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="value">文字內容。</param>
      <param name="rows">列的數目。</param>
      <param name="columns">行的數目。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>使用指定的 HTML Helper、表單欄位名稱、文字內容和指定的 HTML 屬性，傳回指定的 textarea 項目。</summary>
      <returns>textarea 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">要傳回的表單欄位名稱。</param>
      <param name="value">文字內容。</param>
      <param name="htmlAttributes">物件，包含要針對項目設定的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>傳回指定運算式所表示之物件中每一個屬性的 HTML textarea 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML textarea 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的 HTML textarea 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML textarea 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="htmlAttributes">字典，其中包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的 HTML 屬性與資料列數和資料行數，傳回指定運算式所表示之物件中每一個屬性的 HTML textarea 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML textarea 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="rows">列的數目。</param>
      <param name="columns">行的數目。</param>
      <param name="htmlAttributes">字典，其中包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Object)">
      <summary>使用指定的 HTML 屬性與資料列數和資料行數，傳回指定運算式所表示之物件中每一個屬性的 HTML textarea 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML textarea 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="rows">列的數目。</param>
      <param name="columns">行的數目。</param>
      <param name="htmlAttributes">字典，其中包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>使用指定的 HTML 屬性，傳回指定運算式所表示之物件中每一個屬性的 HTML textarea 項目。</summary>
      <returns>運算式所表示之物件中每一個屬性的 HTML textarea 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="htmlAttributes">字典，其中包含要針對項目設定的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 參數是 null。</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.ValidationExtensions">
      <summary>提供支援，以驗證 HTML 表單的輸入內容。</summary>
    </member>
    <member name="P:System.Web.Mvc.Html.ValidationExtensions.ResourceClassKey">
      <summary>取得或設定包含當地語系化字串值的資源檔名稱 (類別機碼)。</summary>
      <returns>資源檔的名稱 (類別機碼)。</returns>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.Validate(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>擷取指定模型的驗證中繼資料，並將每個規則套用至資料欄位。</summary>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="modelName">正在驗證之屬性或模型物件的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="modelName" /> 參數是 null。</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidateFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>擷取指定模型的驗證中繼資料，並將每個規則套用至資料欄位。</summary>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>如果 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中的指定欄位發生錯誤，則顯示驗證訊息。</summary>
      <returns>如果屬性或物件有效則為空字串，否則為包含錯誤訊息的 span 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="modelName">正在驗證之屬性或模型物件的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>如果 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中的指定欄位發生錯誤，則顯示驗證訊息。</summary>
      <returns>如果屬性或物件有效則為空字串，否則為包含錯誤訊息的 span 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="modelName">正在驗證之屬性或模型物件的名稱。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>如果 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中的指定項目發生錯誤，則顯示驗證訊息。</summary>
      <returns>如果項目有效且用戶端驗證已停用，則為 null。否則為包含錯誤訊息的 <paramref name="tag" /> 項目。</returns>
      <param name="htmlHelper">此方法操作所在的 HTML Helper 執行個體。</param>
      <param name="modelName">要驗證的項目名稱。</param>
      <param name="htmlAttributes">
        <see cref="T:System.Collections.Generic.IDictionary`2" />，包含項目的 HTML 屬性。</param>
      <param name="tag">要對包裝驗證訊息之 HTML 項目設定的標記。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>如果 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中的指定欄位發生錯誤，則顯示驗證訊息。</summary>
      <returns>如果屬性或物件有效則為空字串，否則為包含錯誤訊息的 span 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="modelName">正在驗證之屬性或模型物件的名稱。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)">
      <summary>如果 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中的指定項目發生錯誤，則顯示驗證訊息。</summary>
      <returns>如果項目有效且用戶端驗證已停用，則為 null。否則為包含錯誤訊息的 <paramref name="tag" /> 項目。</returns>
      <param name="htmlHelper">此方法操作所在的 HTML Helper 執行個體。</param>
      <param name="modelName">要驗證的項目名稱。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
      <param name="tag">要對包裝驗證訊息之 HTML 項目設定的標記。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>如果 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中的指定欄位發生錯誤，則顯示驗證訊息。</summary>
      <returns>如果屬性或物件有效則為空字串，否則為包含錯誤訊息的 span 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="modelName">正在驗證之屬性或模型物件的名稱。</param>
      <param name="validationMessage">如果指定的欄位包含錯誤，就會顯示訊息。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>如果 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中的指定欄位發生錯誤，則顯示驗證訊息。</summary>
      <returns>如果屬性或物件有效則為空字串，否則為包含錯誤訊息的 span 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="modelName">正在驗證之屬性或模型物件的名稱。</param>
      <param name="validationMessage">如果指定的欄位包含錯誤，就會顯示訊息。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>如果 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中的指定項目發生錯誤，則顯示驗證訊息。</summary>
      <returns>如果模型物件有效且用戶端驗證已停用，則為 null。否則為包含錯誤訊息的 <paramref name="tag" /> 項目。</returns>
      <param name="htmlHelper">此方法操作所在的 HTML Helper 執行個體。</param>
      <param name="modelName">要驗證的模型物件名稱。</param>
      <param name="validationMessage">指定的項目包含錯誤時要顯示的訊息。</param>
      <param name="htmlAttributes">
        <see cref="T:System.Collections.Generic.IDictionary`2" />，包含項目的 HTML 屬性。</param>
      <param name="tag">要對包裝驗證訊息之 HTML 項目設定的標記。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>如果 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中的指定欄位發生錯誤，則顯示驗證訊息。</summary>
      <returns>如果屬性或物件有效則為空字串，否則為包含錯誤訊息的 span 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="modelName">正在驗證之屬性或模型物件的名稱。</param>
      <param name="validationMessage">如果指定的欄位包含錯誤，就會顯示訊息。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.String)">
      <summary>如果 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中的指定項目發生錯誤，則顯示驗證訊息。</summary>
      <returns>如果項目有效且用戶端驗證已停用，則為 null。否則為包含錯誤訊息的 <paramref name="tag" /> 項目。</returns>
      <param name="htmlHelper">此方法操作所在的 HTML Helper 執行個體。</param>
      <param name="modelName">要驗證的項目名稱。</param>
      <param name="validationMessage">指定的項目包含錯誤時要顯示的訊息。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
      <param name="tag">要對包裝驗證訊息之 HTML 項目設定的標記。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>如果 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中的指定項目發生錯誤，則顯示驗證訊息。</summary>
      <returns>如果項目有效且用戶端驗證已停用，則為 null。否則為包含錯誤訊息的 <paramref name="tag" /> 項目。</returns>
      <param name="htmlHelper">此方法操作所在的 HTML Helper 執行個體。</param>
      <param name="modelName">要驗證的項目名稱。</param>
      <param name="validationMessage">指定的項目包含錯誤時要顯示的訊息。</param>
      <param name="tag">要對包裝驗證訊息之 HTML 項目設定的標記。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>傳回指定運算式所表示之每一個資料欄位的驗證錯誤訊息 HTML 標記。</summary>
      <returns>如果屬性或物件有效則為空字串，否則為包含錯誤訊息的 span 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>使用指定的訊息，傳回指定運算式所表示之每一個資料欄位的驗證錯誤訊息 HTML 標記。</summary>
      <returns>如果屬性或物件有效則為空字串，否則為包含錯誤訊息的 span 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="validationMessage">如果指定的欄位包含錯誤，就會顯示訊息。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用指定的訊息和 HTML 屬性，傳回指定運算式所表示之每一個資料欄位的驗證錯誤訊息 HTML 標記。</summary>
      <returns>如果屬性或物件有效則為空字串，否則為包含錯誤訊息的 span 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="validationMessage">如果指定的欄位包含錯誤，就會顯示訊息。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>傳回指定之運算式的驗證錯誤訊息的 HTML 標記。</summary>
      <returns>如果模型物件有效且用戶端驗證已停用，則為 null。否則為包含錯誤訊息的 <paramref name="tag" /> 項目。</returns>
      <param name="htmlHelper">此方法操作所在的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="validationMessage">發生驗證錯誤時要顯示的訊息。</param>
      <param name="htmlAttributes">
        <see cref="T:System.Collections.Generic.IDictionary`2" />，包含項目的 HTML 屬性。</param>
      <param name="tag">要對包裝驗證訊息之 HTML 項目設定的標記。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>使用指定的訊息和 HTML 屬性，傳回指定運算式所表示之每一個資料欄位的驗證錯誤訊息 HTML 標記。</summary>
      <returns>如果屬性或物件有效則為空字串，否則為包含錯誤訊息的 span 項目。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="validationMessage">如果指定的欄位包含錯誤，就會顯示訊息。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object,System.String)">
      <summary>傳回指定之運算式的驗證錯誤訊息的 HTML 標記。</summary>
      <returns>如果模型物件有效且用戶端驗證已停用，則為 null。否則為包含錯誤訊息的 <paramref name="tag" /> 項目。</returns>
      <param name="htmlHelper">此方法操作所在的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="validationMessage">發生驗證錯誤時要顯示的訊息。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
      <param name="tag">要對包裝驗證訊息之 HTML 項目設定的標記。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>傳回指定之運算式的驗證錯誤訊息的 HTML 標記。</summary>
      <returns>如果模型物件有效且用戶端驗證已停用，則為 null。否則為包含錯誤訊息的 <paramref name="tag" /> 項目。</returns>
      <param name="htmlHelper">此方法操作所在的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要呈現之屬性的物件。</param>
      <param name="validationMessage">發生驗證錯誤時要顯示的訊息。</param>
      <param name="tag">要對包裝驗證訊息之 HTML 項目設定的標記。</param>
      <typeparam name="TModel">模型的型別。</typeparam>
      <typeparam name="TProperty">屬性的型別。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)">
      <summary>傳回 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中驗證訊息的未排序清單 (ul 項目)。</summary>
      <returns>字串，包含未排序的驗證訊息清單 (ul 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean)">
      <summary>傳回 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中驗證訊息的未排序清單 (ul 項目) 並選擇性地只顯示模型層級錯誤。</summary>
      <returns>字串，包含未排序的驗證訊息清單 (ul 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="excludePropertyErrors">true 表示摘要只會顯示模型層級錯誤，而 false 則表示摘要會顯示所有錯誤。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String)">
      <summary>傳回 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中驗證訊息的未排序清單 (ul 項目) 並選擇性地只顯示模型層級錯誤。</summary>
      <returns>字串，包含未排序的驗證訊息清單 (ul 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="excludePropertyErrors">true 表示摘要只會顯示模型層級錯誤，而 false 則表示摘要會顯示所有錯誤。</param>
      <param name="message">要與驗證摘要一起顯示的訊息。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中驗證訊息的未排序清單 (ul 項目) 並選擇性地只顯示模型層級錯誤。</summary>
      <returns>字串，包含未排序的驗證訊息清單 (ul 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="excludePropertyErrors">true 表示摘要只會顯示模型層級錯誤，而 false 則表示摘要會顯示所有錯誤。</param>
      <param name="message">要與驗證摘要一起顯示的訊息。</param>
      <param name="htmlAttributes">字典，其中包含項目的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object)">
      <summary>傳回 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中驗證訊息的未排序清單 (ul 項目) 並選擇性地只顯示模型層級錯誤。</summary>
      <returns>字串，包含未排序的驗證訊息清單 (ul 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="excludePropertyErrors">true 表示摘要只會顯示模型層級錯誤，而 false 則表示摘要會顯示所有錯誤。</param>
      <param name="message">要與驗證摘要一起顯示的訊息。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>傳回 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中驗證訊息的未排序清單 (ul 項目)。</summary>
      <returns>字串，包含未排序的驗證訊息清單 (ul 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HMTL Helper 執行個體。</param>
      <param name="message">如果指定的欄位包含錯誤，就會顯示訊息。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>傳回 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中驗證訊息的未排序清單 (ul 項目)。</summary>
      <returns>字串，包含未排序的驗證訊息清單 (ul 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="message">如果指定的欄位包含錯誤，就會顯示訊息。</param>
      <param name="htmlAttributes">字典，其中包含項目的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>傳回 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 物件中驗證訊息的未排序清單 (ul 項目)。</summary>
      <returns>字串，包含未排序的驗證訊息清單 (ul 項目)。</returns>
      <param name="htmlHelper">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="message">如果指定的欄位包含錯誤，就會顯示訊息。</param>
      <param name="htmlAttributes">物件，包含項目的 HTML 屬性。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.String)"></member>
    <member name="T:System.Web.Mvc.Html.ValueExtensions">
      <summary>提供用來建立與 ASP.NET MVC 模型繫結器和範本相容之自訂 HTML 標記的機制。</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>提供用來建立與 ASP.NET MVC 模型繫結器和範本相容之自訂 HTML 標記的機制。</summary>
      <returns>此值的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">模型的名稱。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>提供用來建立與 ASP.NET MVC 模型繫結器和範本相容之自訂 HTML 標記的機制。</summary>
      <returns>此值的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="name">模型的名稱。</param>
      <param name="format">格式字串。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>提供用來建立與 ASP.NET MVC 模型繫結器和範本相容之自訂 HTML 標記的機制。</summary>
      <returns>此值的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要公開之屬性的物件。</param>
      <typeparam name="TModel">模型。</typeparam>
      <typeparam name="TProperty">屬性。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>提供用來建立與 ASP.NET MVC 模型繫結器和範本相容之自訂 HTML 標記的機制。</summary>
      <returns>此值的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="expression">運算式，可識別包含要公開之屬性的物件。</param>
      <param name="format">格式字串。</param>
      <typeparam name="TModel">模型。</typeparam>
      <typeparam name="TProperty">屬性。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper)">
      <summary>提供用來建立與 ASP.NET MVC 模型繫結器和範本相容之自訂 HTML 標記的機制。</summary>
      <returns>此值的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>提供用來建立與 ASP.NET MVC 模型繫結器和範本相容之自訂 HTML 標記的機制。</summary>
      <returns>此值的 HTML 標記。</returns>
      <param name="html">此方法擴充的 HTML Helper 執行個體。</param>
      <param name="format">格式字串。</param>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser">
      <summary>將 ASP.NET Razor 檢視編譯為類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor">
      <summary>初始化 <see cref="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.InheritsDirective">
      <summary>繼承指示詞。</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.ModelDirective">
      <summary>模型指示詞。</summary>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser">
      <summary>加入 @model 關鍵字的支援，藉此擴充 VBCodeParser 類別。</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.InheritsStatement">
      <summary>設定值，這個值表示目前的程式碼區塊和模型是否應該被繼承。</summary>
      <returns>如果程式碼區塊和模型會被繼承，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.ModelTypeDirective">
      <summary>模型型別指示詞。</summary>
      <returns>傳回 void。</returns>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcWebPageRazorHost">
      <summary>針對指定的檔案設定 ASP.NET Razor 剖析器和程式碼產生器。</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Web.Mvc.Razor.MvcWebPageRazorHost" /> 類別的新執行個體。</summary>
      <param name="virtualPath">ASP.NET Razor 檔案的虛擬路徑。</param>
      <param name="physicalPath">ASP.NET Razor 檔案的實體路徑。</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeGenerator(System.Web.Razor.Generator.RazorCodeGenerator)">
      <summary>傳回 ASP.NET MVC 語言特定的 Razor 程式碼產生器。</summary>
      <returns>ASP.NET MVC 語言特定的 Razor 程式碼產生器。</returns>
      <param name="incomingCodeGenerator">C# 或 Visual Basic 程式碼產生器。</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeParser(System.Web.Razor.Parser.ParserBase)">
      <summary>使用指定的語言剖析器，傳回 ASP.NET MVC 語言特定的 Razor 程式碼剖析器。</summary>
      <returns>ASP.NET MVC 語言特定的 Razor 程式碼剖析器。</returns>
      <param name="incomingCodeParser">C# 或 Visual Basic 程式碼剖析器。</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.DefaultDirectRouteProvider"></member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionDirectRoutes(System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>根據提供的 Factory 及動作建立 <see cref="T:System.Web.Mvc.Routing.RouteEntry" /> 執行個體。路由項目提供所提供之動作的直接路由。</summary>
      <returns>一組路由項目。</returns>
      <param name="actionDescriptor">動作描述元。</param>
      <param name="factories">直接路由 Factory。</param>
      <param name="constraintResolver">條件約束解析程式。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionRouteFactories(System.Web.Mvc.ActionDescriptor)">
      <summary>取得所指定之動作描述元的一組路由 Factory。</summary>
      <returns>一組路由 Factory。</returns>
      <param name="actionDescriptor">動作描述元。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetAreaPrefix(System.Web.Mvc.ControllerDescriptor)">
      <summary>從提供的控制器取得區域前置詞。</summary>
      <returns>區域前置詞或 null。</returns>
      <param name="controllerDescriptor">控制器描述元。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>根據提供的 Factory、控制器及動作建立 <see cref="T:System.Web.Mvc.Routing.RouteEntry" /> 執行個體。路由項目已提供所提供之控制器的直接路由，而且可以到達所提供的動作集。</summary>
      <returns>一組路由項目。</returns>
      <param name="controllerDescriptor">控制器描述元。</param>
      <param name="actionDescriptors">動作描述元。</param>
      <param name="factories">直接路由 Factory。</param>
      <param name="constraintResolver">條件約束解析程式。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerRouteFactories(System.Web.Mvc.ControllerDescriptor)">
      <summary>取得所指定之控制器描述元的路由 Factory。</summary>
      <returns>一組路由 Factory。</returns>
      <param name="controllerDescriptor">控制器描述元。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>根據 <see cref="T:System.Web.Mvc.Routing.IDirectRouteFactory" /> 屬性取得所指定之控制器描述元及動作描述元的直接路由。</summary>
      <returns>一組路由項目。</returns>
      <param name="controllerDescriptor">控制器描述元。</param>
      <param name="actionDescriptors">所有動作的動作描述元。</param>
      <param name="constraintResolver">條件約束解析程式。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetRoutePrefix(System.Web.Mvc.ControllerDescriptor)">
      <summary>從提供的控制器取得路由前置詞。</summary>
      <returns>路由前置詞或 null。</returns>
      <param name="controllerDescriptor">控制器描述元。</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.DefaultInlineConstraintResolver">
      <summary>預設 <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" /> 實作。以剖析常數索引鍵和常數引數的方式解析常數，使用對應來解析常數類型，並呼叫適當的常數類型建構函式。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.#ctor"></member>
    <member name="P:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.ConstraintMap">
      <summary>取得可變動字典，其可對應常數索引鍵至特殊的常數類型。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)"></member>
    <member name="T:System.Web.Mvc.Routing.DirectRouteFactoryContext">
      <summary>表示支援建立直接路由的內容。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver,System.Boolean)">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.DirectRouteFactoryContext" /> 類別的新執行個體。</summary>
      <param name="areaPrefix">如果有則為路由前置字元，由該區域定義。</param>
      <param name="controllerPrefix">如果有則為路由前置字元，由該控制器定義。</param>
      <param name="actions">建立路由的動作描述。</param>
      <param name="inlineConstraintResolver">內部條件約束解析程式。</param>
      <param name="targetIsAction">指出路由是否在動作或控制器層級設定的值。</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.Actions">
      <summary>取得建立路由的動作描述。</summary>
      <returns>建立路由的動作描述。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.AreaPrefix">
      <summary>如果有則取得路由前置字元，由該區域定義。</summary>
      <returns>如果有則為路由前置字元，由該區域定義。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.ControllerPrefix">
      <summary>如果有則取得路由前置字元，由該控制器定義。</summary>
      <returns>如果有則為路由前置字元，由該控制器定義。</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.CreateBuilder(System.String)">
      <summary>建立路由建置器，以建置符合此內容的路由。</summary>
      <returns>建置符合此內容路由的路由建置器。</returns>
      <param name="template">路由範本。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.CreateBuilder(System.String,System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>建立路由建置器，以建置符合此內容的路由。</summary>
      <returns>建置符合此內容路由的路由建置器。</returns>
      <param name="template">路由範本。</param>
      <param name="constraintResolver">如果有則為要使用的內部解析程式，否則為 null。</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.InlineConstraintResolver">
      <summary>取得內部條件約束解析程式。</summary>
      <returns>內部條件約束解析程式。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.TargetIsAction">
      <summary>取得一值，指出路由是否在動作或控制器層級設定。</summary>
      <returns>路由在動作層級中設定時為 true，若路由在控制器層級設定時則為 false。</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteBuilder">
      <summary>定義建立動作直接路由的建置器 (屬性路由)。</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Actions">
      <summary>取得建立路由的動作描述。</summary>
      <returns>建立路由的動作描述。</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteBuilder.Build">
      <summary>根據目前屬性值建立一個路由項目。</summary>
      <returns>建立的路由項目。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Constraints">
      <summary>取得或設定路由條件約束。</summary>
      <returns>路由條件約束。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.DataTokens">
      <summary>取得或設定路由資料語彙基元。</summary>
      <returns>路由資料權杖。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Defaults">
      <summary>取得或設定路由預設值。</summary>
      <returns>路由預設值。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Name">
      <summary>取得或設定路由名稱。</summary>
      <returns>如果未提供名稱，則為路由名稱或 null。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Order">
      <summary>取得或設定路由順序。</summary>
      <returns>路由順序。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Precedence">
      <summary>取得或設定路由優先權。</summary>
      <returns>路由優先權。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.TargetIsAction">
      <summary>取得一值，指出路由是否在動作或控制器層級設定。</summary>
      <returns>路由在動作層級中設定時為 true，若路由在控制器層級設定時則為 false。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Template">
      <summary>取得或設定路由範本。</summary>
      <returns>路由範本。</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteFactory">
      <summary>定義 Factory，其用來直接建立一組動作描述元的路由 (屬性路由)。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteFactory.CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>建立直接路由項目。</summary>
      <returns>直接路由項目。</returns>
      <param name="context">用於建立路由的內容。</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteProvider">
      <summary>定義直接以動作描述元 (屬性路由) 為目標之路由的提供者。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>取得控制器的直接路由。</summary>
      <returns>控制器的一組路由項目。</returns>
      <param name="controllerDescriptor">控制器描述元。</param>
      <param name="actionDescriptors">動作描述元。</param>
      <param name="constraintResolver">內部條件約束解析程式。</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IInlineConstraintResolver">
      <summary>定義抽象方法，用來解析做為 <see cref="T:System.Web.Routing.IRouteConstraint" /> 執行個體的內部條件約束。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)">
      <summary>解析內部條件約束。</summary>
      <returns>要解析的 <see cref="T:System.Web.Routing.IRouteConstraint" /> 內部條件約束。</returns>
      <param name="inlineConstraint">要解析的內部條件約束。</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IRouteInfoProvider">
      <summary>提供建置 System.Web.Routing.Route 的資訊。</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRouteInfoProvider.Name">
      <summary>取得描述 URI 模式符合的路由範本。</summary>
      <returns>描述要用於比對 URI 模式的路由範本。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRouteInfoProvider.Template">
      <summary>取得要產生的路由名稱。</summary>
      <returns>要產生的路由名稱。</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IRoutePrefix">
      <summary>定義路由前置字元。</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRoutePrefix.Prefix">
      <summary>取得路由前置字元。</summary>
      <returns>路由前置字元。</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteBuilder">
      <summary>根據路由資訊建置 <see cref="T:System.Web.Routing.Route" /> 執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.#ctor">
      <summary>使用預設內部條件約束解析器，初始化 <see cref="T:System.Web.Mvc.Routing.RouteBuilder" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.#ctor(System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.RouteBuilder" /> 類別的新執行個體。</summary>
      <param name="constraintResolver">要用來解析內部條件約束的 <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" />。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Reflection.MethodInfo,System.String)">
      <summary>建置特殊動作的 <see cref="T:System.Web.Routing.Route" />。</summary>
      <returns>產生的 <see cref="T:System.Web.Routing.Route" />。</returns>
      <param name="routeTemplate">路由的 Tokenize 路由範本。</param>
      <param name="allowedMethods">路由支援的 HTTP 方法。Null 值會指定支援的所有可能方法。</param>
      <param name="controllerName">相關聯控制器的名稱。</param>
      <param name="actionName">相關聯動作的名稱。</param>
      <param name="targetMethod">已套用路由屬性的方法。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>建置特殊動作的 <see cref="T:System.Web.Routing.Route" />。</summary>
      <returns>產生的路由。</returns>
      <param name="routeTemplate">路由的 Tokenize 路由範本。</param>
      <param name="controllerDescriptor">已套用路由屬性的控制器。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.String,System.Reflection.MethodInfo)">
      <summary>建置 <see cref="T:System.Web.Routing.Route" />。</summary>
      <returns>產生的 <see cref="T:System.Web.Routing.Route" />。</returns>
      <param name="defaults">路由預設值。</param>
      <param name="constraints">路由條件約束。</param>
      <param name="routeTemplate">取消 Tokenize 的路由範本。</param>
      <param name="targetMethod">已套用路由屬性的方法。</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteBuilder.ConstraintResolver">
      <summary>取得用來解析內部條件約束的解析程式。</summary>
      <returns>用來解析內部條件約束的解析程式。</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteEntry">
      <summary>表示已命名路由。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteEntry.#ctor(System.String,System.Web.Routing.Route)">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.RouteEntry" /> 類別的新執行個體。</summary>
      <param name="name">路徑名稱。</param>
      <param name="route">路由。</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteEntry.Name">
      <summary>取得路由名稱。</summary>
      <returns>如果有則為路由名稱，否則為 null。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteEntry.Route">
      <summary>取得路由。</summary>
      <returns>路由。</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteFactoryAttribute">
      <summary>表示包含自訂條件約束的屬性路由。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteFactoryAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.RouteFactoryAttribute" /> 類別的新執行個體。</summary>
      <param name="template">路由範本。</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Constraints">
      <summary>取得路由條件約束。</summary>
      <returns>如果有則為路由條件約束，否則為 null。</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteFactoryAttribute.CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>建立直接路由項目。</summary>
      <returns>直接路由項目。</returns>
      <param name="context">用於建立路由的內容。</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.DataTokens">
      <summary>取得路由資料語彙基元。</summary>
      <returns>如果有則為資料語彙基元，否則為 null。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Defaults">
      <summary>取得路由預設值。</summary>
      <returns>如果有則為路由預設值，否則為 null。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Name">
      <summary>取得或設定路由名稱。</summary>
      <returns>如果有則為路由名稱，否則為 null。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Order">
      <summary>取得或設定路由順序。</summary>
      <returns>路由順序。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Template">
      <summary>取得路由範本。</summary>
      <returns>路由範本。</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint">
      <summary>限制路由參數僅包含小寫或大寫英文字母 A 到 Z。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint">
      <summary>限制路由參數僅表示布林值。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint">
      <summary>以數個子條件約束來限制路由。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.#ctor(System.Collections.Generic.IList{System.Web.Routing.IRouteConstraint})">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint" /> 類別的新執行個體。</summary>
      <param name="constraints">必須符合此條件約束的要符合的子條件約束。</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.Constraints">
      <summary>取得必須符合此條件約束的要符合的子條件約束。</summary>
      <returns>必須符合此條件約束的要符合的子條件約束。</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>判斷此執行個體是否等於指定的路由。</summary>
      <returns>如果這個執行個體等於指定的路由，則為 true，否則為 false。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="route">要比較的路由。</param>
      <param name="parameterName">參數名稱。</param>
      <param name="values">參數值清單。</param>
      <param name="routeDirection">路由方向。</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint">
      <summary>限制路由參數僅表示 <see cref="T:System.DateTime" /> 值。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>判斷此執行個體是否等於指定的路由。</summary>
      <returns>如果這個執行個體等於指定的路由，則為 true，否則為 false。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="route">要比較的路由。</param>
      <param name="parameterName">參數名稱。</param>
      <param name="values">參數值清單。</param>
      <param name="routeDirection">路由方向。</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint">
      <summary>限制路由參數僅表示十進位值。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>判斷此執行個體是否等於指定的路由。</summary>
      <returns>如果這個執行個體等於指定的路由，則為 true，否則為 false。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="route">要比較的路由。</param>
      <param name="parameterName">參數名稱。</param>
      <param name="values">參數值清單。</param>
      <param name="routeDirection">路由方向。</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint">
      <summary>限制路由參數僅表示 64 位元的浮動點值。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>判斷此執行個體是否等於指定的路由。</summary>
      <returns>如果這個執行個體等於指定的路由，則為 true，否則為 false。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="route">要比較的路由。</param>
      <param name="parameterName">參數名稱。</param>
      <param name="values">參數值清單。</param>
      <param name="routeDirection">路由方向。</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint">
      <summary>限制路由參數僅表示 32 位元的浮動點值。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint">
      <summary>限制路由參數僅表示 <see cref="T:System.Guid" /> 值。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>判斷此執行個體是否等於指定的路由。</summary>
      <returns>如果這個執行個體等於指定的路由，則為 true，否則為 false。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="route">要比較的路由。</param>
      <param name="parameterName">參數名稱。</param>
      <param name="values">參數值清單。</param>
      <param name="routeDirection">路由方向。</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.IntRouteConstraint">
      <summary>限制路由參數僅表示 32 位元的整數值。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.IntRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.IntRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint">
      <summary>限制路由參數為給定長度的字串，或位於給定長度範圍內。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32,System.Int32)">
      <summary>初始 <see cref="T:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint" /> 類別的新執行個體，其限制路由參數為給定長度的字串。</summary>
      <param name="minLength">路由參數的最小長度。</param>
      <param name="maxLength">路由參數的最大長度。</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.Length">
      <summary>若已設定，取得路由參數的長度。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.MaxLength">
      <summary>若已設定，取得路由參數的最大長度。</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.MinLength">
      <summary>若已設定，取得路由參數的最小長度。</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.LongRouteConstraint">
      <summary>限制路由參數僅表示 64 位元的整數值。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LongRouteConstraint.#ctor">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.Constraints.LongRouteConstraint" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LongRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>判斷此執行個體是否等於指定的路由。</summary>
      <returns>如果這個執行個體等於指定的路由，則為 true，否則為 false。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="route">要比較的路由。</param>
      <param name="parameterName">參數名稱。</param>
      <param name="values">參數值清單。</param>
      <param name="routeDirection">路由方向。</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint">
      <summary>限制路由參數為最大長度的字串。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.MaxLength">
      <summary>取得路由參數的最大長度。</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint">
      <summary>限制路由參數為最大值的整數。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.#ctor(System.Int64)">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint" /> 類別的新執行個體。</summary>
      <param name="max">最大值。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>判斷此執行個體是否等於指定的路由。</summary>
      <returns>如果這個執行個體等於指定的路由，則為 true，否則為 false。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="route">要比較的路由。</param>
      <param name="parameterName">參數名稱。</param>
      <param name="values">參數值清單。</param>
      <param name="routeDirection">路由方向。</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.Max">
      <summary>取得路由參數的最大值。</summary>
      <returns>路由參數的最大值。</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint">
      <summary>限制路由參數為最大長度的字串。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint" /> 類別的新執行個體。</summary>
      <param name="minLength">最小長度。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>判斷此執行個體是否等於指定的路由。</summary>
      <returns>如果這個執行個體等於指定的路由，則為 true，否則為 false。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="route">要比較的路由。</param>
      <param name="parameterName">比較的名稱。</param>
      <param name="values">參數值清單。</param>
      <param name="routeDirection">路由方向。</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.MinLength">
      <summary>取得路由參數的最小長度。</summary>
      <returns>路由參數的最小長度。</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MinRouteConstraint">
      <summary>限制路由參數為最小值。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.#ctor(System.Int64)">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.Constraints.MinRouteConstraint" /> 類別的新執行個體。</summary>
      <param name="min">最小值。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>判斷此執行個體是否等於指定的路由。</summary>
      <returns>如果這個執行個體等於指定的路由，則為 true，否則為 false。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="route">要比較的路由。</param>
      <param name="parameterName">參數名稱。</param>
      <param name="values">參數值清單。</param>
      <param name="routeDirection">路由方向。</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.Min">
      <summary>取得路由參數的最小值。</summary>
      <returns>路由參數的最小值。</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint">
      <summary>以選擇性參數設為其預設值時不會失敗的內部常數來限制路由。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.#ctor(System.Web.Routing.IRouteConstraint)">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint" /> 類別的新執行個體。</summary>
      <param name="innerConstraint">若參數並非沒有值的選擇性參數，要符合的內部常數</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.InnerConstraint">
      <summary>取得若參數並非沒有值的選擇性參數，要符合的內部常數。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint">
      <summary>限制路由參數為給定值範圍的整數。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.#ctor(System.Int64,System.Int64)">
      <summary>初始化 <see cref="T:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint" /> 類別的新執行個體。</summary>
      <param name="min">最小值。</param>
      <param name="max">最大值。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>判斷此執行個體是否等於指定的路由。</summary>
      <returns>如果這個執行個體等於指定的路由，則為 true，否則為 false。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="route">要比較的路由。</param>
      <param name="parameterName">參數名稱。</param>
      <param name="values">參數值清單。</param>
      <param name="routeDirection">路由方向。</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Max">
      <summary>取得路由參數的最大值。</summary>
      <returns>路由參數的最大值。</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Min">
      <summary>取得路由參數的最小值。</summary>
      <returns>路由參數的最小值。</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint">
      <summary>限制路由參數符合規則運算式。</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.#ctor(System.String)">
      <summary>利用指定的模式，初始化 <see cref="T:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint" /> 類別的新執行個體。</summary>
      <param name="pattern">要符合的模式。</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>判斷此執行個體是否等於指定的路由。</summary>
      <returns>如果這個執行個體等於指定的路由，則為 true，否則為 false。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="route">要比較的路由。</param>
      <param name="parameterName">參數名稱。</param>
      <param name="values">參數值清單。</param>
      <param name="routeDirection">路由方向。</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.Pattern">
      <summary>取得要符合的規則運算式模式。</summary>
      <returns>要符合的規則運算式模式。</returns>
    </member>
  </members>
</doc>